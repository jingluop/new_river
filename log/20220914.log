[2022-09-14 09:15:52,318][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:15:52,326][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:15:52,328][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:15:52,329][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:15:52,339][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 09:15:52,340][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:15:52,340][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:15:52,340][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:15:52,341][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:15:52,341][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:15:52,341][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:15:52,341][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:18:29,548][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:18:29,550][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:18:29,552][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:18:29,553][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:18:29,560][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 09:18:29,561][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:18:29,561][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:18:29,562][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:18:29,562][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:18:29,562][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:18:29,563][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:18:29,563][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:18:30,077][test_collection.py 17][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 09:18:38,783][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:18:38,785][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:18:38,787][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:18:38,788][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:22:09,224][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:22:09,225][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:22:09,227][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:22:09,228][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:22:09,235][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:22:09,235][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:22:09,236][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:22:09,236][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:22:09,236][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:22:09,237][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:22:09,237][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:22:09,237][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:22:09,752][test_collection.py 22][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T01:22:10.931+00:00', 'status': 400, 'error': 'Bad Request', 'message': '', 'path': '/ethereum'}
[2022-09-14 09:22:47,161][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:22:47,163][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:22:47,165][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:22:47,166][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:24:15,934][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:24:15,937][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:24:15,939][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:24:15,940][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:25:06,139][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:25:06,142][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:25:06,144][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:25:06,144][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:25:06,153][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:25:06,153][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:25:06,154][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:25:06,154][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:25:06,155][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:25:06,155][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:25:06,155][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:25:06,155][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:25:06,704][test_collection.py 22][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T01:25:07.884+00:00', 'status': 400, 'error': 'Bad Request', 'message': '', 'path': '/ethereum'}
[2022-09-14 09:30:49,861][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:30:49,863][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:30:49,865][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:30:49,866][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:30:49,872][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:30:49,873][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:30:49,873][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:30:49,873][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:30:49,874][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:30:49,874][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:30:49,874][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:30:49,874][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:30:50,405][test_collection.py 22][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T01:30:51.588+00:00', 'status': 400, 'error': 'Bad Request', 'message': '', 'path': '/ethereum'}
[2022-09-14 09:31:19,368][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:31:19,370][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:31:19,371][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:31:19,372][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:33:58,907][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:33:58,910][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:33:58,912][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:33:58,913][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:33:58,921][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:33:58,922][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:33:58,922][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:33:58,923][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:33:58,923][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:33:58,923][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:33:58,923][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:33:58,923][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:35:59,277][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:35:59,279][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:35:59,281][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:35:59,282][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:35:59,288][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:35:59,289][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:35:59,290][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:35:59,290][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:35:59,291][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:35:59,291][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:35:59,291][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:35:59,292][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:38:30,824][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:38:30,827][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:38:30,828][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:38:30,829][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:38:30,835][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:41:06,635][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:41:06,637][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:41:06,639][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:41:06,640][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:41:58,764][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:41:58,767][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:41:58,768][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:41:58,769][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:44:36,443][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:44:36,446][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:44:36,448][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:44:36,448][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:45:13,168][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:45:13,170][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:45:13,174][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:45:13,174][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:49:35,878][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:49:35,881][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:49:35,884][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:49:35,885][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:50:24,221][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:52:27,991][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:52:27,994][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:52:27,995][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:52:27,996][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:52:28,007][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:52:28,565][test_collection.py 22][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T01:52:29.749+00:00', 'status': 400, 'error': 'Bad Request', 'message': '', 'path': '/ethereum'}
[2022-09-14 09:52:52,474][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:52:52,479][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:52:52,482][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:52:52,483][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:52:52,494][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:52:52,494][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:52:52,494][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:52:52,495][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:52:52,495][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 09:52:52,495][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:52:52,495][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:52:52,496][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:52:53,078][test_collection.py 22][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T01:52:54.245+00:00', 'status': 400, 'error': 'Bad Request', 'message': '', 'path': '/ethereum'}
[2022-09-14 09:53:29,909][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:53:29,912][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:53:29,913][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:53:29,914][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:53:29,922][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:53:29,922][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:53:29,922][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:53:29,922][base_api.py 63][INFO]: 接口请求 params 参数 ==>> null
[2022-09-14 09:53:29,923][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:53:29,923][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 09:53:29,924][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> None
[2022-09-14 09:53:29,924][base_api.py 67][INFO]: 接口 cookies 参数 ==>> null
[2022-09-14 09:53:30,532][test_collection.py 22][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T01:53:31.685+00:00', 'status': 400, 'error': 'Bad Request', 'message': '', 'path': '/ethereum'}
[2022-09-14 09:54:13,912][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:54:13,914][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:54:13,915][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:54:13,916][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:54:13,923][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:54:13,923][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:54:13,923][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:54:13,924][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 09:54:13,924][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:54:13,925][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:54:13,925][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 09:54:13,927][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 09:54:14,436][test_collection.py 22][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 09:58:56,978][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:58:56,980][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:58:56,982][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:58:56,983][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:58:56,989][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:58:56,989][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:58:56,990][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:58:56,990][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 09:58:56,990][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:58:56,990][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:58:56,990][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 09:58:57,002][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 09:59:27,136][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:59:27,138][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:59:27,139][config.py 42][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 09:59:27,139][config.py 46][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 09:59:27,148][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 09:59:27,148][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 09:59:27,148][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 09:59:27,148][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 09:59:27,149][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 09:59:27,149][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 09:59:27,149][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 09:59:27,162][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 09:59:27,644][test_collection.py 22][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:43:06,167][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:43:06,168][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:43:06,170][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:43:06,170][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:43:06,170][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:43:06,181][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:46:13,961][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:46:13,963][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:46:13,965][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:46:13,966][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:46:13,966][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:46:13,976][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:47:37,764][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:47:37,766][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:47:37,769][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:47:37,770][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:47:37,770][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:47:37,774][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:47:37,775][data_load.py 63][INFO]: 返回的yaml数据==>> {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]}
[2022-09-14 10:48:31,949][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:48:31,951][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:48:31,951][data_load.py 63][INFO]: 返回的yaml数据==>> {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]}
[2022-09-14 10:49:16,212][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:49:59,742][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:49:59,745][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:50:34,477][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:50:34,478][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:50:34,480][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:50:34,481][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:50:34,481][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:50:34,488][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:50:34,513][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:50:34,514][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:50:34,514][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:50:34,515][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:50:34,515][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:50:34,515][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:50:34,515][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 10:50:34,515][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:50:35,014][test_collection.py 26][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:52:13,877][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:52:13,878][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:52:13,880][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:52:13,880][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:52:13,881][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:52:13,890][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:52:13,906][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:52:13,906][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:52:13,906][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:52:13,906][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:52:13,906][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:52:13,906][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:52:13,907][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 10:52:13,907][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:52:14,497][test_collection.py 26][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:52:56,437][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:52:56,438][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:52:56,439][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:52:56,440][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:52:56,440][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:52:56,442][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:52:56,451][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:52:56,451][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:52:56,451][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:52:56,452][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:52:56,452][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:52:56,452][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:52:56,452][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 10:52:56,453][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:52:56,918][test_collection.py 26][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:53:42,928][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:53:42,929][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:53:42,930][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:53:42,931][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:53:42,931][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:53:42,942][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:53:42,955][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:53:42,956][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:53:42,956][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:53:42,956][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:53:42,956][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:53:42,956][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:53:42,956][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 10:53:42,957][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:53:43,504][test_collection.py 26][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:53:43,516][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:53:43,517][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:53:43,517][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:53:43,517][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 10:53:43,518][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:53:43,518][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:53:43,518][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 10:53:43,518][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 10:53:43,979][test_collection.py 26][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 10:56:16,920][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:56:16,921][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:56:16,922][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:56:16,922][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:56:16,922][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:56:16,933][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 747.4714729146486, datetime.date(2022, 9, 13), '操作成功']]} 
[2022-09-14 10:56:16,943][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:56:16,944][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:56:16,945][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:56:16,945][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:56:16,945][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:56:16,945][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:56:16,945][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 10:56:16,945][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:56:17,475][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:56:17,603][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:56:17,603][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:56:17,604][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:56:17,604][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 10:56:17,604][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:56:17,604][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:56:17,604][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 10:56:17,604][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 10:56:18,126][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 10:56:50,604][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:56:50,605][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:56:50,605][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:56:50,606][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:56:50,607][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:56:50,619][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', '200', 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', '200', 747.4714729146486, '2022-09-13', '操作成功']]} 
[2022-09-14 10:56:50,631][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:56:50,631][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:56:50,631][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:56:50,632][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:56:50,632][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:56:50,632][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:56:50,632][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 10:56:50,632][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:56:51,106][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:56:51,235][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:56:51,236][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:56:51,236][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:56:51,236][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 10:56:51,236][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:56:51,237][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:56:51,237][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 10:56:51,237][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 10:56:51,679][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 10:57:09,580][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:57:09,582][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:57:09,583][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:57:09,583][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:57:09,584][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:57:09,588][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 747.4714729146486, '2022-09-13', '操作成功']]} 
[2022-09-14 10:57:09,600][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:57:09,600][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:57:09,600][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:57:09,600][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:57:09,601][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:57:09,601][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:57:09,601][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 10:57:09,601][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 10:57:10,099][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:57:10,111][base_api.py 59][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 10:57:10,111][base_api.py 60][INFO]: 接口请求方式 ==>> GET
[2022-09-14 10:57:10,112][base_api.py 62][INFO]: 接口请求头 ==>> null
[2022-09-14 10:57:10,112][base_api.py 63][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 10:57:10,112][base_api.py 64][INFO]: 接口请求体 data 参数 ==>> null
[2022-09-14 10:57:10,112][base_api.py 65][INFO]: 接口请求体 json 参数 ==>> null
[2022-09-14 10:57:10,113][base_api.py 66][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 10:57:10,113][base_api.py 67][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 10:57:10,655][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 10:58:50,485][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:58:50,486][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:58:50,487][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:58:50,488][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:58:50,488][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:58:50,499][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功']]} 
[2022-09-14 10:58:50,972][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:58:51,465][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 10:59:38,179][run.py 15][INFO]: 开始执行用例...
[2022-09-14 10:59:38,614][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:59:38,614][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:59:38,615][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 10:59:38,616][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 10:59:38,616][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 10:59:38,618][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功']]} 
[2022-09-14 10:59:39,132][test_collection.py 18][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 10:59:39,686][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 10:59:40,226][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:00:45,320][run.py 15][INFO]: 开始执行用例...
[2022-09-14 11:00:45,737][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:00:45,738][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:00:45,739][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:00:45,739][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:00:45,739][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:00:45,741][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 66397.0, '2022-09-13', '操作成功']]} 
[2022-09-14 11:00:46,225][test_collection.py 18][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:00:46,771][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:00:47,246][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:00:47,853][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:01:03,864][run.py 15][INFO]: 开始执行用例...
[2022-09-14 11:01:04,397][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:01:04,397][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:01:04,398][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:01:04,399][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:01:04,399][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:01:04,401][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:01:04,905][test_collection.py 18][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:01:05,447][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:01:05,988][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:01:06,518][test_collection.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:11:16,014][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:11:16,015][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:11:16,016][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:11:16,017][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:11:16,017][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:11:16,021][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:11:16,021][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:11:16,023][data_load.py 34][INFO]: 读到数据 ==>>  {'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:11:16,033][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:11:16,034][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:11:16,560][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:11:16,561][test_collection.py 19][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:11:16,702][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:11:16,702][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:11:17,160][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:11:17,161][test_collection.py 19][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:11:17,179][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:11:17,179][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:11:17,717][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:11:17,717][test_collection.py 19][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:12:14,062][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:12:14,064][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:12:14,064][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:12:14,065][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:12:14,065][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:12:14,074][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': 2996, 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:12:14,074][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:12:14,078][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': 2996, 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:12:33,361][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:12:33,362][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:12:33,362][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:12:33,363][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:12:33,363][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:12:33,376][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:12:33,376][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:12:33,380][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:12:33,393][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:12:33,393][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:12:33,932][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:12:33,932][test_collection.py 19][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:12:51,915][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:12:51,916][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:12:51,917][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:12:51,918][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:12:51,918][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:12:51,930][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:12:51,931][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:12:51,934][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:12:51,945][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:12:51,945][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:12:52,475][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:13:00,166][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:13:00,167][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:13:00,167][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:13:00,168][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:13:00,168][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:13:00,180][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:13:00,181][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_ethereum.yaml 文件......
[2022-09-14 11:13:00,185][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:13:00,197][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:13:00,198][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:13:00,198][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:13:00,198][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:13:00,198][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:13:00,672][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:13:00,678][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:13:00,679][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:13:00,679][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:13:00,679][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:13:00,679][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:13:01,136][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:13:01,142][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:13:01,142][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:13:01,143][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:13:01,143][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:13:01,143][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:13:01,658][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:22:53,762][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:22:53,763][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:22:53,764][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:22:53,764][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:22:53,765][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:22:53,787][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:22:53,787][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:22:53,797][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功']]} 
[2022-09-14 11:22:53,809][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:22:53,809][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:54,391][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:22:54,399][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:54,400][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:54,401][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:22:54,401][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:22:54,401][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:22:54,861][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:22:54,865][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:54,866][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:54,866][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:22:54,866][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:22:54,867][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:22:55,306][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:22:55,313][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:55,314][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:55,314][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:22:55,315][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:22:55,315][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:22:55,779][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:22:55,792][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:55,792][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:55,793][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:22:55,793][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:22:55,793][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:22:56,307][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:22:56,421][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:56,422][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:56,422][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:22:56,422][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:22:56,423][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:22:56,902][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:22:56,919][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:56,919][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:56,920][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:22:56,920][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:22:56,921][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:22:57,408][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:22:57,418][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:57,418][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:57,419][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:22:57,419][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:22:57,420][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:22:57,981][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:22:57,988][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:57,989][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:57,989][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:22:57,989][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:22:57,990][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:22:58,441][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:22:58,450][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:58,451][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:58,451][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:22:58,452][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:22:58,452][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:22:58,932][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:22:58,949][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:58,949][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:58,950][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:22:58,950][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:22:58,950][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:22:59,494][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:22:59,502][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:22:59,502][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:22:59,502][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:22:59,502][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:22:59,503][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:23:00,017][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:23:00,049][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:00,050][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:00,051][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:23:00,051][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:23:00,051][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:23:00,629][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:23:00,639][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:00,639][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:00,639][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:23:00,640][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:23:00,640][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:23:01,099][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:23:01,112][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:01,112][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:01,112][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:23:01,112][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:23:01,113][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:23:01,653][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:23:01,661][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:01,661][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:01,662][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:23:01,662][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:23:01,662][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:23:02,207][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:23:02,217][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:02,218][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:02,218][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:23:02,219][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:23:02,219][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:23:02,749][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1130.2153386307432}, {'date': '2022-06-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 658.7653746424581}, {'date': '2022-06-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 764.8376891252041}, {'date': '2022-06-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1027.7549275103856}, {'date': '2022-06-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 863.2903226545179}, {'date': '2022-06-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.5252902639631}, {'date': '2022-06-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 657.3205147281676}, {'date': '2022-06-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 557.3471801791424}, {'date': '2022-06-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 650.9048730321116}, {'date': '2022-06-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 707.5615812251513}, {'date': '2022-06-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 456.5533547970849}, {'date': '2022-06-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.64840992711197}, {'date': '2022-06-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 576.1700357605589}, {'date': '2022-06-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 686.6988685822947}, {'date': '2022-06-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 961.9146498281193}, {'date': '2022-06-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 821.809321181829}, {'date': '2022-07-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 671.4649007660753}, {'date': '2022-07-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 475.7022288258552}, {'date': '2022-07-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.9865272110347}, {'date': '2022-07-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 547.8185734655426}, {'date': '2022-07-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 623.4579113358901}, {'date': '2022-07-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 626.4906818800378}, {'date': '2022-07-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 583.5159343187497}, {'date': '2022-07-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 556.9385770131255}, {'date': '2022-07-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1234.0013068363296}, {'date': '2022-07-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 471.2633289109558}, {'date': '2022-07-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.4232823671841}, {'date': '2022-07-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 628.2175269558061}, {'date': '2022-07-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 846.0479807260858}, {'date': '2022-07-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 624.869942847172}, {'date': '2022-07-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.9155075023274}, {'date': '2022-07-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 762.2685523410313}, {'date': '2022-07-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 607.1143338953805}, {'date': '2022-07-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 701.7335204186162}, {'date': '2022-07-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 742.5538750550869}, {'date': '2022-07-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 655.3205099835359}, {'date': '2022-07-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 605.3507387000202}, {'date': '2022-07-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 521.0488930570237}, {'date': '2022-07-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1050742247084}, {'date': '2022-07-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1778917972108}, {'date': '2022-07-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 586.9952049337337}, {'date': '2022-07-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 581.3433611624348}, {'date': '2022-07-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 665.4164756818623}, {'date': '2022-07-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 656.247899123594}, {'date': '2022-07-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 570.7312352479605}, {'date': '2022-07-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 446.63503206525445}, {'date': '2022-07-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 427.87791855870694}, {'date': '2022-08-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1161.5622421837932}, {'date': '2022-08-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.765286479655}, {'date': '2022-08-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.5333965496637}, {'date': '2022-08-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 437.82658923147443}, {'date': '2022-08-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.5998643704631}, {'date': '2022-08-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 360.6543509735758}, {'date': '2022-08-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 399.88676998116074}, {'date': '2022-08-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.1786424255162}, {'date': '2022-08-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 537.8759360306113}, {'date': '2022-08-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 767.3983997589413}, {'date': '2022-08-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.667400523998}, {'date': '2022-08-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 467.511391415449}, {'date': '2022-08-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 408.86920350298635}, {'date': '2022-08-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 424.0824841072914}, {'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:23:02,765][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:02,765][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:02,767][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:23:02,767][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:23:02,767][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:23:03,251][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78963.0}, {'date': '2022-06-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76504.0}, {'date': '2022-06-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74829.0}, {'date': '2022-06-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74119.0}, {'date': '2022-06-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67844.0}, {'date': '2022-06-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73130.0}, {'date': '2022-06-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 68883.0}, {'date': '2022-06-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75794.0}, {'date': '2022-06-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69340.0}, {'date': '2022-06-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67889.0}, {'date': '2022-06-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62253.0}, {'date': '2022-06-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62115.0}, {'date': '2022-06-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76731.0}, {'date': '2022-06-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62674.0}, {'date': '2022-06-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64781.0}, {'date': '2022-06-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 58937.0}, {'date': '2022-07-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81309.0}, {'date': '2022-07-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 94111.0}, {'date': '2022-07-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81274.0}, {'date': '2022-07-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78510.0}, {'date': '2022-07-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76109.0}, {'date': '2022-07-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 88296.0}, {'date': '2022-07-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 87905.0}, {'date': '2022-07-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 84614.0}, {'date': '2022-07-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 86385.0}, {'date': '2022-07-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 85916.0}, {'date': '2022-07-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66510.0}, {'date': '2022-07-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66481.0}, {'date': '2022-07-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64806.0}, {'date': '2022-07-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69588.0}, {'date': '2022-07-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71378.0}, {'date': '2022-07-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67946.0}, {'date': '2022-07-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 63045.0}, {'date': '2022-07-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73373.0}, {'date': '2022-07-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75062.0}, {'date': '2022-07-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72732.0}, {'date': '2022-07-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71341.0}, {'date': '2022-07-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 80464.0}, {'date': '2022-07-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76116.0}, {'date': '2022-07-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73573.0}, {'date': '2022-07-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76792.0}, {'date': '2022-07-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83821.0}, {'date': '2022-07-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 101249.0}, {'date': '2022-07-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78027.0}, {'date': '2022-07-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74229.0}, {'date': '2022-07-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 82475.0}, {'date': '2022-07-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72958.0}, {'date': '2022-08-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 96343.0}, {'date': '2022-08-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 93211.0}, {'date': '2022-08-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 100747.0}, {'date': '2022-08-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78300.0}, {'date': '2022-08-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76269.0}, {'date': '2022-08-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83702.0}, {'date': '2022-08-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 92714.0}, {'date': '2022-08-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74723.0}, {'date': '2022-08-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74597.0}, {'date': '2022-08-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75742.0}, {'date': '2022-08-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75743.0}, {'date': '2022-08-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81111.0}, {'date': '2022-08-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70384.0}, {'date': '2022-08-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73163.0}, {'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:23:03,261][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:03,261][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:03,262][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:23:03,262][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:23:03,262][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:23:03,781][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-06-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-06-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-06-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-06-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5136}, {'date': '2022-06-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5132}, {'date': '2022-07-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-07-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-07-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-07-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.513}, {'date': '2022-07-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.516}, {'date': '2022-07-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-08-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5152}, {'date': '2022-08-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5158}, {'date': '2022-08-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-08-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-08-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5153}, {'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:23:03,797][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:03,797][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:03,798][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:23:03,798][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:23:03,799][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:23:04,337][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 961544.4888}, {'date': '2022-06-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 976860.627}, {'date': '2022-06-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 990357.0991}, {'date': '2022-06-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 994032.0663}, {'date': '2022-06-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 948768.482}, {'date': '2022-06-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 951603.932}, {'date': '2022-06-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 951648.0126}, {'date': '2022-06-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 946250.5064}, {'date': '2022-06-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 925165.0995}, {'date': '2022-06-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 928664.2792}, {'date': '2022-06-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 951264.7294}, {'date': '2022-06-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 909572.1972}, {'date': '2022-06-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 943907.9322}, {'date': '2022-06-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 912596.1668}, {'date': '2022-06-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 914229.795}, {'date': '2022-06-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 907696.3864}, {'date': '2022-07-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 913699.6861}, {'date': '2022-07-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 910836.3933}, {'date': '2022-07-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 929281.8055}, {'date': '2022-07-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 916029.4626}, {'date': '2022-07-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 925866.8559}, {'date': '2022-07-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 915898.3569}, {'date': '2022-07-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 902152.6591}, {'date': '2022-07-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 933428.8784}, {'date': '2022-07-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 906382.5003}, {'date': '2022-07-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 929678.6187}, {'date': '2022-07-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 902473.6572}, {'date': '2022-07-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 932550.9544}, {'date': '2022-07-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 885912.125}, {'date': '2022-07-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 903941.997}, {'date': '2022-07-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 914778.4239}, {'date': '2022-07-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 925490.4229}, {'date': '2022-07-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 912465.5046}, {'date': '2022-07-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 927345.1384}, {'date': '2022-07-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 941796.1407}, {'date': '2022-07-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 929182.437}, {'date': '2022-07-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.5079}, {'date': '2022-07-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 920281.7657}, {'date': '2022-07-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 959451.2137}, {'date': '2022-07-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 943248.4951}, {'date': '2022-07-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 917413.4802}, {'date': '2022-07-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 927845.3406}, {'date': '2022-07-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 929397.4788}, {'date': '2022-07-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 943049.8504}, {'date': '2022-07-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 919539.6407}, {'date': '2022-07-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 932188.9655}, {'date': '2022-07-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.6693}, {'date': '2022-08-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 926505.5348}, {'date': '2022-08-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 951185.5973}, {'date': '2022-08-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 920522.2392}, {'date': '2022-08-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 929250.0714}, {'date': '2022-08-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 955577.2334}, {'date': '2022-08-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 928465.88}, {'date': '2022-08-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 930127.3479}, {'date': '2022-08-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 910140.7774}, {'date': '2022-08-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 920896.6643}, {'date': '2022-08-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 925844.0338}, {'date': '2022-08-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 931222.4967}, {'date': '2022-08-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 917682.3721}, {'date': '2022-08-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 948337.4973}, {'date': '2022-08-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 948763.7166}, {'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:23:04,351][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:23:04,352][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:23:04,352][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:23:04,352][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:23:04,352][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:23:04,898][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1097000.0}, {'date': '2022-06-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1100312.0}, {'date': '2022-06-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1110579.0}, {'date': '2022-06-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1058336.0}, {'date': '2022-06-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1018674.0}, {'date': '2022-06-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1042748.0}, {'date': '2022-06-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1012862.0}, {'date': '2022-06-22', 'type': 'TRANSACTION_COUNT', 'countValue': 988683.0}, {'date': '2022-06-23', 'type': 'TRANSACTION_COUNT', 'countValue': 967965.0}, {'date': '2022-06-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1019472.0}, {'date': '2022-06-25', 'type': 'TRANSACTION_COUNT', 'countValue': 939290.0}, {'date': '2022-06-26', 'type': 'TRANSACTION_COUNT', 'countValue': 919721.0}, {'date': '2022-06-27', 'type': 'TRANSACTION_COUNT', 'countValue': 994102.0}, {'date': '2022-06-28', 'type': 'TRANSACTION_COUNT', 'countValue': 976577.0}, {'date': '2022-06-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1005558.0}, {'date': '2022-06-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1054433.0}, {'date': '2022-07-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1178620.0}, {'date': '2022-07-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1189382.0}, {'date': '2022-07-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1157052.0}, {'date': '2022-07-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1151999.0}, {'date': '2022-07-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1182504.0}, {'date': '2022-07-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1161432.0}, {'date': '2022-07-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1194330.0}, {'date': '2022-07-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1192819.0}, {'date': '2022-07-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1170747.0}, {'date': '2022-07-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1148695.0}, {'date': '2022-07-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1146369.0}, {'date': '2022-07-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1135896.0}, {'date': '2022-07-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1174882.0}, {'date': '2022-07-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1189567.0}, {'date': '2022-07-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1217596.0}, {'date': '2022-07-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1241502.0}, {'date': '2022-07-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1245545.0}, {'date': '2022-07-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1213565.0}, {'date': '2022-07-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1175526.0}, {'date': '2022-07-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1191452.0}, {'date': '2022-07-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1204397.0}, {'date': '2022-07-22', 'type': 'TRANSACTION_COUNT', 'countValue': 1201699.0}, {'date': '2022-07-23', 'type': 'TRANSACTION_COUNT', 'countValue': 1144468.0}, {'date': '2022-07-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1122303.0}, {'date': '2022-07-25', 'type': 'TRANSACTION_COUNT', 'countValue': 1275861.0}, {'date': '2022-07-26', 'type': 'TRANSACTION_COUNT', 'countValue': 1679068.0}, {'date': '2022-07-27', 'type': 'TRANSACTION_COUNT', 'countValue': 1197448.0}, {'date': '2022-07-28', 'type': 'TRANSACTION_COUNT', 'countValue': 1158182.0}, {'date': '2022-07-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1192330.0}, {'date': '2022-07-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1179749.0}, {'date': '2022-07-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1158621.0}, {'date': '2022-08-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1342202.0}, {'date': '2022-08-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1206185.0}, {'date': '2022-08-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1250888.0}, {'date': '2022-08-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1458612.0}, {'date': '2022-08-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1207188.0}, {'date': '2022-08-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1148225.0}, {'date': '2022-08-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1166932.0}, {'date': '2022-08-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1167115.0}, {'date': '2022-08-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1125139.0}, {'date': '2022-08-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1160380.0}, {'date': '2022-08-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1098707.0}, {'date': '2022-08-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1130848.0}, {'date': '2022-08-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1106236.0}, {'date': '2022-08-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1102367.0}, {'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:26:49,171][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:26:49,172][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:26:49,173][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:26:49,173][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:26:49,174][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:26:49,199][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功']]} 
[2022-09-14 11:26:49,200][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:26:49,210][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功']]} 
[2022-09-14 11:26:49,221][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:26:49,221][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:49,689][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:26:49,699][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:49,700][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:49,700][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:26:49,701][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:26:49,701][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:26:50,169][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:26:50,179][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:50,180][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:50,181][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:26:50,181][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:26:50,181][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:26:50,690][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:26:50,702][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:50,702][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:50,703][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:26:50,703][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:26:50,703][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:26:51,263][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:26:51,270][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:51,271][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:51,271][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:26:51,271][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:26:51,272][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:26:51,810][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:26:51,817][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:51,818][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:51,818][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:26:51,819][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:26:51,820][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:26:52,334][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:26:52,339][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:52,339][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:52,339][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:26:52,340][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:26:52,340][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:26:52,795][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:26:52,806][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:52,806][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:52,807][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:26:52,807][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:26:52,807][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:26:53,268][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:26:53,271][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:53,272][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:53,272][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:26:53,272][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:26:53,273][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:26:53,743][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:26:53,754][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:53,754][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:53,754][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:26:53,755][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:26:53,755][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:26:54,332][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:26:54,344][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:54,345][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:54,345][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:26:54,345][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:26:54,345][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:26:54,802][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:26:54,813][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:54,814][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:54,814][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:26:54,815][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:26:54,815][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:26:55,263][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:26:55,431][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:55,432][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:55,432][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:26:55,433][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:26:55,433][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:26:55,931][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:26:55,951][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:55,952][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:55,952][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:26:55,953][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:26:55,953][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:26:56,470][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:26:56,485][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:56,486][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:56,486][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:26:56,486][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:26:56,486][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:26:57,357][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:26:57,374][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:57,374][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:57,374][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:26:57,375][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:26:57,375][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:26:57,852][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:26:57,870][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:57,870][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:57,870][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:26:57,871][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:26:57,871][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:26:58,400][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1130.2153386307432}, {'date': '2022-06-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 658.7653746424581}, {'date': '2022-06-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 764.8376891252041}, {'date': '2022-06-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1027.7549275103856}, {'date': '2022-06-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 863.2903226545179}, {'date': '2022-06-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.5252902639631}, {'date': '2022-06-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 657.3205147281676}, {'date': '2022-06-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 557.3471801791424}, {'date': '2022-06-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 650.9048730321116}, {'date': '2022-06-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 707.5615812251513}, {'date': '2022-06-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 456.5533547970849}, {'date': '2022-06-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.64840992711197}, {'date': '2022-06-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 576.1700357605589}, {'date': '2022-06-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 686.6988685822947}, {'date': '2022-06-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 961.9146498281193}, {'date': '2022-06-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 821.809321181829}, {'date': '2022-07-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 671.4649007660753}, {'date': '2022-07-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 475.7022288258552}, {'date': '2022-07-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.9865272110347}, {'date': '2022-07-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 547.8185734655426}, {'date': '2022-07-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 623.4579113358901}, {'date': '2022-07-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 626.4906818800378}, {'date': '2022-07-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 583.5159343187497}, {'date': '2022-07-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 556.9385770131255}, {'date': '2022-07-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1234.0013068363296}, {'date': '2022-07-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 471.2633289109558}, {'date': '2022-07-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.4232823671841}, {'date': '2022-07-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 628.2175269558061}, {'date': '2022-07-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 846.0479807260858}, {'date': '2022-07-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 624.869942847172}, {'date': '2022-07-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.9155075023274}, {'date': '2022-07-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 762.2685523410313}, {'date': '2022-07-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 607.1143338953805}, {'date': '2022-07-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 701.7335204186162}, {'date': '2022-07-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 742.5538750550869}, {'date': '2022-07-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 655.3205099835359}, {'date': '2022-07-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 605.3507387000202}, {'date': '2022-07-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 521.0488930570237}, {'date': '2022-07-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1050742247084}, {'date': '2022-07-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1778917972108}, {'date': '2022-07-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 586.9952049337337}, {'date': '2022-07-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 581.3433611624348}, {'date': '2022-07-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 665.4164756818623}, {'date': '2022-07-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 656.247899123594}, {'date': '2022-07-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 570.7312352479605}, {'date': '2022-07-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 446.63503206525445}, {'date': '2022-07-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 427.87791855870694}, {'date': '2022-08-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1161.5622421837932}, {'date': '2022-08-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.765286479655}, {'date': '2022-08-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.5333965496637}, {'date': '2022-08-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 437.82658923147443}, {'date': '2022-08-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.5998643704631}, {'date': '2022-08-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 360.6543509735758}, {'date': '2022-08-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 399.88676998116074}, {'date': '2022-08-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.1786424255162}, {'date': '2022-08-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 537.8759360306113}, {'date': '2022-08-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 767.3983997589413}, {'date': '2022-08-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.667400523998}, {'date': '2022-08-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 467.511391415449}, {'date': '2022-08-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 408.86920350298635}, {'date': '2022-08-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 424.0824841072914}, {'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:26:58,421][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:58,422][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:58,422][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:26:58,422][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:26:58,422][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:26:58,965][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78963.0}, {'date': '2022-06-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76504.0}, {'date': '2022-06-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74829.0}, {'date': '2022-06-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74119.0}, {'date': '2022-06-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67844.0}, {'date': '2022-06-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73130.0}, {'date': '2022-06-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 68883.0}, {'date': '2022-06-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75794.0}, {'date': '2022-06-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69340.0}, {'date': '2022-06-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67889.0}, {'date': '2022-06-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62253.0}, {'date': '2022-06-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62115.0}, {'date': '2022-06-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76731.0}, {'date': '2022-06-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62674.0}, {'date': '2022-06-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64781.0}, {'date': '2022-06-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 58937.0}, {'date': '2022-07-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81309.0}, {'date': '2022-07-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 94111.0}, {'date': '2022-07-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81274.0}, {'date': '2022-07-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78510.0}, {'date': '2022-07-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76109.0}, {'date': '2022-07-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 88296.0}, {'date': '2022-07-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 87905.0}, {'date': '2022-07-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 84614.0}, {'date': '2022-07-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 86385.0}, {'date': '2022-07-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 85916.0}, {'date': '2022-07-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66510.0}, {'date': '2022-07-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66481.0}, {'date': '2022-07-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64806.0}, {'date': '2022-07-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69588.0}, {'date': '2022-07-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71378.0}, {'date': '2022-07-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67946.0}, {'date': '2022-07-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 63045.0}, {'date': '2022-07-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73373.0}, {'date': '2022-07-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75062.0}, {'date': '2022-07-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72732.0}, {'date': '2022-07-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71341.0}, {'date': '2022-07-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 80464.0}, {'date': '2022-07-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76116.0}, {'date': '2022-07-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73573.0}, {'date': '2022-07-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76792.0}, {'date': '2022-07-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83821.0}, {'date': '2022-07-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 101249.0}, {'date': '2022-07-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78027.0}, {'date': '2022-07-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74229.0}, {'date': '2022-07-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 82475.0}, {'date': '2022-07-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72958.0}, {'date': '2022-08-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 96343.0}, {'date': '2022-08-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 93211.0}, {'date': '2022-08-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 100747.0}, {'date': '2022-08-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78300.0}, {'date': '2022-08-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76269.0}, {'date': '2022-08-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83702.0}, {'date': '2022-08-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 92714.0}, {'date': '2022-08-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74723.0}, {'date': '2022-08-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74597.0}, {'date': '2022-08-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75742.0}, {'date': '2022-08-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75743.0}, {'date': '2022-08-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81111.0}, {'date': '2022-08-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70384.0}, {'date': '2022-08-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73163.0}, {'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:26:59,001][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:59,001][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:59,002][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:26:59,002][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:26:59,002][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:26:59,611][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-06-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-06-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-06-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-06-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5136}, {'date': '2022-06-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5132}, {'date': '2022-07-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-07-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-07-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-07-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.513}, {'date': '2022-07-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.516}, {'date': '2022-07-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-08-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5152}, {'date': '2022-08-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5158}, {'date': '2022-08-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-08-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-08-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5153}, {'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:26:59,625][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:26:59,625][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:26:59,626][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:26:59,626][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:26:59,627][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:27:00,088][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 961544.4888}, {'date': '2022-06-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 976860.627}, {'date': '2022-06-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 990357.0991}, {'date': '2022-06-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 994032.0663}, {'date': '2022-06-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 948768.482}, {'date': '2022-06-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 951603.932}, {'date': '2022-06-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 951648.0126}, {'date': '2022-06-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 946250.5064}, {'date': '2022-06-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 925165.0995}, {'date': '2022-06-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 928664.2792}, {'date': '2022-06-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 951264.7294}, {'date': '2022-06-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 909572.1972}, {'date': '2022-06-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 943907.9322}, {'date': '2022-06-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 912596.1668}, {'date': '2022-06-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 914229.795}, {'date': '2022-06-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 907696.3864}, {'date': '2022-07-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 913699.6861}, {'date': '2022-07-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 910836.3933}, {'date': '2022-07-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 929281.8055}, {'date': '2022-07-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 916029.4626}, {'date': '2022-07-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 925866.8559}, {'date': '2022-07-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 915898.3569}, {'date': '2022-07-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 902152.6591}, {'date': '2022-07-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 933428.8784}, {'date': '2022-07-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 906382.5003}, {'date': '2022-07-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 929678.6187}, {'date': '2022-07-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 902473.6572}, {'date': '2022-07-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 932550.9544}, {'date': '2022-07-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 885912.125}, {'date': '2022-07-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 903941.997}, {'date': '2022-07-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 914778.4239}, {'date': '2022-07-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 925490.4229}, {'date': '2022-07-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 912465.5046}, {'date': '2022-07-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 927345.1384}, {'date': '2022-07-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 941796.1407}, {'date': '2022-07-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 929182.437}, {'date': '2022-07-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.5079}, {'date': '2022-07-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 920281.7657}, {'date': '2022-07-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 959451.2137}, {'date': '2022-07-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 943248.4951}, {'date': '2022-07-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 917413.4802}, {'date': '2022-07-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 927845.3406}, {'date': '2022-07-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 929397.4788}, {'date': '2022-07-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 943049.8504}, {'date': '2022-07-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 919539.6407}, {'date': '2022-07-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 932188.9655}, {'date': '2022-07-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.6693}, {'date': '2022-08-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 926505.5348}, {'date': '2022-08-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 951185.5973}, {'date': '2022-08-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 920522.2392}, {'date': '2022-08-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 929250.0714}, {'date': '2022-08-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 955577.2334}, {'date': '2022-08-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 928465.88}, {'date': '2022-08-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 930127.3479}, {'date': '2022-08-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 910140.7774}, {'date': '2022-08-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 920896.6643}, {'date': '2022-08-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 925844.0338}, {'date': '2022-08-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 931222.4967}, {'date': '2022-08-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 917682.3721}, {'date': '2022-08-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 948337.4973}, {'date': '2022-08-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 948763.7166}, {'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:27:00,099][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:27:00,100][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:27:00,100][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:27:00,100][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:27:00,100][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:27:00,673][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1097000.0}, {'date': '2022-06-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1100312.0}, {'date': '2022-06-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1110579.0}, {'date': '2022-06-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1058336.0}, {'date': '2022-06-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1018674.0}, {'date': '2022-06-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1042748.0}, {'date': '2022-06-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1012862.0}, {'date': '2022-06-22', 'type': 'TRANSACTION_COUNT', 'countValue': 988683.0}, {'date': '2022-06-23', 'type': 'TRANSACTION_COUNT', 'countValue': 967965.0}, {'date': '2022-06-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1019472.0}, {'date': '2022-06-25', 'type': 'TRANSACTION_COUNT', 'countValue': 939290.0}, {'date': '2022-06-26', 'type': 'TRANSACTION_COUNT', 'countValue': 919721.0}, {'date': '2022-06-27', 'type': 'TRANSACTION_COUNT', 'countValue': 994102.0}, {'date': '2022-06-28', 'type': 'TRANSACTION_COUNT', 'countValue': 976577.0}, {'date': '2022-06-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1005558.0}, {'date': '2022-06-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1054433.0}, {'date': '2022-07-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1178620.0}, {'date': '2022-07-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1189382.0}, {'date': '2022-07-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1157052.0}, {'date': '2022-07-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1151999.0}, {'date': '2022-07-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1182504.0}, {'date': '2022-07-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1161432.0}, {'date': '2022-07-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1194330.0}, {'date': '2022-07-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1192819.0}, {'date': '2022-07-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1170747.0}, {'date': '2022-07-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1148695.0}, {'date': '2022-07-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1146369.0}, {'date': '2022-07-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1135896.0}, {'date': '2022-07-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1174882.0}, {'date': '2022-07-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1189567.0}, {'date': '2022-07-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1217596.0}, {'date': '2022-07-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1241502.0}, {'date': '2022-07-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1245545.0}, {'date': '2022-07-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1213565.0}, {'date': '2022-07-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1175526.0}, {'date': '2022-07-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1191452.0}, {'date': '2022-07-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1204397.0}, {'date': '2022-07-22', 'type': 'TRANSACTION_COUNT', 'countValue': 1201699.0}, {'date': '2022-07-23', 'type': 'TRANSACTION_COUNT', 'countValue': 1144468.0}, {'date': '2022-07-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1122303.0}, {'date': '2022-07-25', 'type': 'TRANSACTION_COUNT', 'countValue': 1275861.0}, {'date': '2022-07-26', 'type': 'TRANSACTION_COUNT', 'countValue': 1679068.0}, {'date': '2022-07-27', 'type': 'TRANSACTION_COUNT', 'countValue': 1197448.0}, {'date': '2022-07-28', 'type': 'TRANSACTION_COUNT', 'countValue': 1158182.0}, {'date': '2022-07-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1192330.0}, {'date': '2022-07-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1179749.0}, {'date': '2022-07-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1158621.0}, {'date': '2022-08-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1342202.0}, {'date': '2022-08-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1206185.0}, {'date': '2022-08-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1250888.0}, {'date': '2022-08-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1458612.0}, {'date': '2022-08-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1207188.0}, {'date': '2022-08-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1148225.0}, {'date': '2022-08-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1166932.0}, {'date': '2022-08-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1167115.0}, {'date': '2022-08-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1125139.0}, {'date': '2022-08-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1160380.0}, {'date': '2022-08-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1098707.0}, {'date': '2022-08-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1130848.0}, {'date': '2022-08-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1106236.0}, {'date': '2022-08-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1102367.0}, {'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:29:23,187][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:29:23,188][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:29:23,189][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:29:23,189][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:29:23,189][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:29:23,213][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-09-13', '操作成功']]} 
[2022-09-14 11:29:23,214][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:29:23,222][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-09-13', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-09-13', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-09-13', '操作成功']]} 
[2022-09-14 11:29:23,236][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:29:23,236][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:23,784][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:29:23,790][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:23,791][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:23,791][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:29:23,791][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:29:23,791][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:29:24,258][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:29:24,269][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:24,270][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:24,270][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:29:24,271][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:29:24,271][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:29:24,702][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:29:24,707][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:24,708][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:24,708][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:29:24,708][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:29:24,709][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:29:25,217][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:29:25,222][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:25,222][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:25,222][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:29:25,222][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:29:25,223][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:29:25,729][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:29:25,737][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:25,737][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:25,738][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:29:25,738][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:29:25,739][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:29:26,190][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:29:26,197][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:26,197][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:26,197][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:29:26,198][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:29:26,198][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:29:26,680][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:29:26,684][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:26,684][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:26,684][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:29:26,684][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:29:26,684][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:29:27,240][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:29:27,244][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:27,244][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:27,245][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:29:27,245][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:29:27,245][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:29:27,777][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:29:27,786][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:27,786][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:27,787][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:29:27,787][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:29:27,787][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:29:28,277][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:29:28,286][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:28,287][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:28,287][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:29:28,288][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:29:28,288][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:29:28,731][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:29:28,736][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:28,736][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:28,736][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:29:28,737][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:29:28,737][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:29:29,212][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:29:29,341][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:29,342][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:29,343][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:29:29,343][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:29:29,343][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:29:29,871][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:29:29,888][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:29,889][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:29,889][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:29:29,889][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:29:29,889][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:29:30,377][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:29:30,408][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:30,409][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:30,409][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:29:30,409][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:29:30,409][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:29:30,888][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:29:30,907][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:30,907][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:30,908][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:29:30,908][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:29:30,908][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:29:31,399][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:29:31,417][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:31,418][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:31,419][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:29:31,419][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:29:31,420][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:29:31,958][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1130.2153386307432}, {'date': '2022-06-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 658.7653746424581}, {'date': '2022-06-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 764.8376891252041}, {'date': '2022-06-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1027.7549275103856}, {'date': '2022-06-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 863.2903226545179}, {'date': '2022-06-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.5252902639631}, {'date': '2022-06-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 657.3205147281676}, {'date': '2022-06-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 557.3471801791424}, {'date': '2022-06-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 650.9048730321116}, {'date': '2022-06-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 707.5615812251513}, {'date': '2022-06-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 456.5533547970849}, {'date': '2022-06-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.64840992711197}, {'date': '2022-06-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 576.1700357605589}, {'date': '2022-06-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 686.6988685822947}, {'date': '2022-06-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 961.9146498281193}, {'date': '2022-06-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 821.809321181829}, {'date': '2022-07-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 671.4649007660753}, {'date': '2022-07-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 475.7022288258552}, {'date': '2022-07-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.9865272110347}, {'date': '2022-07-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 547.8185734655426}, {'date': '2022-07-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 623.4579113358901}, {'date': '2022-07-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 626.4906818800378}, {'date': '2022-07-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 583.5159343187497}, {'date': '2022-07-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 556.9385770131255}, {'date': '2022-07-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1234.0013068363296}, {'date': '2022-07-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 471.2633289109558}, {'date': '2022-07-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.4232823671841}, {'date': '2022-07-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 628.2175269558061}, {'date': '2022-07-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 846.0479807260858}, {'date': '2022-07-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 624.869942847172}, {'date': '2022-07-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.9155075023274}, {'date': '2022-07-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 762.2685523410313}, {'date': '2022-07-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 607.1143338953805}, {'date': '2022-07-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 701.7335204186162}, {'date': '2022-07-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 742.5538750550869}, {'date': '2022-07-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 655.3205099835359}, {'date': '2022-07-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 605.3507387000202}, {'date': '2022-07-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 521.0488930570237}, {'date': '2022-07-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1050742247084}, {'date': '2022-07-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1778917972108}, {'date': '2022-07-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 586.9952049337337}, {'date': '2022-07-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 581.3433611624348}, {'date': '2022-07-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 665.4164756818623}, {'date': '2022-07-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 656.247899123594}, {'date': '2022-07-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 570.7312352479605}, {'date': '2022-07-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 446.63503206525445}, {'date': '2022-07-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 427.87791855870694}, {'date': '2022-08-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1161.5622421837932}, {'date': '2022-08-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.765286479655}, {'date': '2022-08-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.5333965496637}, {'date': '2022-08-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 437.82658923147443}, {'date': '2022-08-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.5998643704631}, {'date': '2022-08-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 360.6543509735758}, {'date': '2022-08-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 399.88676998116074}, {'date': '2022-08-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.1786424255162}, {'date': '2022-08-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 537.8759360306113}, {'date': '2022-08-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 767.3983997589413}, {'date': '2022-08-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.667400523998}, {'date': '2022-08-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 467.511391415449}, {'date': '2022-08-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 408.86920350298635}, {'date': '2022-08-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 424.0824841072914}, {'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:29:31,974][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:31,974][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:31,975][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:29:31,975][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:29:31,975][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:29:32,524][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78963.0}, {'date': '2022-06-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76504.0}, {'date': '2022-06-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74829.0}, {'date': '2022-06-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74119.0}, {'date': '2022-06-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67844.0}, {'date': '2022-06-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73130.0}, {'date': '2022-06-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 68883.0}, {'date': '2022-06-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75794.0}, {'date': '2022-06-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69340.0}, {'date': '2022-06-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67889.0}, {'date': '2022-06-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62253.0}, {'date': '2022-06-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62115.0}, {'date': '2022-06-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76731.0}, {'date': '2022-06-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62674.0}, {'date': '2022-06-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64781.0}, {'date': '2022-06-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 58937.0}, {'date': '2022-07-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81309.0}, {'date': '2022-07-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 94111.0}, {'date': '2022-07-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81274.0}, {'date': '2022-07-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78510.0}, {'date': '2022-07-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76109.0}, {'date': '2022-07-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 88296.0}, {'date': '2022-07-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 87905.0}, {'date': '2022-07-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 84614.0}, {'date': '2022-07-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 86385.0}, {'date': '2022-07-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 85916.0}, {'date': '2022-07-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66510.0}, {'date': '2022-07-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66481.0}, {'date': '2022-07-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64806.0}, {'date': '2022-07-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69588.0}, {'date': '2022-07-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71378.0}, {'date': '2022-07-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67946.0}, {'date': '2022-07-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 63045.0}, {'date': '2022-07-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73373.0}, {'date': '2022-07-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75062.0}, {'date': '2022-07-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72732.0}, {'date': '2022-07-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71341.0}, {'date': '2022-07-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 80464.0}, {'date': '2022-07-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76116.0}, {'date': '2022-07-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73573.0}, {'date': '2022-07-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76792.0}, {'date': '2022-07-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83821.0}, {'date': '2022-07-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 101249.0}, {'date': '2022-07-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78027.0}, {'date': '2022-07-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74229.0}, {'date': '2022-07-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 82475.0}, {'date': '2022-07-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72958.0}, {'date': '2022-08-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 96343.0}, {'date': '2022-08-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 93211.0}, {'date': '2022-08-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 100747.0}, {'date': '2022-08-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78300.0}, {'date': '2022-08-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76269.0}, {'date': '2022-08-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83702.0}, {'date': '2022-08-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 92714.0}, {'date': '2022-08-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74723.0}, {'date': '2022-08-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74597.0}, {'date': '2022-08-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75742.0}, {'date': '2022-08-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75743.0}, {'date': '2022-08-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81111.0}, {'date': '2022-08-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70384.0}, {'date': '2022-08-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73163.0}, {'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:29:32,546][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:32,547][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:32,547][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:29:32,547][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:29:32,547][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:29:33,006][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-06-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-06-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-06-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-06-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5136}, {'date': '2022-06-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5132}, {'date': '2022-07-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-07-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-07-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-07-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.513}, {'date': '2022-07-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.516}, {'date': '2022-07-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-08-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5152}, {'date': '2022-08-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5158}, {'date': '2022-08-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-08-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-08-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5153}, {'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:29:33,020][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:33,020][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:33,021][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:29:33,021][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:29:33,021][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:29:33,477][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 961544.4888}, {'date': '2022-06-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 976860.627}, {'date': '2022-06-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 990357.0991}, {'date': '2022-06-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 994032.0663}, {'date': '2022-06-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 948768.482}, {'date': '2022-06-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 951603.932}, {'date': '2022-06-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 951648.0126}, {'date': '2022-06-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 946250.5064}, {'date': '2022-06-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 925165.0995}, {'date': '2022-06-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 928664.2792}, {'date': '2022-06-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 951264.7294}, {'date': '2022-06-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 909572.1972}, {'date': '2022-06-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 943907.9322}, {'date': '2022-06-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 912596.1668}, {'date': '2022-06-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 914229.795}, {'date': '2022-06-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 907696.3864}, {'date': '2022-07-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 913699.6861}, {'date': '2022-07-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 910836.3933}, {'date': '2022-07-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 929281.8055}, {'date': '2022-07-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 916029.4626}, {'date': '2022-07-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 925866.8559}, {'date': '2022-07-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 915898.3569}, {'date': '2022-07-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 902152.6591}, {'date': '2022-07-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 933428.8784}, {'date': '2022-07-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 906382.5003}, {'date': '2022-07-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 929678.6187}, {'date': '2022-07-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 902473.6572}, {'date': '2022-07-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 932550.9544}, {'date': '2022-07-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 885912.125}, {'date': '2022-07-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 903941.997}, {'date': '2022-07-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 914778.4239}, {'date': '2022-07-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 925490.4229}, {'date': '2022-07-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 912465.5046}, {'date': '2022-07-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 927345.1384}, {'date': '2022-07-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 941796.1407}, {'date': '2022-07-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 929182.437}, {'date': '2022-07-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.5079}, {'date': '2022-07-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 920281.7657}, {'date': '2022-07-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 959451.2137}, {'date': '2022-07-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 943248.4951}, {'date': '2022-07-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 917413.4802}, {'date': '2022-07-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 927845.3406}, {'date': '2022-07-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 929397.4788}, {'date': '2022-07-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 943049.8504}, {'date': '2022-07-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 919539.6407}, {'date': '2022-07-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 932188.9655}, {'date': '2022-07-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.6693}, {'date': '2022-08-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 926505.5348}, {'date': '2022-08-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 951185.5973}, {'date': '2022-08-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 920522.2392}, {'date': '2022-08-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 929250.0714}, {'date': '2022-08-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 955577.2334}, {'date': '2022-08-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 928465.88}, {'date': '2022-08-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 930127.3479}, {'date': '2022-08-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 910140.7774}, {'date': '2022-08-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 920896.6643}, {'date': '2022-08-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 925844.0338}, {'date': '2022-08-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 931222.4967}, {'date': '2022-08-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 917682.3721}, {'date': '2022-08-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 948337.4973}, {'date': '2022-08-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 948763.7166}, {'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:29:33,491][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:29:33,491][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:29:33,492][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:29:33,492][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:29:33,492][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:29:34,074][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1097000.0}, {'date': '2022-06-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1100312.0}, {'date': '2022-06-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1110579.0}, {'date': '2022-06-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1058336.0}, {'date': '2022-06-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1018674.0}, {'date': '2022-06-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1042748.0}, {'date': '2022-06-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1012862.0}, {'date': '2022-06-22', 'type': 'TRANSACTION_COUNT', 'countValue': 988683.0}, {'date': '2022-06-23', 'type': 'TRANSACTION_COUNT', 'countValue': 967965.0}, {'date': '2022-06-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1019472.0}, {'date': '2022-06-25', 'type': 'TRANSACTION_COUNT', 'countValue': 939290.0}, {'date': '2022-06-26', 'type': 'TRANSACTION_COUNT', 'countValue': 919721.0}, {'date': '2022-06-27', 'type': 'TRANSACTION_COUNT', 'countValue': 994102.0}, {'date': '2022-06-28', 'type': 'TRANSACTION_COUNT', 'countValue': 976577.0}, {'date': '2022-06-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1005558.0}, {'date': '2022-06-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1054433.0}, {'date': '2022-07-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1178620.0}, {'date': '2022-07-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1189382.0}, {'date': '2022-07-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1157052.0}, {'date': '2022-07-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1151999.0}, {'date': '2022-07-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1182504.0}, {'date': '2022-07-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1161432.0}, {'date': '2022-07-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1194330.0}, {'date': '2022-07-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1192819.0}, {'date': '2022-07-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1170747.0}, {'date': '2022-07-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1148695.0}, {'date': '2022-07-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1146369.0}, {'date': '2022-07-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1135896.0}, {'date': '2022-07-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1174882.0}, {'date': '2022-07-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1189567.0}, {'date': '2022-07-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1217596.0}, {'date': '2022-07-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1241502.0}, {'date': '2022-07-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1245545.0}, {'date': '2022-07-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1213565.0}, {'date': '2022-07-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1175526.0}, {'date': '2022-07-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1191452.0}, {'date': '2022-07-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1204397.0}, {'date': '2022-07-22', 'type': 'TRANSACTION_COUNT', 'countValue': 1201699.0}, {'date': '2022-07-23', 'type': 'TRANSACTION_COUNT', 'countValue': 1144468.0}, {'date': '2022-07-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1122303.0}, {'date': '2022-07-25', 'type': 'TRANSACTION_COUNT', 'countValue': 1275861.0}, {'date': '2022-07-26', 'type': 'TRANSACTION_COUNT', 'countValue': 1679068.0}, {'date': '2022-07-27', 'type': 'TRANSACTION_COUNT', 'countValue': 1197448.0}, {'date': '2022-07-28', 'type': 'TRANSACTION_COUNT', 'countValue': 1158182.0}, {'date': '2022-07-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1192330.0}, {'date': '2022-07-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1179749.0}, {'date': '2022-07-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1158621.0}, {'date': '2022-08-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1342202.0}, {'date': '2022-08-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1206185.0}, {'date': '2022-08-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1250888.0}, {'date': '2022-08-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1458612.0}, {'date': '2022-08-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1207188.0}, {'date': '2022-08-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1148225.0}, {'date': '2022-08-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1166932.0}, {'date': '2022-08-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1167115.0}, {'date': '2022-08-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1125139.0}, {'date': '2022-08-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1160380.0}, {'date': '2022-08-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1098707.0}, {'date': '2022-08-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1130848.0}, {'date': '2022-08-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1106236.0}, {'date': '2022-08-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1102367.0}, {'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:31:05,282][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:31:05,284][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:31:05,285][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:31:05,286][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:31:05,286][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:31:05,306][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 11:31:05,307][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:31:05,316][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 11:31:05,328][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:31:05,329][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:05,906][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:31:05,915][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:05,916][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:05,916][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:31:05,917][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:31:05,917][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:31:06,353][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:31:06,364][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:06,365][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:06,365][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:31:06,365][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:31:06,366][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:31:06,936][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:31:06,950][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:06,951][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:06,951][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:31:06,952][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:31:06,952][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:31:07,427][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:31:07,436][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:07,437][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:07,437][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:31:07,438][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:31:07,438][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:31:07,995][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:31:08,009][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:08,009][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:08,010][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:31:08,010][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:31:08,010][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:31:08,620][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:31:08,632][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:08,633][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:08,633][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:31:08,634][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:31:08,634][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:31:09,206][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:31:09,217][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:09,218][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:09,219][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:31:09,220][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:31:09,220][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:31:09,723][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:31:09,734][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:09,734][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:09,735][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:31:09,735][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:31:09,736][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:31:10,201][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:31:10,211][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:10,212][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:10,213][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:31:10,213][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:31:10,214][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:31:10,771][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:31:10,781][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:10,781][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:10,781][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:31:10,781][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:31:10,782][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:31:11,310][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:31:11,322][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:11,323][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:11,323][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:31:11,324][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:31:11,324][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:31:11,843][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:31:11,853][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:11,854][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:11,855][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:31:11,855][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:31:11,855][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:31:12,346][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:31:12,357][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:12,358][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:12,359][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:31:12,361][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:31:12,362][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:31:12,837][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:31:12,847][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:12,847][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:12,847][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:31:12,847][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:31:12,848][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:31:13,320][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:31:13,330][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:13,331][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:13,331][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:31:13,332][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:31:13,332][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:31:13,830][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:31:13,841][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:13,841][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:13,842][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:31:13,842][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:31:13,843][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:31:14,342][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1130.2153386307432}, {'date': '2022-06-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 658.7653746424581}, {'date': '2022-06-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 764.8376891252041}, {'date': '2022-06-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1027.7549275103856}, {'date': '2022-06-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 863.2903226545179}, {'date': '2022-06-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.5252902639631}, {'date': '2022-06-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 657.3205147281676}, {'date': '2022-06-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 557.3471801791424}, {'date': '2022-06-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 650.9048730321116}, {'date': '2022-06-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 707.5615812251513}, {'date': '2022-06-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 456.5533547970849}, {'date': '2022-06-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.64840992711197}, {'date': '2022-06-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 576.1700357605589}, {'date': '2022-06-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 686.6988685822947}, {'date': '2022-06-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 961.9146498281193}, {'date': '2022-06-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 821.809321181829}, {'date': '2022-07-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 671.4649007660753}, {'date': '2022-07-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 475.7022288258552}, {'date': '2022-07-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.9865272110347}, {'date': '2022-07-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 547.8185734655426}, {'date': '2022-07-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 623.4579113358901}, {'date': '2022-07-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 626.4906818800378}, {'date': '2022-07-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 583.5159343187497}, {'date': '2022-07-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 556.9385770131255}, {'date': '2022-07-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1234.0013068363296}, {'date': '2022-07-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 471.2633289109558}, {'date': '2022-07-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.4232823671841}, {'date': '2022-07-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 628.2175269558061}, {'date': '2022-07-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 846.0479807260858}, {'date': '2022-07-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 624.869942847172}, {'date': '2022-07-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.9155075023274}, {'date': '2022-07-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 762.2685523410313}, {'date': '2022-07-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 607.1143338953805}, {'date': '2022-07-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 701.7335204186162}, {'date': '2022-07-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 742.5538750550869}, {'date': '2022-07-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 655.3205099835359}, {'date': '2022-07-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 605.3507387000202}, {'date': '2022-07-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 521.0488930570237}, {'date': '2022-07-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1050742247084}, {'date': '2022-07-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1778917972108}, {'date': '2022-07-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 586.9952049337337}, {'date': '2022-07-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 581.3433611624348}, {'date': '2022-07-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 665.4164756818623}, {'date': '2022-07-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 656.247899123594}, {'date': '2022-07-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 570.7312352479605}, {'date': '2022-07-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 446.63503206525445}, {'date': '2022-07-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 427.87791855870694}, {'date': '2022-08-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1161.5622421837932}, {'date': '2022-08-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.765286479655}, {'date': '2022-08-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.5333965496637}, {'date': '2022-08-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 437.82658923147443}, {'date': '2022-08-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.5998643704631}, {'date': '2022-08-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 360.6543509735758}, {'date': '2022-08-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 399.88676998116074}, {'date': '2022-08-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.1786424255162}, {'date': '2022-08-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 537.8759360306113}, {'date': '2022-08-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 767.3983997589413}, {'date': '2022-08-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.667400523998}, {'date': '2022-08-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 467.511391415449}, {'date': '2022-08-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 408.86920350298635}, {'date': '2022-08-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 424.0824841072914}, {'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:31:14,353][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:14,354][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:14,355][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:31:14,355][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:31:14,355][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:31:14,870][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78963.0}, {'date': '2022-06-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76504.0}, {'date': '2022-06-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74829.0}, {'date': '2022-06-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74119.0}, {'date': '2022-06-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67844.0}, {'date': '2022-06-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73130.0}, {'date': '2022-06-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 68883.0}, {'date': '2022-06-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75794.0}, {'date': '2022-06-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69340.0}, {'date': '2022-06-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67889.0}, {'date': '2022-06-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62253.0}, {'date': '2022-06-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62115.0}, {'date': '2022-06-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76731.0}, {'date': '2022-06-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62674.0}, {'date': '2022-06-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64781.0}, {'date': '2022-06-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 58937.0}, {'date': '2022-07-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81309.0}, {'date': '2022-07-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 94111.0}, {'date': '2022-07-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81274.0}, {'date': '2022-07-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78510.0}, {'date': '2022-07-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76109.0}, {'date': '2022-07-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 88296.0}, {'date': '2022-07-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 87905.0}, {'date': '2022-07-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 84614.0}, {'date': '2022-07-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 86385.0}, {'date': '2022-07-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 85916.0}, {'date': '2022-07-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66510.0}, {'date': '2022-07-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66481.0}, {'date': '2022-07-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64806.0}, {'date': '2022-07-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69588.0}, {'date': '2022-07-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71378.0}, {'date': '2022-07-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67946.0}, {'date': '2022-07-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 63045.0}, {'date': '2022-07-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73373.0}, {'date': '2022-07-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75062.0}, {'date': '2022-07-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72732.0}, {'date': '2022-07-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71341.0}, {'date': '2022-07-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 80464.0}, {'date': '2022-07-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76116.0}, {'date': '2022-07-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73573.0}, {'date': '2022-07-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76792.0}, {'date': '2022-07-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83821.0}, {'date': '2022-07-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 101249.0}, {'date': '2022-07-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78027.0}, {'date': '2022-07-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74229.0}, {'date': '2022-07-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 82475.0}, {'date': '2022-07-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72958.0}, {'date': '2022-08-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 96343.0}, {'date': '2022-08-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 93211.0}, {'date': '2022-08-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 100747.0}, {'date': '2022-08-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78300.0}, {'date': '2022-08-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76269.0}, {'date': '2022-08-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83702.0}, {'date': '2022-08-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 92714.0}, {'date': '2022-08-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74723.0}, {'date': '2022-08-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74597.0}, {'date': '2022-08-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75742.0}, {'date': '2022-08-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75743.0}, {'date': '2022-08-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81111.0}, {'date': '2022-08-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70384.0}, {'date': '2022-08-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73163.0}, {'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:31:14,886][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:14,886][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:14,887][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:31:14,887][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:31:14,888][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:31:15,424][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-06-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-06-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-06-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-06-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5136}, {'date': '2022-06-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5132}, {'date': '2022-07-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-07-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-07-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-07-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.513}, {'date': '2022-07-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.516}, {'date': '2022-07-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-08-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5152}, {'date': '2022-08-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5158}, {'date': '2022-08-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-08-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-08-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5153}, {'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:31:15,441][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:15,442][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:15,442][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:31:15,442][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:31:15,443][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:31:15,911][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 961544.4888}, {'date': '2022-06-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 976860.627}, {'date': '2022-06-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 990357.0991}, {'date': '2022-06-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 994032.0663}, {'date': '2022-06-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 948768.482}, {'date': '2022-06-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 951603.932}, {'date': '2022-06-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 951648.0126}, {'date': '2022-06-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 946250.5064}, {'date': '2022-06-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 925165.0995}, {'date': '2022-06-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 928664.2792}, {'date': '2022-06-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 951264.7294}, {'date': '2022-06-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 909572.1972}, {'date': '2022-06-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 943907.9322}, {'date': '2022-06-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 912596.1668}, {'date': '2022-06-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 914229.795}, {'date': '2022-06-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 907696.3864}, {'date': '2022-07-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 913699.6861}, {'date': '2022-07-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 910836.3933}, {'date': '2022-07-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 929281.8055}, {'date': '2022-07-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 916029.4626}, {'date': '2022-07-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 925866.8559}, {'date': '2022-07-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 915898.3569}, {'date': '2022-07-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 902152.6591}, {'date': '2022-07-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 933428.8784}, {'date': '2022-07-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 906382.5003}, {'date': '2022-07-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 929678.6187}, {'date': '2022-07-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 902473.6572}, {'date': '2022-07-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 932550.9544}, {'date': '2022-07-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 885912.125}, {'date': '2022-07-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 903941.997}, {'date': '2022-07-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 914778.4239}, {'date': '2022-07-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 925490.4229}, {'date': '2022-07-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 912465.5046}, {'date': '2022-07-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 927345.1384}, {'date': '2022-07-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 941796.1407}, {'date': '2022-07-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 929182.437}, {'date': '2022-07-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.5079}, {'date': '2022-07-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 920281.7657}, {'date': '2022-07-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 959451.2137}, {'date': '2022-07-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 943248.4951}, {'date': '2022-07-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 917413.4802}, {'date': '2022-07-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 927845.3406}, {'date': '2022-07-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 929397.4788}, {'date': '2022-07-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 943049.8504}, {'date': '2022-07-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 919539.6407}, {'date': '2022-07-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 932188.9655}, {'date': '2022-07-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.6693}, {'date': '2022-08-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 926505.5348}, {'date': '2022-08-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 951185.5973}, {'date': '2022-08-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 920522.2392}, {'date': '2022-08-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 929250.0714}, {'date': '2022-08-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 955577.2334}, {'date': '2022-08-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 928465.88}, {'date': '2022-08-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 930127.3479}, {'date': '2022-08-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 910140.7774}, {'date': '2022-08-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 920896.6643}, {'date': '2022-08-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 925844.0338}, {'date': '2022-08-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 931222.4967}, {'date': '2022-08-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 917682.3721}, {'date': '2022-08-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 948337.4973}, {'date': '2022-08-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 948763.7166}, {'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:31:15,925][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:31:15,925][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:31:15,926][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:31:15,926][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:31:15,926][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:31:16,411][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1097000.0}, {'date': '2022-06-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1100312.0}, {'date': '2022-06-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1110579.0}, {'date': '2022-06-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1058336.0}, {'date': '2022-06-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1018674.0}, {'date': '2022-06-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1042748.0}, {'date': '2022-06-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1012862.0}, {'date': '2022-06-22', 'type': 'TRANSACTION_COUNT', 'countValue': 988683.0}, {'date': '2022-06-23', 'type': 'TRANSACTION_COUNT', 'countValue': 967965.0}, {'date': '2022-06-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1019472.0}, {'date': '2022-06-25', 'type': 'TRANSACTION_COUNT', 'countValue': 939290.0}, {'date': '2022-06-26', 'type': 'TRANSACTION_COUNT', 'countValue': 919721.0}, {'date': '2022-06-27', 'type': 'TRANSACTION_COUNT', 'countValue': 994102.0}, {'date': '2022-06-28', 'type': 'TRANSACTION_COUNT', 'countValue': 976577.0}, {'date': '2022-06-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1005558.0}, {'date': '2022-06-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1054433.0}, {'date': '2022-07-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1178620.0}, {'date': '2022-07-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1189382.0}, {'date': '2022-07-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1157052.0}, {'date': '2022-07-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1151999.0}, {'date': '2022-07-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1182504.0}, {'date': '2022-07-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1161432.0}, {'date': '2022-07-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1194330.0}, {'date': '2022-07-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1192819.0}, {'date': '2022-07-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1170747.0}, {'date': '2022-07-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1148695.0}, {'date': '2022-07-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1146369.0}, {'date': '2022-07-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1135896.0}, {'date': '2022-07-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1174882.0}, {'date': '2022-07-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1189567.0}, {'date': '2022-07-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1217596.0}, {'date': '2022-07-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1241502.0}, {'date': '2022-07-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1245545.0}, {'date': '2022-07-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1213565.0}, {'date': '2022-07-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1175526.0}, {'date': '2022-07-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1191452.0}, {'date': '2022-07-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1204397.0}, {'date': '2022-07-22', 'type': 'TRANSACTION_COUNT', 'countValue': 1201699.0}, {'date': '2022-07-23', 'type': 'TRANSACTION_COUNT', 'countValue': 1144468.0}, {'date': '2022-07-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1122303.0}, {'date': '2022-07-25', 'type': 'TRANSACTION_COUNT', 'countValue': 1275861.0}, {'date': '2022-07-26', 'type': 'TRANSACTION_COUNT', 'countValue': 1679068.0}, {'date': '2022-07-27', 'type': 'TRANSACTION_COUNT', 'countValue': 1197448.0}, {'date': '2022-07-28', 'type': 'TRANSACTION_COUNT', 'countValue': 1158182.0}, {'date': '2022-07-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1192330.0}, {'date': '2022-07-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1179749.0}, {'date': '2022-07-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1158621.0}, {'date': '2022-08-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1342202.0}, {'date': '2022-08-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1206185.0}, {'date': '2022-08-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1250888.0}, {'date': '2022-08-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1458612.0}, {'date': '2022-08-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1207188.0}, {'date': '2022-08-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1148225.0}, {'date': '2022-08-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1166932.0}, {'date': '2022-08-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1167115.0}, {'date': '2022-08-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1125139.0}, {'date': '2022-08-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1160380.0}, {'date': '2022-08-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1098707.0}, {'date': '2022-08-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1130848.0}, {'date': '2022-08-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1106236.0}, {'date': '2022-08-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1102367.0}, {'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:48:34,353][run.py 14][INFO]: 开始执行用例...
[2022-09-14 11:48:34,865][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:48:34,866][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:48:34,867][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:48:34,868][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:48:34,868][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:48:34,882][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 11:48:34,883][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:48:34,898][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 11:48:34,909][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:48:34,910][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:35,410][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:48:35,420][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:35,421][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:35,421][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:35,421][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:48:35,421][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:35,877][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:48:35,901][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:35,902][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:35,902][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:35,902][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:48:35,902][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:36,412][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:48:36,434][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:36,434][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:36,434][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:36,435][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:48:36,435][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:36,877][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:48:36,886][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:36,887][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:36,887][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:36,887][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:48:36,887][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:37,341][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:48:37,376][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:37,377][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:37,377][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:37,377][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:48:37,377][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:37,817][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:48:37,833][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:37,833][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:37,834][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:37,834][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:48:37,834][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:38,410][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:48:38,434][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:38,434][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:38,435][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:38,435][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:48:38,435][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:38,938][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:48:38,952][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:38,952][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:38,953][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:38,953][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:48:38,953][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:39,486][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:48:39,501][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:39,501][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:39,501][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:39,502][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:48:39,502][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:40,117][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:48:40,147][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:40,148][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:40,148][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:40,148][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:48:40,148][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:40,729][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:48:40,755][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:40,755][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:40,755][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:40,755][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:48:40,756][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:41,334][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:48:41,345][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:41,345][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:41,345][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:41,345][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:48:41,345][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:41,909][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:48:41,927][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:41,927][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:41,928][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:41,928][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:48:41,928][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:42,393][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:48:42,410][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:42,410][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:42,410][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:42,410][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:48:42,411][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:42,961][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:48:42,981][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:42,981][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:42,981][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:42,981][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:48:42,981][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:43,470][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:48:43,490][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:43,490][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:43,490][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:43,491][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:48:43,491][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:44,087][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1130.2153386307432}, {'date': '2022-06-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 658.7653746424581}, {'date': '2022-06-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 764.8376891252041}, {'date': '2022-06-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1027.7549275103856}, {'date': '2022-06-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 863.2903226545179}, {'date': '2022-06-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.5252902639631}, {'date': '2022-06-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 657.3205147281676}, {'date': '2022-06-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 557.3471801791424}, {'date': '2022-06-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 650.9048730321116}, {'date': '2022-06-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 707.5615812251513}, {'date': '2022-06-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 456.5533547970849}, {'date': '2022-06-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.64840992711197}, {'date': '2022-06-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 576.1700357605589}, {'date': '2022-06-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 686.6988685822947}, {'date': '2022-06-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 961.9146498281193}, {'date': '2022-06-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 821.809321181829}, {'date': '2022-07-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 671.4649007660753}, {'date': '2022-07-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 475.7022288258552}, {'date': '2022-07-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.9865272110347}, {'date': '2022-07-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 547.8185734655426}, {'date': '2022-07-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 623.4579113358901}, {'date': '2022-07-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 626.4906818800378}, {'date': '2022-07-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 583.5159343187497}, {'date': '2022-07-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 556.9385770131255}, {'date': '2022-07-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1234.0013068363296}, {'date': '2022-07-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 471.2633289109558}, {'date': '2022-07-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.4232823671841}, {'date': '2022-07-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 628.2175269558061}, {'date': '2022-07-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 846.0479807260858}, {'date': '2022-07-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 624.869942847172}, {'date': '2022-07-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.9155075023274}, {'date': '2022-07-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 762.2685523410313}, {'date': '2022-07-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 607.1143338953805}, {'date': '2022-07-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 701.7335204186162}, {'date': '2022-07-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 742.5538750550869}, {'date': '2022-07-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 655.3205099835359}, {'date': '2022-07-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 605.3507387000202}, {'date': '2022-07-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 521.0488930570237}, {'date': '2022-07-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1050742247084}, {'date': '2022-07-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1778917972108}, {'date': '2022-07-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 586.9952049337337}, {'date': '2022-07-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 581.3433611624348}, {'date': '2022-07-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 665.4164756818623}, {'date': '2022-07-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 656.247899123594}, {'date': '2022-07-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 570.7312352479605}, {'date': '2022-07-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 446.63503206525445}, {'date': '2022-07-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 427.87791855870694}, {'date': '2022-08-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1161.5622421837932}, {'date': '2022-08-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.765286479655}, {'date': '2022-08-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.5333965496637}, {'date': '2022-08-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 437.82658923147443}, {'date': '2022-08-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.5998643704631}, {'date': '2022-08-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 360.6543509735758}, {'date': '2022-08-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 399.88676998116074}, {'date': '2022-08-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.1786424255162}, {'date': '2022-08-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 537.8759360306113}, {'date': '2022-08-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 767.3983997589413}, {'date': '2022-08-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.667400523998}, {'date': '2022-08-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 467.511391415449}, {'date': '2022-08-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 408.86920350298635}, {'date': '2022-08-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 424.0824841072914}, {'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:48:44,112][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:44,112][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:44,112][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:44,113][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:48:44,113][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:44,628][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78963.0}, {'date': '2022-06-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76504.0}, {'date': '2022-06-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74829.0}, {'date': '2022-06-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74119.0}, {'date': '2022-06-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67844.0}, {'date': '2022-06-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73130.0}, {'date': '2022-06-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 68883.0}, {'date': '2022-06-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75794.0}, {'date': '2022-06-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69340.0}, {'date': '2022-06-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67889.0}, {'date': '2022-06-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62253.0}, {'date': '2022-06-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62115.0}, {'date': '2022-06-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76731.0}, {'date': '2022-06-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62674.0}, {'date': '2022-06-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64781.0}, {'date': '2022-06-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 58937.0}, {'date': '2022-07-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81309.0}, {'date': '2022-07-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 94111.0}, {'date': '2022-07-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81274.0}, {'date': '2022-07-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78510.0}, {'date': '2022-07-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76109.0}, {'date': '2022-07-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 88296.0}, {'date': '2022-07-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 87905.0}, {'date': '2022-07-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 84614.0}, {'date': '2022-07-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 86385.0}, {'date': '2022-07-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 85916.0}, {'date': '2022-07-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66510.0}, {'date': '2022-07-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66481.0}, {'date': '2022-07-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64806.0}, {'date': '2022-07-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69588.0}, {'date': '2022-07-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71378.0}, {'date': '2022-07-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67946.0}, {'date': '2022-07-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 63045.0}, {'date': '2022-07-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73373.0}, {'date': '2022-07-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75062.0}, {'date': '2022-07-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72732.0}, {'date': '2022-07-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71341.0}, {'date': '2022-07-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 80464.0}, {'date': '2022-07-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76116.0}, {'date': '2022-07-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73573.0}, {'date': '2022-07-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76792.0}, {'date': '2022-07-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83821.0}, {'date': '2022-07-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 101249.0}, {'date': '2022-07-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78027.0}, {'date': '2022-07-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74229.0}, {'date': '2022-07-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 82475.0}, {'date': '2022-07-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72958.0}, {'date': '2022-08-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 96343.0}, {'date': '2022-08-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 93211.0}, {'date': '2022-08-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 100747.0}, {'date': '2022-08-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78300.0}, {'date': '2022-08-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76269.0}, {'date': '2022-08-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83702.0}, {'date': '2022-08-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 92714.0}, {'date': '2022-08-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74723.0}, {'date': '2022-08-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74597.0}, {'date': '2022-08-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75742.0}, {'date': '2022-08-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75743.0}, {'date': '2022-08-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81111.0}, {'date': '2022-08-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70384.0}, {'date': '2022-08-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73163.0}, {'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:48:44,644][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:44,644][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:44,644][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:44,644][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:48:44,645][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:45,222][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-06-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-06-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-06-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-06-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5136}, {'date': '2022-06-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5132}, {'date': '2022-07-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-07-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-07-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-07-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.513}, {'date': '2022-07-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.516}, {'date': '2022-07-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-08-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5152}, {'date': '2022-08-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5158}, {'date': '2022-08-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-08-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-08-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5153}, {'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:48:45,240][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:45,240][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:45,240][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:45,241][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:48:45,241][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:45,733][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 961544.4888}, {'date': '2022-06-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 976860.627}, {'date': '2022-06-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 990357.0991}, {'date': '2022-06-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 994032.0663}, {'date': '2022-06-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 948768.482}, {'date': '2022-06-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 951603.932}, {'date': '2022-06-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 951648.0126}, {'date': '2022-06-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 946250.5064}, {'date': '2022-06-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 925165.0995}, {'date': '2022-06-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 928664.2792}, {'date': '2022-06-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 951264.7294}, {'date': '2022-06-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 909572.1972}, {'date': '2022-06-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 943907.9322}, {'date': '2022-06-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 912596.1668}, {'date': '2022-06-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 914229.795}, {'date': '2022-06-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 907696.3864}, {'date': '2022-07-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 913699.6861}, {'date': '2022-07-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 910836.3933}, {'date': '2022-07-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 929281.8055}, {'date': '2022-07-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 916029.4626}, {'date': '2022-07-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 925866.8559}, {'date': '2022-07-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 915898.3569}, {'date': '2022-07-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 902152.6591}, {'date': '2022-07-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 933428.8784}, {'date': '2022-07-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 906382.5003}, {'date': '2022-07-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 929678.6187}, {'date': '2022-07-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 902473.6572}, {'date': '2022-07-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 932550.9544}, {'date': '2022-07-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 885912.125}, {'date': '2022-07-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 903941.997}, {'date': '2022-07-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 914778.4239}, {'date': '2022-07-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 925490.4229}, {'date': '2022-07-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 912465.5046}, {'date': '2022-07-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 927345.1384}, {'date': '2022-07-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 941796.1407}, {'date': '2022-07-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 929182.437}, {'date': '2022-07-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.5079}, {'date': '2022-07-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 920281.7657}, {'date': '2022-07-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 959451.2137}, {'date': '2022-07-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 943248.4951}, {'date': '2022-07-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 917413.4802}, {'date': '2022-07-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 927845.3406}, {'date': '2022-07-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 929397.4788}, {'date': '2022-07-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 943049.8504}, {'date': '2022-07-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 919539.6407}, {'date': '2022-07-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 932188.9655}, {'date': '2022-07-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.6693}, {'date': '2022-08-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 926505.5348}, {'date': '2022-08-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 951185.5973}, {'date': '2022-08-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 920522.2392}, {'date': '2022-08-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 929250.0714}, {'date': '2022-08-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 955577.2334}, {'date': '2022-08-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 928465.88}, {'date': '2022-08-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 930127.3479}, {'date': '2022-08-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 910140.7774}, {'date': '2022-08-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 920896.6643}, {'date': '2022-08-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 925844.0338}, {'date': '2022-08-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 931222.4967}, {'date': '2022-08-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 917682.3721}, {'date': '2022-08-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 948337.4973}, {'date': '2022-08-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 948763.7166}, {'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:48:45,756][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:45,756][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:45,756][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:45,756][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:48:45,756][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:46,215][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1097000.0}, {'date': '2022-06-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1100312.0}, {'date': '2022-06-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1110579.0}, {'date': '2022-06-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1058336.0}, {'date': '2022-06-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1018674.0}, {'date': '2022-06-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1042748.0}, {'date': '2022-06-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1012862.0}, {'date': '2022-06-22', 'type': 'TRANSACTION_COUNT', 'countValue': 988683.0}, {'date': '2022-06-23', 'type': 'TRANSACTION_COUNT', 'countValue': 967965.0}, {'date': '2022-06-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1019472.0}, {'date': '2022-06-25', 'type': 'TRANSACTION_COUNT', 'countValue': 939290.0}, {'date': '2022-06-26', 'type': 'TRANSACTION_COUNT', 'countValue': 919721.0}, {'date': '2022-06-27', 'type': 'TRANSACTION_COUNT', 'countValue': 994102.0}, {'date': '2022-06-28', 'type': 'TRANSACTION_COUNT', 'countValue': 976577.0}, {'date': '2022-06-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1005558.0}, {'date': '2022-06-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1054433.0}, {'date': '2022-07-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1178620.0}, {'date': '2022-07-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1189382.0}, {'date': '2022-07-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1157052.0}, {'date': '2022-07-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1151999.0}, {'date': '2022-07-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1182504.0}, {'date': '2022-07-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1161432.0}, {'date': '2022-07-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1194330.0}, {'date': '2022-07-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1192819.0}, {'date': '2022-07-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1170747.0}, {'date': '2022-07-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1148695.0}, {'date': '2022-07-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1146369.0}, {'date': '2022-07-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1135896.0}, {'date': '2022-07-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1174882.0}, {'date': '2022-07-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1189567.0}, {'date': '2022-07-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1217596.0}, {'date': '2022-07-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1241502.0}, {'date': '2022-07-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1245545.0}, {'date': '2022-07-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1213565.0}, {'date': '2022-07-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1175526.0}, {'date': '2022-07-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1191452.0}, {'date': '2022-07-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1204397.0}, {'date': '2022-07-22', 'type': 'TRANSACTION_COUNT', 'countValue': 1201699.0}, {'date': '2022-07-23', 'type': 'TRANSACTION_COUNT', 'countValue': 1144468.0}, {'date': '2022-07-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1122303.0}, {'date': '2022-07-25', 'type': 'TRANSACTION_COUNT', 'countValue': 1275861.0}, {'date': '2022-07-26', 'type': 'TRANSACTION_COUNT', 'countValue': 1679068.0}, {'date': '2022-07-27', 'type': 'TRANSACTION_COUNT', 'countValue': 1197448.0}, {'date': '2022-07-28', 'type': 'TRANSACTION_COUNT', 'countValue': 1158182.0}, {'date': '2022-07-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1192330.0}, {'date': '2022-07-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1179749.0}, {'date': '2022-07-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1158621.0}, {'date': '2022-08-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1342202.0}, {'date': '2022-08-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1206185.0}, {'date': '2022-08-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1250888.0}, {'date': '2022-08-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1458612.0}, {'date': '2022-08-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1207188.0}, {'date': '2022-08-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1148225.0}, {'date': '2022-08-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1166932.0}, {'date': '2022-08-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1167115.0}, {'date': '2022-08-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1125139.0}, {'date': '2022-08-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1160380.0}, {'date': '2022-08-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1098707.0}, {'date': '2022-08-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1130848.0}, {'date': '2022-08-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1106236.0}, {'date': '2022-08-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1102367.0}, {'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:48:55,542][run.py 14][INFO]: 开始执行用例...
[2022-09-14 11:48:56,127][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:48:56,128][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:48:56,129][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 11:48:56,129][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 11:48:56,130][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:48:56,160][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 11:48:56,160][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 11:48:56,170][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 11:48:56,179][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 11:48:56,179][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:56,748][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 11:48:56,756][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:56,757][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:56,757][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:56,757][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:48:56,757][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:57,222][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:48:57,233][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:57,233][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:57,233][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:57,233][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:48:57,233][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:57,779][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:48:57,800][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:57,800][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:57,800][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:57,800][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:48:57,801][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:48:58,349][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:48:58,364][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:58,365][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:58,365][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:58,365][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:48:58,365][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:48:58,900][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:48:58,926][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:58,926][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:58,926][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:58,927][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:48:58,927][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:48:59,415][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:48:59,428][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:59,429][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:59,429][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:59,429][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:48:59,429][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:48:59,948][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:48:59,959][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:48:59,960][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:48:59,960][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:48:59,960][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:48:59,960][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:49:00,485][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:49:00,502][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:00,503][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:00,503][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:49:00,503][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:49:00,503][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:49:01,043][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:49:01,058][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:01,058][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:01,058][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:49:01,058][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:49:01,059][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:49:01,577][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:49:01,592][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:01,592][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:01,592][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:49:01,592][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_WEEK', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:49:01,592][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_WEEK",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:49:02,111][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:49:02,126][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:02,127][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:02,127][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:49:02,127][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:49:02,127][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:49:02,589][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:49:02,606][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:02,607][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:02,607][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:49:02,607][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:49:02,607][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:49:03,086][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:49:03,103][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:03,103][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:03,103][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:49:03,103][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:49:03,103][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:49:03,663][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:49:03,693][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:03,695][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:03,695][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:49:03,695][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:49:03,695][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:49:04,205][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:49:04,254][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:04,255][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:04,255][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:49:04,255][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_MONTH', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:49:04,255][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_MONTH",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:49:04,841][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 11:49:04,852][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:04,853][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:04,853][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:49:04,853][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-14 11:49:04,853][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-14 11:49:05,432][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1130.2153386307432}, {'date': '2022-06-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 658.7653746424581}, {'date': '2022-06-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 764.8376891252041}, {'date': '2022-06-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1027.7549275103856}, {'date': '2022-06-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 863.2903226545179}, {'date': '2022-06-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.5252902639631}, {'date': '2022-06-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 657.3205147281676}, {'date': '2022-06-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 557.3471801791424}, {'date': '2022-06-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 650.9048730321116}, {'date': '2022-06-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 707.5615812251513}, {'date': '2022-06-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 456.5533547970849}, {'date': '2022-06-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.64840992711197}, {'date': '2022-06-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 576.1700357605589}, {'date': '2022-06-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 686.6988685822947}, {'date': '2022-06-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 961.9146498281193}, {'date': '2022-06-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 821.809321181829}, {'date': '2022-07-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 671.4649007660753}, {'date': '2022-07-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 475.7022288258552}, {'date': '2022-07-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.9865272110347}, {'date': '2022-07-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 547.8185734655426}, {'date': '2022-07-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 623.4579113358901}, {'date': '2022-07-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 626.4906818800378}, {'date': '2022-07-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 583.5159343187497}, {'date': '2022-07-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 556.9385770131255}, {'date': '2022-07-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1234.0013068363296}, {'date': '2022-07-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 471.2633289109558}, {'date': '2022-07-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.4232823671841}, {'date': '2022-07-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 628.2175269558061}, {'date': '2022-07-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 846.0479807260858}, {'date': '2022-07-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 624.869942847172}, {'date': '2022-07-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 603.9155075023274}, {'date': '2022-07-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 762.2685523410313}, {'date': '2022-07-17', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 607.1143338953805}, {'date': '2022-07-18', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 701.7335204186162}, {'date': '2022-07-19', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 742.5538750550869}, {'date': '2022-07-20', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 655.3205099835359}, {'date': '2022-07-21', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 605.3507387000202}, {'date': '2022-07-22', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 521.0488930570237}, {'date': '2022-07-23', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1050742247084}, {'date': '2022-07-24', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 447.1778917972108}, {'date': '2022-07-25', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 586.9952049337337}, {'date': '2022-07-26', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 581.3433611624348}, {'date': '2022-07-27', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 665.4164756818623}, {'date': '2022-07-28', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 656.247899123594}, {'date': '2022-07-29', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 570.7312352479605}, {'date': '2022-07-30', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 446.63503206525445}, {'date': '2022-07-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 427.87791855870694}, {'date': '2022-08-01', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 1161.5622421837932}, {'date': '2022-08-02', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.765286479655}, {'date': '2022-08-03', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 495.5333965496637}, {'date': '2022-08-04', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 437.82658923147443}, {'date': '2022-08-05', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 451.5998643704631}, {'date': '2022-08-06', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 360.6543509735758}, {'date': '2022-08-07', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 399.88676998116074}, {'date': '2022-08-08', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.1786424255162}, {'date': '2022-08-09', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 537.8759360306113}, {'date': '2022-08-10', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 767.3983997589413}, {'date': '2022-08-11', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 538.667400523998}, {'date': '2022-08-12', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 467.511391415449}, {'date': '2022-08-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 408.86920350298635}, {'date': '2022-08-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 424.0824841072914}, {'date': '2022-08-15', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 646.6175269277369}, {'date': '2022-08-16', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 409.0156024906529}, {'date': '2022-08-31', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 536.5828278510652}, {'date': '2022-09-13', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 747.4714729146486}]}
[2022-09-14 11:49:05,444][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:05,444][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:05,445][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:49:05,445][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NEW_ADDRESS_COUNT'}
[2022-09-14 11:49:05,445][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NEW_ADDRESS_COUNT"
}
[2022-09-14 11:49:06,018][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78963.0}, {'date': '2022-06-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76504.0}, {'date': '2022-06-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74829.0}, {'date': '2022-06-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74119.0}, {'date': '2022-06-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67844.0}, {'date': '2022-06-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73130.0}, {'date': '2022-06-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 68883.0}, {'date': '2022-06-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75794.0}, {'date': '2022-06-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69340.0}, {'date': '2022-06-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67889.0}, {'date': '2022-06-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62253.0}, {'date': '2022-06-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62115.0}, {'date': '2022-06-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76731.0}, {'date': '2022-06-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62674.0}, {'date': '2022-06-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64781.0}, {'date': '2022-06-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 58937.0}, {'date': '2022-07-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81309.0}, {'date': '2022-07-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 94111.0}, {'date': '2022-07-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81274.0}, {'date': '2022-07-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78510.0}, {'date': '2022-07-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76109.0}, {'date': '2022-07-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 88296.0}, {'date': '2022-07-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 87905.0}, {'date': '2022-07-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 84614.0}, {'date': '2022-07-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 86385.0}, {'date': '2022-07-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 85916.0}, {'date': '2022-07-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66510.0}, {'date': '2022-07-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66481.0}, {'date': '2022-07-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 64806.0}, {'date': '2022-07-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69588.0}, {'date': '2022-07-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71378.0}, {'date': '2022-07-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 67946.0}, {'date': '2022-07-17', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 63045.0}, {'date': '2022-07-18', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73373.0}, {'date': '2022-07-19', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75062.0}, {'date': '2022-07-20', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72732.0}, {'date': '2022-07-21', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 71341.0}, {'date': '2022-07-22', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 80464.0}, {'date': '2022-07-23', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76116.0}, {'date': '2022-07-24', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73573.0}, {'date': '2022-07-25', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76792.0}, {'date': '2022-07-26', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83821.0}, {'date': '2022-07-27', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 101249.0}, {'date': '2022-07-28', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78027.0}, {'date': '2022-07-29', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74229.0}, {'date': '2022-07-30', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 82475.0}, {'date': '2022-07-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 72958.0}, {'date': '2022-08-01', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 96343.0}, {'date': '2022-08-02', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 93211.0}, {'date': '2022-08-03', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 100747.0}, {'date': '2022-08-04', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 78300.0}, {'date': '2022-08-05', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 76269.0}, {'date': '2022-08-06', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 83702.0}, {'date': '2022-08-07', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 92714.0}, {'date': '2022-08-08', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74723.0}, {'date': '2022-08-09', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 74597.0}, {'date': '2022-08-10', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75742.0}, {'date': '2022-08-11', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 75743.0}, {'date': '2022-08-12', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 81111.0}, {'date': '2022-08-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70384.0}, {'date': '2022-08-14', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 73163.0}, {'date': '2022-08-15', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 70186.0}, {'date': '2022-08-16', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 69865.0}, {'date': '2022-08-31', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 62327.0}, {'date': '2022-09-13', 'type': 'NEW_ADDRESS_COUNT', 'countValue': 66397.0}]}
[2022-09-14 11:49:06,030][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:06,031][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:06,031][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:49:06,031][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_UTILIZATION'}
[2022-09-14 11:49:06,032][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_UTILIZATION"
}
[2022-09-14 11:49:06,513][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-06-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5133}, {'date': '2022-06-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-06-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-06-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-06-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-06-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-06-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-06-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-06-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5136}, {'date': '2022-06-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5132}, {'date': '2022-07-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-07-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5142}, {'date': '2022-07-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-07-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-07-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-07-17', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-18', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-07-19', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5143}, {'date': '2022-07-20', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.513}, {'date': '2022-07-21', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.515}, {'date': '2022-07-22', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5138}, {'date': '2022-07-23', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-24', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5147}, {'date': '2022-07-25', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.516}, {'date': '2022-07-26', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-27', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-07-28', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5137}, {'date': '2022-07-29', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5141}, {'date': '2022-07-30', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5144}, {'date': '2022-07-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5151}, {'date': '2022-08-01', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5152}, {'date': '2022-08-02', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-03', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-04', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-05', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-06', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-07', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5158}, {'date': '2022-08-08', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-09', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5134}, {'date': '2022-08-10', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5154}, {'date': '2022-08-11', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5139}, {'date': '2022-08-12', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5148}, {'date': '2022-08-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-08-14', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5153}, {'date': '2022-08-15', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.514}, {'date': '2022-08-16', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5146}, {'date': '2022-08-31', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5145}, {'date': '2022-09-13', 'type': 'NETWORK_UTILIZATION', 'countValue': 0.5149}]}
[2022-09-14 11:49:06,529][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:06,530][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:06,530][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:49:06,530][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'NETWORK_HASH_RATE'}
[2022-09-14 11:49:06,530][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "NETWORK_HASH_RATE"
}
[2022-09-14 11:49:07,061][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 961544.4888}, {'date': '2022-06-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 976860.627}, {'date': '2022-06-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 990357.0991}, {'date': '2022-06-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 994032.0663}, {'date': '2022-06-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 948768.482}, {'date': '2022-06-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 951603.932}, {'date': '2022-06-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 951648.0126}, {'date': '2022-06-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 946250.5064}, {'date': '2022-06-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 925165.0995}, {'date': '2022-06-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 928664.2792}, {'date': '2022-06-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 951264.7294}, {'date': '2022-06-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 909572.1972}, {'date': '2022-06-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 943907.9322}, {'date': '2022-06-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 912596.1668}, {'date': '2022-06-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 914229.795}, {'date': '2022-06-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 907696.3864}, {'date': '2022-07-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 913699.6861}, {'date': '2022-07-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 910836.3933}, {'date': '2022-07-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 929281.8055}, {'date': '2022-07-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 916029.4626}, {'date': '2022-07-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 925866.8559}, {'date': '2022-07-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 915898.3569}, {'date': '2022-07-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 902152.6591}, {'date': '2022-07-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 933428.8784}, {'date': '2022-07-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 906382.5003}, {'date': '2022-07-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 929678.6187}, {'date': '2022-07-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 902473.6572}, {'date': '2022-07-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 932550.9544}, {'date': '2022-07-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 885912.125}, {'date': '2022-07-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 903941.997}, {'date': '2022-07-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 914778.4239}, {'date': '2022-07-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 925490.4229}, {'date': '2022-07-17', 'type': 'NETWORK_HASH_RATE', 'countValue': 912465.5046}, {'date': '2022-07-18', 'type': 'NETWORK_HASH_RATE', 'countValue': 927345.1384}, {'date': '2022-07-19', 'type': 'NETWORK_HASH_RATE', 'countValue': 941796.1407}, {'date': '2022-07-20', 'type': 'NETWORK_HASH_RATE', 'countValue': 929182.437}, {'date': '2022-07-21', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.5079}, {'date': '2022-07-22', 'type': 'NETWORK_HASH_RATE', 'countValue': 920281.7657}, {'date': '2022-07-23', 'type': 'NETWORK_HASH_RATE', 'countValue': 959451.2137}, {'date': '2022-07-24', 'type': 'NETWORK_HASH_RATE', 'countValue': 943248.4951}, {'date': '2022-07-25', 'type': 'NETWORK_HASH_RATE', 'countValue': 917413.4802}, {'date': '2022-07-26', 'type': 'NETWORK_HASH_RATE', 'countValue': 927845.3406}, {'date': '2022-07-27', 'type': 'NETWORK_HASH_RATE', 'countValue': 929397.4788}, {'date': '2022-07-28', 'type': 'NETWORK_HASH_RATE', 'countValue': 943049.8504}, {'date': '2022-07-29', 'type': 'NETWORK_HASH_RATE', 'countValue': 919539.6407}, {'date': '2022-07-30', 'type': 'NETWORK_HASH_RATE', 'countValue': 932188.9655}, {'date': '2022-07-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 922780.6693}, {'date': '2022-08-01', 'type': 'NETWORK_HASH_RATE', 'countValue': 926505.5348}, {'date': '2022-08-02', 'type': 'NETWORK_HASH_RATE', 'countValue': 951185.5973}, {'date': '2022-08-03', 'type': 'NETWORK_HASH_RATE', 'countValue': 920522.2392}, {'date': '2022-08-04', 'type': 'NETWORK_HASH_RATE', 'countValue': 929250.0714}, {'date': '2022-08-05', 'type': 'NETWORK_HASH_RATE', 'countValue': 955577.2334}, {'date': '2022-08-06', 'type': 'NETWORK_HASH_RATE', 'countValue': 928465.88}, {'date': '2022-08-07', 'type': 'NETWORK_HASH_RATE', 'countValue': 930127.3479}, {'date': '2022-08-08', 'type': 'NETWORK_HASH_RATE', 'countValue': 910140.7774}, {'date': '2022-08-09', 'type': 'NETWORK_HASH_RATE', 'countValue': 920896.6643}, {'date': '2022-08-10', 'type': 'NETWORK_HASH_RATE', 'countValue': 925844.0338}, {'date': '2022-08-11', 'type': 'NETWORK_HASH_RATE', 'countValue': 931222.4967}, {'date': '2022-08-12', 'type': 'NETWORK_HASH_RATE', 'countValue': 917682.3721}, {'date': '2022-08-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 948337.4973}, {'date': '2022-08-14', 'type': 'NETWORK_HASH_RATE', 'countValue': 948763.7166}, {'date': '2022-08-15', 'type': 'NETWORK_HASH_RATE', 'countValue': 922988.4189}, {'date': '2022-08-16', 'type': 'NETWORK_HASH_RATE', 'countValue': 951213.5835}, {'date': '2022-08-31', 'type': 'NETWORK_HASH_RATE', 'countValue': 941081.7545}, {'date': '2022-09-13', 'type': 'NETWORK_HASH_RATE', 'countValue': 914926.9191}]}
[2022-09-14 11:49:07,072][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-14 11:49:07,072][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 11:49:07,073][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:49:07,073][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'THREE_MONTHS', 'type': 'TRANSACTION_COUNT'}
[2022-09-14 11:49:07,073][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "THREE_MONTHS",
    "type": "TRANSACTION_COUNT"
}
[2022-09-14 11:49:07,619][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-06-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1097000.0}, {'date': '2022-06-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1100312.0}, {'date': '2022-06-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1110579.0}, {'date': '2022-06-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1058336.0}, {'date': '2022-06-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1018674.0}, {'date': '2022-06-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1042748.0}, {'date': '2022-06-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1012862.0}, {'date': '2022-06-22', 'type': 'TRANSACTION_COUNT', 'countValue': 988683.0}, {'date': '2022-06-23', 'type': 'TRANSACTION_COUNT', 'countValue': 967965.0}, {'date': '2022-06-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1019472.0}, {'date': '2022-06-25', 'type': 'TRANSACTION_COUNT', 'countValue': 939290.0}, {'date': '2022-06-26', 'type': 'TRANSACTION_COUNT', 'countValue': 919721.0}, {'date': '2022-06-27', 'type': 'TRANSACTION_COUNT', 'countValue': 994102.0}, {'date': '2022-06-28', 'type': 'TRANSACTION_COUNT', 'countValue': 976577.0}, {'date': '2022-06-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1005558.0}, {'date': '2022-06-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1054433.0}, {'date': '2022-07-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1178620.0}, {'date': '2022-07-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1189382.0}, {'date': '2022-07-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1157052.0}, {'date': '2022-07-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1151999.0}, {'date': '2022-07-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1182504.0}, {'date': '2022-07-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1161432.0}, {'date': '2022-07-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1194330.0}, {'date': '2022-07-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1192819.0}, {'date': '2022-07-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1170747.0}, {'date': '2022-07-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1148695.0}, {'date': '2022-07-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1146369.0}, {'date': '2022-07-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1135896.0}, {'date': '2022-07-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1174882.0}, {'date': '2022-07-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1189567.0}, {'date': '2022-07-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1217596.0}, {'date': '2022-07-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1241502.0}, {'date': '2022-07-17', 'type': 'TRANSACTION_COUNT', 'countValue': 1245545.0}, {'date': '2022-07-18', 'type': 'TRANSACTION_COUNT', 'countValue': 1213565.0}, {'date': '2022-07-19', 'type': 'TRANSACTION_COUNT', 'countValue': 1175526.0}, {'date': '2022-07-20', 'type': 'TRANSACTION_COUNT', 'countValue': 1191452.0}, {'date': '2022-07-21', 'type': 'TRANSACTION_COUNT', 'countValue': 1204397.0}, {'date': '2022-07-22', 'type': 'TRANSACTION_COUNT', 'countValue': 1201699.0}, {'date': '2022-07-23', 'type': 'TRANSACTION_COUNT', 'countValue': 1144468.0}, {'date': '2022-07-24', 'type': 'TRANSACTION_COUNT', 'countValue': 1122303.0}, {'date': '2022-07-25', 'type': 'TRANSACTION_COUNT', 'countValue': 1275861.0}, {'date': '2022-07-26', 'type': 'TRANSACTION_COUNT', 'countValue': 1679068.0}, {'date': '2022-07-27', 'type': 'TRANSACTION_COUNT', 'countValue': 1197448.0}, {'date': '2022-07-28', 'type': 'TRANSACTION_COUNT', 'countValue': 1158182.0}, {'date': '2022-07-29', 'type': 'TRANSACTION_COUNT', 'countValue': 1192330.0}, {'date': '2022-07-30', 'type': 'TRANSACTION_COUNT', 'countValue': 1179749.0}, {'date': '2022-07-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1158621.0}, {'date': '2022-08-01', 'type': 'TRANSACTION_COUNT', 'countValue': 1342202.0}, {'date': '2022-08-02', 'type': 'TRANSACTION_COUNT', 'countValue': 1206185.0}, {'date': '2022-08-03', 'type': 'TRANSACTION_COUNT', 'countValue': 1250888.0}, {'date': '2022-08-04', 'type': 'TRANSACTION_COUNT', 'countValue': 1458612.0}, {'date': '2022-08-05', 'type': 'TRANSACTION_COUNT', 'countValue': 1207188.0}, {'date': '2022-08-06', 'type': 'TRANSACTION_COUNT', 'countValue': 1148225.0}, {'date': '2022-08-07', 'type': 'TRANSACTION_COUNT', 'countValue': 1166932.0}, {'date': '2022-08-08', 'type': 'TRANSACTION_COUNT', 'countValue': 1167115.0}, {'date': '2022-08-09', 'type': 'TRANSACTION_COUNT', 'countValue': 1125139.0}, {'date': '2022-08-10', 'type': 'TRANSACTION_COUNT', 'countValue': 1160380.0}, {'date': '2022-08-11', 'type': 'TRANSACTION_COUNT', 'countValue': 1098707.0}, {'date': '2022-08-12', 'type': 'TRANSACTION_COUNT', 'countValue': 1130848.0}, {'date': '2022-08-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1106236.0}, {'date': '2022-08-14', 'type': 'TRANSACTION_COUNT', 'countValue': 1102367.0}, {'date': '2022-08-15', 'type': 'TRANSACTION_COUNT', 'countValue': 1104408.0}, {'date': '2022-08-16', 'type': 'TRANSACTION_COUNT', 'countValue': 1086312.0}, {'date': '2022-08-31', 'type': 'TRANSACTION_COUNT', 'countValue': 1035135.0}, {'date': '2022-09-13', 'type': 'TRANSACTION_COUNT', 'countValue': 1093205.0}]}
[2022-09-14 13:56:39,147][run.py 14][INFO]: 开始执行用例...
[2022-09-14 13:56:39,922][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 13:56:39,923][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 13:56:39,924][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 13:56:39,925][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 13:56:39,925][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 13:56:39,935][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 13:56:39,935][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 13:56:39,945][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 13:56:39,954][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-14 13:56:39,954][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 13:56:40,465][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-14 14:29:15,622][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:29:15,629][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:29:15,629][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:29:15,630][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:29:15,630][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:29:15,659][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:29:15,660][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:29:15,669][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:30:12,632][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:30:12,633][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:30:12,634][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:30:12,634][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:30:12,635][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:30:12,654][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:30:12,654][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:30:12,666][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:30:30,581][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:30:30,582][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:30:30,583][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:30:30,584][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:30:30,584][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:30:30,610][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:30:30,611][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:30:30,620][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:30:30,632][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:30:30,633][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:30:30,633][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 10
}
[2022-09-14 14:30:30,633][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 10}
[2022-09-14 14:30:30,633][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 10
}
[2022-09-14 14:30:31,301][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:30:31.112+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:31:05,631][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:31:05,633][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:31:05,634][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:31:05,634][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:31:05,635][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:31:05,659][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:31:05,659][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:31:05,670][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:31:05,681][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:31:05,682][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:31:05,682][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 10
}
[2022-09-14 14:31:05,682][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 10}
[2022-09-14 14:31:05,682][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 10
}
[2022-09-14 14:31:06,361][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:31:06.171+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:33:10,314][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:33:10,315][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:33:10,316][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:33:10,317][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:33:10,317][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:33:10,340][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:33:10,341][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:33:10,353][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:33:10,365][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:33:10,365][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:33:10,366][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 1
}
[2022-09-14 14:33:10,366][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 1}
[2022-09-14 14:33:10,366][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 1
}
[2022-09-14 14:33:10,995][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:33:10.801+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:35:18,761][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:35:18,762][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:35:18,762][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:35:18,763][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:35:18,763][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:35:18,797][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:35:18,797][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:35:18,809][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:35:18,820][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:35:18,820][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:35:18,820][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-14 14:35:18,821][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-14 14:35:18,821][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-14 14:35:19,487][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:35:19.299+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:36:15,643][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:36:15,644][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:36:15,645][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:36:15,646][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:36:15,646][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:36:15,661][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:36:15,662][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:36:15,674][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:36:15,687][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:36:15,688][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:36:15,688][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-14 14:36:15,688][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-14 14:36:15,688][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-14 14:36:16,406][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:36:16.222+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:37:05,296][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:37:05,298][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:37:05,299][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:37:05,299][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:37:05,300][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:37:05,317][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:37:05,318][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:37:05,331][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:37:05,438][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:37:05,439][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:37:05,439][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-14 14:37:05,440][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-14 14:37:05,441][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-14 14:37:06,107][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:37:05.916+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:37:26,774][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:37:26,775][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:37:26,776][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:37:26,777][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:37:26,777][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:37:26,802][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:37:26,802][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:37:26,812][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:37:26,905][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:37:26,905][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:37:26,906][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-14 14:37:26,906][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-14 14:37:26,906][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-14 14:37:27,484][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:37:27.299+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:40:35,151][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:40:35,152][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:40:35,153][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:40:35,154][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:40:35,154][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:40:35,166][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:40:35,167][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:40:35,177][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:40:35,188][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:40:35,188][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:40:35,190][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100100
}
[2022-09-14 14:40:35,190][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100100}
[2022-09-14 14:40:35,190][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100100
}
[2022-09-14 14:40:35,885][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:40:35.699+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:24,387][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:46:24,388][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:46:24,389][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 14:46:24,390][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 14:46:24,390][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:46:24,404][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:46:24,405][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 14:46:24,421][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 14:46:24,442][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:24,443][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:24,443][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-14 14:46:24,443][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-14 14:46:24,443][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-14 14:46:25,133][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:24.951+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:25,139][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:25,140][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:25,140][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-14 14:46:25,140][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-14 14:46:25,141][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-14 14:46:25,698][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:25.514+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:25,712][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:25,713][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:25,714][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100003
}
[2022-09-14 14:46:25,714][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100003}
[2022-09-14 14:46:25,714][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100003
}
[2022-09-14 14:46:26,213][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:26.021+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:26,222][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:26,223][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:26,224][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100004
}
[2022-09-14 14:46:26,224][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100004}
[2022-09-14 14:46:26,224][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100004
}
[2022-09-14 14:46:26,801][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:26.613+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:26,816][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:26,816][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:26,817][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100005
}
[2022-09-14 14:46:26,818][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100005}
[2022-09-14 14:46:26,818][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100005
}
[2022-09-14 14:46:27,385][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:27.205+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:27,390][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:27,390][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:27,391][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100006
}
[2022-09-14 14:46:27,391][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100006}
[2022-09-14 14:46:27,391][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100006
}
[2022-09-14 14:46:27,961][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:27.770+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:27,965][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:27,965][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:27,966][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100007
}
[2022-09-14 14:46:27,966][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100007}
[2022-09-14 14:46:27,966][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100007
}
[2022-09-14 14:46:28,483][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:28.293+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:28,492][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:28,493][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:28,493][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100008
}
[2022-09-14 14:46:28,494][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100008}
[2022-09-14 14:46:28,494][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100008
}
[2022-09-14 14:46:28,999][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:28.806+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:29,009][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:29,011][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:29,011][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100009
}
[2022-09-14 14:46:29,011][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100009}
[2022-09-14 14:46:29,012][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100009
}
[2022-09-14 14:46:29,479][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:29.295+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:29,494][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:29,495][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:29,496][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100010
}
[2022-09-14 14:46:29,496][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100010}
[2022-09-14 14:46:29,497][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100010
}
[2022-09-14 14:46:30,133][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:29.950+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:30,142][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:30,143][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:30,144][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100011
}
[2022-09-14 14:46:30,144][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100011}
[2022-09-14 14:46:30,144][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100011
}
[2022-09-14 14:46:30,619][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:30.435+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:30,631][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:30,631][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:30,632][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100012
}
[2022-09-14 14:46:30,632][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100012}
[2022-09-14 14:46:30,633][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100012
}
[2022-09-14 14:46:31,195][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:31.011+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:31,203][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:31,204][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:31,205][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100013
}
[2022-09-14 14:46:31,207][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100013}
[2022-09-14 14:46:31,208][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100013
}
[2022-09-14 14:46:31,742][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:31.562+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:31,749][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:31,750][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:31,751][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100014
}
[2022-09-14 14:46:31,751][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100014}
[2022-09-14 14:46:31,751][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100014
}
[2022-09-14 14:46:32,309][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:32.124+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:32,315][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:32,315][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:32,316][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100015
}
[2022-09-14 14:46:32,316][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100015}
[2022-09-14 14:46:32,317][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100015
}
[2022-09-14 14:46:32,767][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:32.589+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:32,773][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:32,774][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:32,775][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100016
}
[2022-09-14 14:46:32,775][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100016}
[2022-09-14 14:46:32,776][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100016
}
[2022-09-14 14:46:33,324][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:33.146+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:33,330][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:33,330][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:33,331][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100017
}
[2022-09-14 14:46:33,331][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100017}
[2022-09-14 14:46:33,331][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100017
}
[2022-09-14 14:46:33,845][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:33.667+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:33,849][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:33,849][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:33,850][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100018
}
[2022-09-14 14:46:33,850][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100018}
[2022-09-14 14:46:33,850][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100018
}
[2022-09-14 14:46:34,398][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:34.211+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:34,401][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:34,402][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:34,402][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100019
}
[2022-09-14 14:46:34,402][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100019}
[2022-09-14 14:46:34,402][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100019
}
[2022-09-14 14:46:34,931][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:34.749+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:34,939][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:34,939][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:34,940][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100020
}
[2022-09-14 14:46:34,940][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100020}
[2022-09-14 14:46:34,941][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100020
}
[2022-09-14 14:46:35,420][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:35.236+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:35,426][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:35,427][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:35,427][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100021
}
[2022-09-14 14:46:35,427][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100021}
[2022-09-14 14:46:35,427][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100021
}
[2022-09-14 14:46:36,004][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:35.810+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:36,011][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:36,011][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:36,012][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100022
}
[2022-09-14 14:46:36,012][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100022}
[2022-09-14 14:46:36,013][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100022
}
[2022-09-14 14:46:36,566][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:36.383+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:36,577][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:36,578][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:36,579][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100023
}
[2022-09-14 14:46:36,579][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100023}
[2022-09-14 14:46:36,580][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100023
}
[2022-09-14 14:46:37,071][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:36.878+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:37,079][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:37,080][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:37,081][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100024
}
[2022-09-14 14:46:37,081][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100024}
[2022-09-14 14:46:37,081][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100024
}
[2022-09-14 14:46:37,537][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:37.356+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:37,545][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:37,546][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:37,546][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100025
}
[2022-09-14 14:46:37,546][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100025}
[2022-09-14 14:46:37,546][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100025
}
[2022-09-14 14:46:38,013][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:37.833+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:38,021][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:38,021][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:38,022][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100026
}
[2022-09-14 14:46:38,022][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100026}
[2022-09-14 14:46:38,022][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100026
}
[2022-09-14 14:46:38,466][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:38.287+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:38,472][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:38,472][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:38,472][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100027
}
[2022-09-14 14:46:38,473][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100027}
[2022-09-14 14:46:38,473][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100027
}
[2022-09-14 14:46:38,940][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:38.757+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:38,953][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:38,954][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:38,955][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100028
}
[2022-09-14 14:46:38,955][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100028}
[2022-09-14 14:46:38,956][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100028
}
[2022-09-14 14:46:39,519][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:39.317+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:39,527][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:39,528][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:39,528][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100029
}
[2022-09-14 14:46:39,529][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100029}
[2022-09-14 14:46:39,530][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100029
}
[2022-09-14 14:46:40,100][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:39.916+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:40,106][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:40,106][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:40,106][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100030
}
[2022-09-14 14:46:40,106][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100030}
[2022-09-14 14:46:40,106][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100030
}
[2022-09-14 14:46:40,773][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:40.591+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:40,783][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:40,783][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:40,784][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100031
}
[2022-09-14 14:46:40,784][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100031}
[2022-09-14 14:46:40,785][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100031
}
[2022-09-14 14:46:41,378][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:41.189+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:41,387][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:41,387][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:41,388][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100032
}
[2022-09-14 14:46:41,388][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100032}
[2022-09-14 14:46:41,389][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100032
}
[2022-09-14 14:46:41,931][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:41.728+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:41,948][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:41,949][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:41,949][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100033
}
[2022-09-14 14:46:41,950][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100033}
[2022-09-14 14:46:41,951][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100033
}
[2022-09-14 14:46:42,559][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:42.360+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:42,583][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:42,584][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:42,584][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100034
}
[2022-09-14 14:46:42,585][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100034}
[2022-09-14 14:46:42,585][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100034
}
[2022-09-14 14:46:43,191][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:42.995+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:43,212][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:43,213][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:43,213][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100035
}
[2022-09-14 14:46:43,214][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100035}
[2022-09-14 14:46:43,214][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100035
}
[2022-09-14 14:46:43,775][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:43.593+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:43,781][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:43,782][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:43,782][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100036
}
[2022-09-14 14:46:43,782][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100036}
[2022-09-14 14:46:43,782][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100036
}
[2022-09-14 14:46:44,276][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:44.088+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:44,295][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:44,295][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:44,296][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100037
}
[2022-09-14 14:46:44,297][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100037}
[2022-09-14 14:46:44,298][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100037
}
[2022-09-14 14:46:44,845][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:44.652+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:44,863][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:44,863][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:44,864][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100038
}
[2022-09-14 14:46:44,864][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100038}
[2022-09-14 14:46:44,864][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100038
}
[2022-09-14 14:46:45,472][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:45.277+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:45,480][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:45,480][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:45,480][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100039
}
[2022-09-14 14:46:45,481][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100039}
[2022-09-14 14:46:45,481][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100039
}
[2022-09-14 14:46:45,952][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:45.761+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:45,965][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:45,965][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:45,966][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100040
}
[2022-09-14 14:46:45,966][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100040}
[2022-09-14 14:46:45,966][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100040
}
[2022-09-14 14:46:46,476][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:46.278+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:46,483][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:46,484][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:46,484][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100041
}
[2022-09-14 14:46:46,485][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100041}
[2022-09-14 14:46:46,485][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100041
}
[2022-09-14 14:46:46,946][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:46.764+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:46,952][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:46,952][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:46,952][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100042
}
[2022-09-14 14:46:46,953][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100042}
[2022-09-14 14:46:46,953][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100042
}
[2022-09-14 14:46:47,494][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:47.317+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:47,499][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:47,499][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:47,499][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100043
}
[2022-09-14 14:46:47,500][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100043}
[2022-09-14 14:46:47,500][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100043
}
[2022-09-14 14:46:47,989][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:47.788+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:47,999][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:47,999][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:48,000][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100044
}
[2022-09-14 14:46:48,000][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100044}
[2022-09-14 14:46:48,000][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100044
}
[2022-09-14 14:46:48,454][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:48.277+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:48,458][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:48,458][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:48,458][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100045
}
[2022-09-14 14:46:48,459][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100045}
[2022-09-14 14:46:48,459][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100045
}
[2022-09-14 14:46:48,983][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:48.800+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:48,989][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:48,989][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:48,990][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100046
}
[2022-09-14 14:46:48,990][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100046}
[2022-09-14 14:46:48,990][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100046
}
[2022-09-14 14:46:49,459][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:49.277+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:49,463][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:49,464][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:49,464][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100047
}
[2022-09-14 14:46:49,465][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100047}
[2022-09-14 14:46:49,465][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100047
}
[2022-09-14 14:46:49,996][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:49.815+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:50,001][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:50,001][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:50,002][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100048
}
[2022-09-14 14:46:50,002][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100048}
[2022-09-14 14:46:50,002][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100048
}
[2022-09-14 14:46:50,544][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:50.365+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:50,549][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:50,549][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:50,549][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100049
}
[2022-09-14 14:46:50,550][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100049}
[2022-09-14 14:46:50,550][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100049
}
[2022-09-14 14:46:51,247][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:51.067+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:51,251][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:51,251][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:51,252][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100050
}
[2022-09-14 14:46:51,252][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100050}
[2022-09-14 14:46:51,252][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100050
}
[2022-09-14 14:46:51,726][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:51.540+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:51,733][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:51,733][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:51,734][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100051
}
[2022-09-14 14:46:51,734][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100051}
[2022-09-14 14:46:51,735][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100051
}
[2022-09-14 14:46:52,240][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:52.062+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:52,244][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:52,244][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:52,244][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100052
}
[2022-09-14 14:46:52,245][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100052}
[2022-09-14 14:46:52,245][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100052
}
[2022-09-14 14:46:52,685][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:52.502+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:52,689][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:52,689][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:52,690][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100053
}
[2022-09-14 14:46:52,690][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100053}
[2022-09-14 14:46:52,690][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100053
}
[2022-09-14 14:46:53,238][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:53.048+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:53,242][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:53,242][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:53,242][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100054
}
[2022-09-14 14:46:53,242][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100054}
[2022-09-14 14:46:53,243][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100054
}
[2022-09-14 14:46:53,766][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:53.583+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:53,772][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:53,773][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:53,773][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100055
}
[2022-09-14 14:46:53,773][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100055}
[2022-09-14 14:46:53,773][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100055
}
[2022-09-14 14:46:54,300][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:54.112+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:54,305][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:54,305][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:54,305][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100056
}
[2022-09-14 14:46:54,305][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100056}
[2022-09-14 14:46:54,306][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100056
}
[2022-09-14 14:46:54,843][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:54.663+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:54,848][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:54,849][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:54,849][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100057
}
[2022-09-14 14:46:54,849][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100057}
[2022-09-14 14:46:54,849][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100057
}
[2022-09-14 14:46:55,382][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:55.202+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:55,386][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:55,386][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:55,386][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100058
}
[2022-09-14 14:46:55,386][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100058}
[2022-09-14 14:46:55,386][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100058
}
[2022-09-14 14:46:55,850][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:55.669+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:55,855][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:55,855][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:55,856][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100059
}
[2022-09-14 14:46:55,856][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100059}
[2022-09-14 14:46:55,856][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100059
}
[2022-09-14 14:46:56,321][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:56.133+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:56,330][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:56,331][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:56,331][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100060
}
[2022-09-14 14:46:56,332][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100060}
[2022-09-14 14:46:56,333][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100060
}
[2022-09-14 14:46:56,856][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:56.661+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:56,865][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:56,865][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:56,866][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100061
}
[2022-09-14 14:46:56,866][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100061}
[2022-09-14 14:46:56,866][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100061
}
[2022-09-14 14:46:57,324][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:57.141+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:57,329][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:57,329][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:57,329][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100062
}
[2022-09-14 14:46:57,330][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100062}
[2022-09-14 14:46:57,330][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100062
}
[2022-09-14 14:46:57,768][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:57.590+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:57,773][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:57,774][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:57,774][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100063
}
[2022-09-14 14:46:57,774][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100063}
[2022-09-14 14:46:57,774][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100063
}
[2022-09-14 14:46:58,301][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:58.108+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:58,309][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:58,310][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:58,310][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100064
}
[2022-09-14 14:46:58,312][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100064}
[2022-09-14 14:46:58,313][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100064
}
[2022-09-14 14:46:58,777][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:58.599+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:58,781][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:58,781][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:58,781][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100065
}
[2022-09-14 14:46:58,781][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100065}
[2022-09-14 14:46:58,782][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100065
}
[2022-09-14 14:46:59,273][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:59.086+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:59,279][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:59,279][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:59,279][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100066
}
[2022-09-14 14:46:59,279][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100066}
[2022-09-14 14:46:59,280][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100066
}
[2022-09-14 14:46:59,758][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:46:59.572+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:46:59,762][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:46:59,763][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:46:59,763][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100067
}
[2022-09-14 14:46:59,763][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100067}
[2022-09-14 14:46:59,763][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100067
}
[2022-09-14 14:47:00,236][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:00.052+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:00,242][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:00,242][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:00,243][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100068
}
[2022-09-14 14:47:00,243][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100068}
[2022-09-14 14:47:00,243][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100068
}
[2022-09-14 14:47:00,708][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:00.523+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:00,721][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:00,721][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:00,722][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100069
}
[2022-09-14 14:47:00,724][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100069}
[2022-09-14 14:47:00,725][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100069
}
[2022-09-14 14:47:01,189][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:00.999+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:01,194][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:01,194][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:01,194][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100070
}
[2022-09-14 14:47:01,194][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100070}
[2022-09-14 14:47:01,195][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100070
}
[2022-09-14 14:47:01,820][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:01.634+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:01,825][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:01,825][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:01,826][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100071
}
[2022-09-14 14:47:01,826][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100071}
[2022-09-14 14:47:01,826][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100071
}
[2022-09-14 14:47:02,281][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:02.099+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:02,288][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:02,289][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:02,289][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100072
}
[2022-09-14 14:47:02,290][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100072}
[2022-09-14 14:47:02,290][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100072
}
[2022-09-14 14:47:02,753][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:02.573+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:02,759][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:02,759][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:02,759][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100073
}
[2022-09-14 14:47:02,759][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100073}
[2022-09-14 14:47:02,760][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100073
}
[2022-09-14 14:47:03,265][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:03.080+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:03,274][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:03,275][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:03,275][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100074
}
[2022-09-14 14:47:03,276][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100074}
[2022-09-14 14:47:03,276][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100074
}
[2022-09-14 14:47:03,758][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:03.579+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:03,762][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:03,762][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:03,762][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100075
}
[2022-09-14 14:47:03,762][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100075}
[2022-09-14 14:47:03,763][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100075
}
[2022-09-14 14:47:04,215][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:04.035+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:04,220][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:04,221][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:04,221][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100076
}
[2022-09-14 14:47:04,221][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100076}
[2022-09-14 14:47:04,221][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100076
}
[2022-09-14 14:47:04,642][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:04.468+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:04,647][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:04,647][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:04,647][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100077
}
[2022-09-14 14:47:04,647][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100077}
[2022-09-14 14:47:04,648][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100077
}
[2022-09-14 14:47:05,178][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:04.996+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:05,185][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:05,186][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:05,186][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100078
}
[2022-09-14 14:47:05,187][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100078}
[2022-09-14 14:47:05,187][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100078
}
[2022-09-14 14:47:05,680][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:05.488+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:05,683][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:05,683][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:05,684][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100079
}
[2022-09-14 14:47:05,684][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100079}
[2022-09-14 14:47:05,685][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100079
}
[2022-09-14 14:47:06,226][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:06.038+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:06,230][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:06,230][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:06,230][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100080
}
[2022-09-14 14:47:06,230][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100080}
[2022-09-14 14:47:06,231][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100080
}
[2022-09-14 14:47:06,672][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:06.493+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:06,677][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:06,678][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:06,678][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100081
}
[2022-09-14 14:47:06,678][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100081}
[2022-09-14 14:47:06,679][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100081
}
[2022-09-14 14:47:07,157][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:06.960+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:07,161][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:07,161][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:07,162][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100082
}
[2022-09-14 14:47:07,162][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100082}
[2022-09-14 14:47:07,162][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100082
}
[2022-09-14 14:47:07,688][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:07.488+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:07,703][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:07,704][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:07,705][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100083
}
[2022-09-14 14:47:07,706][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100083}
[2022-09-14 14:47:07,707][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100083
}
[2022-09-14 14:47:08,175][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:07.992+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:08,179][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:08,179][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:08,179][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100084
}
[2022-09-14 14:47:08,180][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100084}
[2022-09-14 14:47:08,180][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100084
}
[2022-09-14 14:47:08,636][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:08.453+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:08,644][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:08,645][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:08,646][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100085
}
[2022-09-14 14:47:08,646][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100085}
[2022-09-14 14:47:08,646][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100085
}
[2022-09-14 14:47:09,090][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:08.912+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:09,100][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:09,101][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:09,101][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100086
}
[2022-09-14 14:47:09,102][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100086}
[2022-09-14 14:47:09,102][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100086
}
[2022-09-14 14:47:09,566][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:09.380+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:09,577][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:09,578][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:09,579][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100087
}
[2022-09-14 14:47:09,580][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100087}
[2022-09-14 14:47:09,581][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100087
}
[2022-09-14 14:47:10,045][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:09.863+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:10,058][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:10,059][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:10,059][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100088
}
[2022-09-14 14:47:10,059][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100088}
[2022-09-14 14:47:10,060][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100088
}
[2022-09-14 14:47:10,555][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:10.374+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:10,559][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:10,560][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:10,560][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100089
}
[2022-09-14 14:47:10,560][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100089}
[2022-09-14 14:47:10,560][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100089
}
[2022-09-14 14:47:11,087][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:10.904+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:11,096][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:11,096][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:11,096][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100090
}
[2022-09-14 14:47:11,098][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100090}
[2022-09-14 14:47:11,098][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100090
}
[2022-09-14 14:47:11,602][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:11.425+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:11,607][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:11,608][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:11,608][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100091
}
[2022-09-14 14:47:11,608][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100091}
[2022-09-14 14:47:11,608][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100091
}
[2022-09-14 14:47:12,186][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:12.003+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:12,193][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:12,194][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:12,194][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100092
}
[2022-09-14 14:47:12,196][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100092}
[2022-09-14 14:47:12,196][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100092
}
[2022-09-14 14:47:12,647][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:12.465+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:12,656][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:12,656][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:12,656][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100093
}
[2022-09-14 14:47:12,657][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100093}
[2022-09-14 14:47:12,657][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100093
}
[2022-09-14 14:47:13,147][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:12.957+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:13,156][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:13,157][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:13,157][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100094
}
[2022-09-14 14:47:13,158][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100094}
[2022-09-14 14:47:13,158][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100094
}
[2022-09-14 14:47:13,618][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:13.438+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:13,622][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:13,622][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:13,622][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100095
}
[2022-09-14 14:47:13,622][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100095}
[2022-09-14 14:47:13,623][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100095
}
[2022-09-14 14:47:14,147][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:13.966+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:14,153][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:14,153][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:14,153][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100096
}
[2022-09-14 14:47:14,154][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100096}
[2022-09-14 14:47:14,154][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100096
}
[2022-09-14 14:47:14,688][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:14.506+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:14,693][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:14,693][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:14,694][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100097
}
[2022-09-14 14:47:14,694][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100097}
[2022-09-14 14:47:14,694][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100097
}
[2022-09-14 14:47:15,245][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:15.066+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:15,248][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:15,249][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:15,249][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100098
}
[2022-09-14 14:47:15,249][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100098}
[2022-09-14 14:47:15,250][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100098
}
[2022-09-14 14:47:15,710][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:15.529+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 14:47:15,714][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-14 14:47:15,714][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 14:47:15,715][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100099
}
[2022-09-14 14:47:15,715][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100099}
[2022-09-14 14:47:15,715][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100099
}
[2022-09-14 14:47:16,203][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T06:47:16.006+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-14 15:20:12,254][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:20:12,255][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:20:12,256][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:20:12,256][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:20:12,257][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:20:12,275][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:20:12,275][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:20:12,285][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:20:12,305][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:12,305][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:12,305][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:12,305][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:12,305][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:12,997][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:12.807+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:45,379][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:20:45,380][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:20:45,381][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:20:45,382][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:20:45,382][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:20:45,411][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:20:45,411][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:20:45,423][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:20:45,474][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:45,475][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:45,475][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:45,475][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:45,475][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:46,123][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:45.954+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:46,128][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:46,129][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:46,129][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:46,130][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:46,130][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:46,672][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:46.491+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:46,678][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:46,678][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:46,679][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100003,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:46,679][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100003, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:46,679][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100003,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:47,226][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:47.054+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:47,235][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:47,235][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:47,236][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100004,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:47,236][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100004, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:47,237][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100004,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:47,673][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:47.500+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:47,680][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:47,681][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:47,681][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100005,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:47,682][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100005, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:47,682][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100005,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:48,131][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:47.956+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:48,140][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:48,140][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:48,141][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100006,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:48,142][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100006, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:48,142][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100006,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:48,692][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:48.514+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:48,697][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:48,697][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:48,697][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100007,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:48,697][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100007, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:48,698][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100007,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:49,147][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:48.980+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:49,153][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:49,154][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:49,154][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100008,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:49,154][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100008, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:49,155][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100008,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:49,688][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:49.508+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:49,696][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:49,697][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:49,698][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100009,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:49,698][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100009, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:49,698][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100009,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:50,237][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:50.060+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:50,241][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:50,241][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:50,241][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100010,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:50,241][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100010, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:50,242][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100010,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:50,720][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:50.543+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:50,730][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:50,731][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:50,731][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100011,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:50,731][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100011, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:50,732][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100011,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:51,344][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:51.166+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:51,347][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:51,348][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:51,348][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100012,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:51,348][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100012, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:51,348][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100012,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:51,897][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:51.722+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:51,903][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:51,903][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:51,904][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100013,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:51,904][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100013, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:51,904][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100013,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:52,346][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:52.184+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:52,351][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:52,351][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:52,352][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100014,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:52,352][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100014, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:52,352][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100014,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:53,090][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:52.912+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:53,094][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:53,094][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:53,095][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100015,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:53,095][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100015, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:53,095][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100015,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:53,561][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:53.387+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:53,569][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:53,570][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:53,570][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100016,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:53,571][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100016, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:53,572][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100016,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:54,103][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:53.934+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:54,110][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:54,111][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:54,111][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100017,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:54,112][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100017, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:54,112][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100017,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:54,587][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:54.419+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:54,596][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:54,596][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:54,597][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100018,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:54,597][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100018, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:54,597][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100018,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:55,161][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:54.991+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:55,165][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:55,166][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:55,166][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100019,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:55,167][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100019, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:55,167][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100019,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:55,630][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:55.461+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:55,643][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:55,643][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:55,644][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100020,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:55,644][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100020, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:55,645][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100020,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:56,114][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:55.942+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:56,126][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:56,127][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:56,127][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100021,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:56,128][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100021, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:56,128][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100021,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:56,597][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:56.425+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:56,605][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:56,605][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:56,606][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100022,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:56,606][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100022, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:56,606][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100022,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:57,139][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:56.962+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:57,150][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:57,151][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:57,151][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100023,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:57,152][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100023, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:57,153][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100023,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:57,611][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:57.438+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:57,622][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:57,623][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:57,624][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100024,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:57,625][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100024, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:57,626][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100024,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:58,193][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:57.932+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:58,204][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:58,204][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:58,205][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100025,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:58,205][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100025, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:58,205][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100025,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:58,957][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:58.725+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:58,969][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:58,969][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:58,970][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100026,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:58,971][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100026, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:58,971][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100026,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:59,778][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:20:59.506+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:20:59,790][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:20:59,790][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:20:59,791][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100027,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:20:59,792][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100027, 'timeType': 'ONE_DAY'}
[2022-09-14 15:20:59,792][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100027,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:00,601][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:00.372+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:00,614][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:00,615][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:00,616][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100028,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:00,617][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100028, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:00,618][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100028,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:01,333][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:01.157+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:01,338][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:01,339][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:01,339][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100029,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:01,339][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100029, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:01,339][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100029,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:01,977][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:01.805+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:01,983][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:01,983][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:01,983][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100030,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:01,984][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100030, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:01,984][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100030,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:02,538][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:02.364+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:02,551][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:02,551][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:02,552][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100031,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:02,552][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100031, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:02,552][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100031,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:03,107][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:02.932+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:03,117][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:03,117][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:03,118][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100032,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:03,118][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100032, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:03,119][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100032,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:03,618][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:03.426+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:03,627][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:03,628][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:03,629][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100033,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:03,629][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100033, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:03,630][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100033,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:04,226][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:04.031+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:04,235][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:04,236][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:04,237][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100034,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:04,237][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100034, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:04,238][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100034,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:04,774][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:04.600+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:04,784][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:04,785][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:04,785][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100035,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:04,786][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100035, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:04,786][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100035,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:05,338][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:05.163+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:05,349][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:05,355][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:05,355][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100036,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:05,356][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100036, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:05,356][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100036,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:05,829][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:05.657+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:05,841][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:05,841][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:05,842][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100037,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:05,843][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100037, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:05,844][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100037,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:06,316][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:06.139+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:06,328][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:06,328][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:06,329][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100038,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:06,329][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100038, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:06,330][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100038,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:06,777][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:06.610+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:06,781][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:06,781][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:06,781][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100039,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:06,781][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100039, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:06,782][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100039,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:07,265][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:07.093+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:07,275][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:07,276][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:07,276][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100040,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:07,277][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100040, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:07,277][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100040,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:07,815][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:07.640+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:07,825][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:07,826][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:07,826][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100041,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:07,826][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100041, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:07,827][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100041,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:08,384][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:08.211+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:08,396][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:08,396][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:08,397][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100042,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:08,397][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100042, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:08,398][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100042,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:08,878][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:08.704+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:08,890][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:08,891][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:08,891][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100043,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:08,891][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100043, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:08,892][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100043,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:09,405][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:09.235+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:09,415][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:09,416][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:09,417][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100044,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:09,418][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100044, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:09,418][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100044,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:09,963][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:09.790+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:09,975][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:09,976][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:09,976][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100045,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:09,977][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100045, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:09,977][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100045,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:10,451][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:10.275+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:10,463][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:10,463][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:10,463][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100046,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:10,464][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100046, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:10,464][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100046,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:10,918][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:10.748+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:10,929][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:10,929][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:10,930][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100047,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:10,930][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100047, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:10,930][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100047,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:11,489][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:11.314+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:11,498][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:11,499][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:11,500][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100048,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:11,500][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100048, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:11,500][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100048,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:11,987][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:11.820+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:11,996][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:11,996][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:11,997][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100049,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:11,997][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100049, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:11,997][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100049,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:12,554][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:12.382+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:12,558][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:12,559][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:12,559][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100050,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:12,560][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100050, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:12,560][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100050,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:13,017][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:12.849+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:13,022][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:13,022][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:13,022][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100051,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:13,022][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100051, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:13,023][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100051,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:13,495][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:13.326+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:13,501][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:13,502][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:13,502][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100052,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:13,503][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100052, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:13,503][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100052,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:13,977][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:13.799+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:13,984][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:13,984][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:13,985][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100053,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:13,985][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100053, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:13,985][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100053,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:14,458][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:14.287+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:14,462][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:14,462][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:14,462][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100054,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:14,463][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100054, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:14,463][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100054,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:14,899][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:14.737+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:14,906][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:14,906][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:14,907][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100055,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:14,907][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100055, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:14,907][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100055,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:15,438][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:15.261+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:15,442][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:15,443][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:15,443][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100056,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:15,443][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100056, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:15,444][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100056,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:15,970][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:15.789+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:15,975][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:15,975][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:15,976][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100057,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:15,976][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100057, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:15,976][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100057,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:16,515][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:16.344+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:16,520][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:16,521][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:16,521][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100058,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:16,521][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100058, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:16,522][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100058,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:16,991][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:16.823+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:16,997][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:16,997][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:16,998][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100059,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:16,999][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100059, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:16,999][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100059,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:17,535][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:17.361+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:17,552][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:17,553][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:17,554][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100060,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:17,555][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100060, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:17,556][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100060,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:18,000][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:17.830+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:18,005][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:18,006][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:18,006][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100061,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:18,006][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100061, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:18,007][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100061,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:18,552][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:18.364+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:18,564][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:18,566][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:18,567][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100062,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:18,568][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100062, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:18,569][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100062,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:19,066][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:18.878+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:19,078][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:19,079][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:19,079][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100063,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:19,080][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100063, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:19,080][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100063,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:19,591][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:19.412+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:19,603][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:19,604][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:19,604][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100064,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:19,604][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100064, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:19,605][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100064,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:20,149][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:19.975+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:20,155][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:20,155][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:20,156][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100065,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:20,156][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100065, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:20,157][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100065,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:20,729][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:20.543+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:20,738][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:20,739][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:20,740][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100066,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:20,740][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100066, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:20,741][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100066,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:21,198][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:21.029+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:21,204][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:21,205][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:21,205][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100067,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:21,205][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100067, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:21,206][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100067,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:21,699][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:21.521+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:21,703][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:21,703][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:21,703][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100068,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:21,704][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100068, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:21,704][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100068,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:22,213][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:22.035+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:22,226][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:22,227][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:22,228][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100069,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:22,229][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100069, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:22,229][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100069,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:22,959][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:22.789+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:22,971][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:22,972][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:22,973][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100070,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:22,974][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100070, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:22,975][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100070,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:23,526][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:23.348+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:23,538][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:23,538][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:23,539][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100071,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:23,539][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100071, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:23,540][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100071,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:24,076][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:23.901+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:24,088][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:24,089][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:24,090][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100072,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:24,091][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100072, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:24,091][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100072,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:24,584][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:24.409+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:24,594][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:24,595][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:24,596][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100073,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:24,596][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100073, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:24,596][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100073,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:25,076][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:24.901+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:25,083][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:25,084][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:25,084][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100074,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:25,084][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100074, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:25,085][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100074,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:25,561][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:25.379+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:25,574][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:25,574][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:25,575][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100075,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:25,575][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100075, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:25,575][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100075,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:26,134][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:25.962+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:26,140][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:26,140][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:26,141][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100076,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:26,141][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100076, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:26,141][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100076,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:26,673][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:26.497+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:26,678][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:26,679][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:26,679][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100077,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:26,679][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100077, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:26,679][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100077,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:27,190][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:27.023+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:27,194][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:27,194][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:27,194][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100078,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:27,194][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100078, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:27,194][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100078,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:27,725][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:27.554+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:27,729][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:27,729][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:27,729][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100079,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:27,729][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100079, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:27,729][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100079,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:28,297][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:28.117+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:28,309][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:28,309][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:28,309][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100080,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:28,310][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100080, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:28,310][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100080,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:28,768][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:28.595+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:28,780][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:28,780][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:28,781][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100081,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:28,781][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100081, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:28,781][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100081,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:29,309][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:29.137+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:29,317][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:29,318][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:29,318][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100082,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:29,318][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100082, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:29,319][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100082,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:29,791][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:29.618+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:29,799][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:29,800][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:29,800][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100083,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:29,801][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100083, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:29,802][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100083,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:30,379][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:30.180+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:30,390][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:30,390][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:30,391][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100084,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:30,391][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100084, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:30,391][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100084,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:30,886][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:30.708+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:30,896][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:30,897][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:30,897][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100085,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:30,898][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100085, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:30,898][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100085,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:31,394][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:31.211+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:31,404][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:31,405][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:31,405][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100086,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:31,405][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100086, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:31,406][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100086,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:31,978][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:31.796+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:31,990][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:31,990][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:31,991][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100087,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:31,991][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100087, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:31,991][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100087,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:32,500][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:32.327+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:32,508][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:32,508][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:32,509][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100088,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:32,509][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100088, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:32,510][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100088,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:33,077][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:32.902+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:33,082][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:33,082][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:33,082][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100089,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:33,082][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100089, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:33,082][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100089,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:33,727][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:33.555+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:33,742][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:33,743][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:33,744][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100090,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:33,745][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100090, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:33,746][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100090,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:34,223][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:34.050+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:34,230][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:34,231][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:34,231][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100091,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:34,231][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100091, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:34,232][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100091,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:34,727][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:34.533+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:34,738][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:34,739][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:34,740][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100092,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:34,741][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100092, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:34,742][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100092,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:35,230][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:35.060+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:35,234][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:35,234][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:35,234][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100093,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:35,234][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100093, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:35,235][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100093,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:35,745][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:35.566+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:35,748][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:35,749][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:35,749][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100094,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:35,749][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100094, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:35,749][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100094,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:36,317][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:36.135+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:36,328][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:36,328][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:36,329][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100095,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:36,329][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100095, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:36,329][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100095,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:36,795][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:36.624+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:36,802][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:36,802][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:36,803][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100096,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:36,803][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100096, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:36,803][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100096,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:37,343][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:37.179+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:37,347][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:37,348][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:37,348][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100097,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:37,348][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100097, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:37,349][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100097,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:37,944][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:37.761+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:37,953][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:37,954][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:37,954][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100098,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:37,955][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100098, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:37,955][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100098,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:38,447][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:38.272+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:21:38,459][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/marketCapAndVolume/app
[2022-09-14 15:21:38,460][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:21:38,460][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100099,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:38,461][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100099, 'timeType': 'ONE_DAY'}
[2022-09-14 15:21:38,461][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100099,
    "timeType": "ONE_DAY"
}
[2022-09-14 15:21:38,918][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:21:38.741+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/marketCapAndVolume/app'}
[2022-09-14 15:25:14,619][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:25:14,620][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:25:14,621][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:25:14,622][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:25:14,622][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:25:14,650][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:25:14,651][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:25:14,660][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:25:14,703][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:14,704][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:14,704][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001,
    "type": 1
}
[2022-09-14 15:25:14,704][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001, 'type': 1}
[2022-09-14 15:25:14,704][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001,
    "type": 1
}
[2022-09-14 15:25:15,313][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:15.142+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:15,322][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:15,322][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:15,323][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002,
    "type": 1
}
[2022-09-14 15:25:15,323][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002, 'type': 1}
[2022-09-14 15:25:15,323][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002,
    "type": 1
}
[2022-09-14 15:25:15,785][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:15.613+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:15,789][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:15,790][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:15,790][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100003,
    "type": 1
}
[2022-09-14 15:25:15,790][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100003, 'type': 1}
[2022-09-14 15:25:15,790][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100003,
    "type": 1
}
[2022-09-14 15:25:16,338][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:16.168+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:16,343][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:16,344][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:16,344][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100004,
    "type": 1
}
[2022-09-14 15:25:16,345][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100004, 'type': 1}
[2022-09-14 15:25:16,345][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100004,
    "type": 1
}
[2022-09-14 15:25:16,873][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:16.703+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:16,887][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:16,888][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:16,888][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100005,
    "type": 1
}
[2022-09-14 15:25:16,888][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100005, 'type': 1}
[2022-09-14 15:25:16,889][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100005,
    "type": 1
}
[2022-09-14 15:25:17,363][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:17.185+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:17,380][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:17,382][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:17,383][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100006,
    "type": 1
}
[2022-09-14 15:25:17,384][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100006, 'type': 1}
[2022-09-14 15:25:17,385][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100006,
    "type": 1
}
[2022-09-14 15:25:17,935][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:17.765+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:17,941][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:17,941][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:17,942][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100007,
    "type": 1
}
[2022-09-14 15:25:17,942][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100007, 'type': 1}
[2022-09-14 15:25:17,942][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100007,
    "type": 1
}
[2022-09-14 15:25:18,431][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:18.252+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:18,440][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:18,440][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:18,441][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100008,
    "type": 1
}
[2022-09-14 15:25:18,441][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100008, 'type': 1}
[2022-09-14 15:25:18,441][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100008,
    "type": 1
}
[2022-09-14 15:25:18,903][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:18.726+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:18,912][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:18,913][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:18,913][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100009,
    "type": 1
}
[2022-09-14 15:25:18,914][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100009, 'type': 1}
[2022-09-14 15:25:18,915][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100009,
    "type": 1
}
[2022-09-14 15:25:19,419][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:19.243+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:19,423][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:19,423][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:19,423][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100010,
    "type": 1
}
[2022-09-14 15:25:19,423][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100010, 'type': 1}
[2022-09-14 15:25:19,424][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100010,
    "type": 1
}
[2022-09-14 15:25:20,065][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:19.878+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:20,071][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:20,071][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:20,072][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100011,
    "type": 1
}
[2022-09-14 15:25:20,072][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100011, 'type': 1}
[2022-09-14 15:25:20,072][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100011,
    "type": 1
}
[2022-09-14 15:25:20,578][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:20.394+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:20,590][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:20,591][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:20,591][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100012,
    "type": 1
}
[2022-09-14 15:25:20,591][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100012, 'type': 1}
[2022-09-14 15:25:20,591][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100012,
    "type": 1
}
[2022-09-14 15:25:21,108][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:20.930+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:21,111][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:21,111][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:21,112][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100013,
    "type": 1
}
[2022-09-14 15:25:21,112][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100013, 'type': 1}
[2022-09-14 15:25:21,112][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100013,
    "type": 1
}
[2022-09-14 15:25:21,584][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:21.406+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:21,589][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:21,590][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:21,590][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100014,
    "type": 1
}
[2022-09-14 15:25:21,590][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100014, 'type': 1}
[2022-09-14 15:25:21,590][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100014,
    "type": 1
}
[2022-09-14 15:25:22,127][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:21.946+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:22,132][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:22,132][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:22,132][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100015,
    "type": 1
}
[2022-09-14 15:25:22,133][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100015, 'type': 1}
[2022-09-14 15:25:22,133][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100015,
    "type": 1
}
[2022-09-14 15:25:22,663][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:22.493+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:22,668][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:22,668][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:22,669][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100016,
    "type": 1
}
[2022-09-14 15:25:22,669][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100016, 'type': 1}
[2022-09-14 15:25:22,669][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100016,
    "type": 1
}
[2022-09-14 15:25:23,101][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:22.936+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:23,106][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:23,106][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:23,106][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100017,
    "type": 1
}
[2022-09-14 15:25:23,107][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100017, 'type': 1}
[2022-09-14 15:25:23,107][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100017,
    "type": 1
}
[2022-09-14 15:25:23,655][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:23.479+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:23,662][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:23,663][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:23,663][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100018,
    "type": 1
}
[2022-09-14 15:25:23,663][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100018, 'type': 1}
[2022-09-14 15:25:23,664][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100018,
    "type": 1
}
[2022-09-14 15:25:24,192][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:24.022+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:24,200][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:24,201][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:24,201][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100019,
    "type": 1
}
[2022-09-14 15:25:24,202][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100019, 'type': 1}
[2022-09-14 15:25:24,202][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100019,
    "type": 1
}
[2022-09-14 15:25:24,748][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:24.578+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:24,752][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:24,752][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:24,753][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100020,
    "type": 1
}
[2022-09-14 15:25:24,753][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100020, 'type': 1}
[2022-09-14 15:25:24,753][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100020,
    "type": 1
}
[2022-09-14 15:25:25,272][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:25.105+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:25,278][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:25,278][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:25,278][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100021,
    "type": 1
}
[2022-09-14 15:25:25,278][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100021, 'type': 1}
[2022-09-14 15:25:25,278][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100021,
    "type": 1
}
[2022-09-14 15:25:25,923][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:25.754+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:25,929][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:25,929][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:25,930][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100022,
    "type": 1
}
[2022-09-14 15:25:25,930][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100022, 'type': 1}
[2022-09-14 15:25:25,930][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100022,
    "type": 1
}
[2022-09-14 15:25:26,382][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:26.213+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:26,386][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:26,387][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:26,387][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100023,
    "type": 1
}
[2022-09-14 15:25:26,387][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100023, 'type': 1}
[2022-09-14 15:25:26,387][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100023,
    "type": 1
}
[2022-09-14 15:25:26,902][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:26.736+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:26,908][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:26,909][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:26,909][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100024,
    "type": 1
}
[2022-09-14 15:25:26,909][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100024, 'type': 1}
[2022-09-14 15:25:26,909][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100024,
    "type": 1
}
[2022-09-14 15:25:27,353][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:27.184+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:27,365][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:27,365][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:27,366][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100025,
    "type": 1
}
[2022-09-14 15:25:27,366][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100025, 'type': 1}
[2022-09-14 15:25:27,367][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100025,
    "type": 1
}
[2022-09-14 15:25:27,831][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:27.660+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:27,841][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:27,841][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:27,842][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100026,
    "type": 1
}
[2022-09-14 15:25:27,842][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100026, 'type': 1}
[2022-09-14 15:25:27,842][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100026,
    "type": 1
}
[2022-09-14 15:25:28,316][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:28.146+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:28,319][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:28,319][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:28,320][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100027,
    "type": 1
}
[2022-09-14 15:25:28,320][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100027, 'type': 1}
[2022-09-14 15:25:28,320][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100027,
    "type": 1
}
[2022-09-14 15:25:28,795][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:28.625+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:28,800][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:28,800][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:28,800][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100028,
    "type": 1
}
[2022-09-14 15:25:28,801][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100028, 'type': 1}
[2022-09-14 15:25:28,801][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100028,
    "type": 1
}
[2022-09-14 15:25:29,355][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:29.185+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:29,359][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:29,359][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:29,360][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100029,
    "type": 1
}
[2022-09-14 15:25:29,360][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100029, 'type': 1}
[2022-09-14 15:25:29,360][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100029,
    "type": 1
}
[2022-09-14 15:25:29,900][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:29.727+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:29,905][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:29,906][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:29,906][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100030,
    "type": 1
}
[2022-09-14 15:25:29,906][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100030, 'type': 1}
[2022-09-14 15:25:29,906][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100030,
    "type": 1
}
[2022-09-14 15:25:30,326][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:30.161+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:30,329][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:30,330][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:30,330][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100031,
    "type": 1
}
[2022-09-14 15:25:30,330][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100031, 'type': 1}
[2022-09-14 15:25:30,330][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100031,
    "type": 1
}
[2022-09-14 15:25:30,780][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:30.610+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:30,783][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:30,784][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:30,784][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100032,
    "type": 1
}
[2022-09-14 15:25:30,784][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100032, 'type': 1}
[2022-09-14 15:25:30,784][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100032,
    "type": 1
}
[2022-09-14 15:25:31,442][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:31.273+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:31,448][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:31,448][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:31,448][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100033,
    "type": 1
}
[2022-09-14 15:25:31,448][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100033, 'type': 1}
[2022-09-14 15:25:31,448][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100033,
    "type": 1
}
[2022-09-14 15:25:31,915][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:31.746+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:31,921][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:31,921][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:31,922][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100034,
    "type": 1
}
[2022-09-14 15:25:31,922][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100034, 'type': 1}
[2022-09-14 15:25:31,922][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100034,
    "type": 1
}
[2022-09-14 15:25:32,391][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:32.216+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:32,399][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:32,400][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:32,400][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100035,
    "type": 1
}
[2022-09-14 15:25:32,401][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100035, 'type': 1}
[2022-09-14 15:25:32,402][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100035,
    "type": 1
}
[2022-09-14 15:25:32,832][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:32.667+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:32,836][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:32,837][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:32,837][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100036,
    "type": 1
}
[2022-09-14 15:25:32,837][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100036, 'type': 1}
[2022-09-14 15:25:32,838][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100036,
    "type": 1
}
[2022-09-14 15:25:33,357][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:33.190+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:33,362][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:33,362][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:33,363][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100037,
    "type": 1
}
[2022-09-14 15:25:33,363][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100037, 'type': 1}
[2022-09-14 15:25:33,363][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100037,
    "type": 1
}
[2022-09-14 15:25:33,897][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:33.710+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:33,920][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:33,921][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:33,922][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100038,
    "type": 1
}
[2022-09-14 15:25:33,922][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100038, 'type': 1}
[2022-09-14 15:25:33,923][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100038,
    "type": 1
}
[2022-09-14 15:25:34,513][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:34.323+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:34,519][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:34,519][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:34,519][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100039,
    "type": 1
}
[2022-09-14 15:25:34,519][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100039, 'type': 1}
[2022-09-14 15:25:34,520][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100039,
    "type": 1
}
[2022-09-14 15:25:35,006][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:34.796+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:35,016][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:35,016][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:35,017][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100040,
    "type": 1
}
[2022-09-14 15:25:35,017][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100040, 'type': 1}
[2022-09-14 15:25:35,017][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100040,
    "type": 1
}
[2022-09-14 15:25:35,515][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:35.330+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:35,523][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:35,524][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:35,524][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100041,
    "type": 1
}
[2022-09-14 15:25:35,525][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100041, 'type': 1}
[2022-09-14 15:25:35,525][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100041,
    "type": 1
}
[2022-09-14 15:25:36,072][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:35.905+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:36,078][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:36,078][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:36,079][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100042,
    "type": 1
}
[2022-09-14 15:25:36,079][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100042, 'type': 1}
[2022-09-14 15:25:36,080][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100042,
    "type": 1
}
[2022-09-14 15:25:36,629][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:36.459+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:36,636][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:36,636][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:36,636][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100043,
    "type": 1
}
[2022-09-14 15:25:36,637][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100043, 'type': 1}
[2022-09-14 15:25:36,637][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100043,
    "type": 1
}
[2022-09-14 15:25:37,105][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:36.938+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:37,112][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:37,112][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:37,113][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100044,
    "type": 1
}
[2022-09-14 15:25:37,113][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100044, 'type': 1}
[2022-09-14 15:25:37,113][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100044,
    "type": 1
}
[2022-09-14 15:25:37,648][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:37.476+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:37,655][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:37,655][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:37,655][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100045,
    "type": 1
}
[2022-09-14 15:25:37,656][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100045, 'type': 1}
[2022-09-14 15:25:37,656][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100045,
    "type": 1
}
[2022-09-14 15:25:38,197][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:38.029+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:38,201][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:38,201][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:38,202][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100046,
    "type": 1
}
[2022-09-14 15:25:38,202][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100046, 'type': 1}
[2022-09-14 15:25:38,202][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100046,
    "type": 1
}
[2022-09-14 15:25:38,768][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:38.599+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:38,773][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:38,774][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:38,774][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100047,
    "type": 1
}
[2022-09-14 15:25:38,774][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100047, 'type': 1}
[2022-09-14 15:25:38,775][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100047,
    "type": 1
}
[2022-09-14 15:25:39,211][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:39.044+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:39,216][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:39,216][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:39,216][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100048,
    "type": 1
}
[2022-09-14 15:25:39,216][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100048, 'type': 1}
[2022-09-14 15:25:39,217][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100048,
    "type": 1
}
[2022-09-14 15:25:39,753][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:39.580+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:39,758][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:39,759][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:39,759][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100049,
    "type": 1
}
[2022-09-14 15:25:39,759][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100049, 'type': 1}
[2022-09-14 15:25:39,759][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100049,
    "type": 1
}
[2022-09-14 15:25:40,227][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:40.057+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:40,231][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:40,232][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:40,232][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100050,
    "type": 1
}
[2022-09-14 15:25:40,232][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100050, 'type': 1}
[2022-09-14 15:25:40,233][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100050,
    "type": 1
}
[2022-09-14 15:25:40,686][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:40.517+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:40,693][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:40,694][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:40,694][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100051,
    "type": 1
}
[2022-09-14 15:25:40,695][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100051, 'type': 1}
[2022-09-14 15:25:40,695][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100051,
    "type": 1
}
[2022-09-14 15:25:41,241][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:41.070+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:41,245][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:41,246][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:41,246][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100052,
    "type": 1
}
[2022-09-14 15:25:41,247][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100052, 'type': 1}
[2022-09-14 15:25:41,247][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100052,
    "type": 1
}
[2022-09-14 15:25:41,853][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:41.668+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:41,861][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:41,862][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:41,862][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100053,
    "type": 1
}
[2022-09-14 15:25:41,863][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100053, 'type': 1}
[2022-09-14 15:25:41,863][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100053,
    "type": 1
}
[2022-09-14 15:25:42,317][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:42.146+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:42,322][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:42,322][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:42,323][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100054,
    "type": 1
}
[2022-09-14 15:25:42,323][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100054, 'type': 1}
[2022-09-14 15:25:42,323][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100054,
    "type": 1
}
[2022-09-14 15:25:42,780][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:42.609+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:42,786][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:42,786][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:42,786][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100055,
    "type": 1
}
[2022-09-14 15:25:42,787][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100055, 'type': 1}
[2022-09-14 15:25:42,787][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100055,
    "type": 1
}
[2022-09-14 15:25:43,281][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:43.109+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:43,285][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:43,286][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:43,286][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100056,
    "type": 1
}
[2022-09-14 15:25:43,286][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100056, 'type': 1}
[2022-09-14 15:25:43,286][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100056,
    "type": 1
}
[2022-09-14 15:25:43,799][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:43.633+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:43,801][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:43,802][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:43,802][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100057,
    "type": 1
}
[2022-09-14 15:25:43,802][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100057, 'type': 1}
[2022-09-14 15:25:43,802][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100057,
    "type": 1
}
[2022-09-14 15:25:44,268][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:44.099+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:44,272][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:44,273][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:44,273][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100058,
    "type": 1
}
[2022-09-14 15:25:44,273][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100058, 'type': 1}
[2022-09-14 15:25:44,274][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100058,
    "type": 1
}
[2022-09-14 15:25:44,748][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:44.578+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:44,752][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:44,753][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:44,753][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100059,
    "type": 1
}
[2022-09-14 15:25:44,753][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100059, 'type': 1}
[2022-09-14 15:25:44,753][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100059,
    "type": 1
}
[2022-09-14 15:25:45,212][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:45.043+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:45,218][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:45,218][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:45,219][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100060,
    "type": 1
}
[2022-09-14 15:25:45,219][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100060, 'type': 1}
[2022-09-14 15:25:45,220][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100060,
    "type": 1
}
[2022-09-14 15:25:45,680][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:45.511+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:45,685][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:45,685][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:45,686][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100061,
    "type": 1
}
[2022-09-14 15:25:45,686][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100061, 'type': 1}
[2022-09-14 15:25:45,686][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100061,
    "type": 1
}
[2022-09-14 15:25:46,234][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:46.064+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:46,246][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:46,246][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:46,247][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100062,
    "type": 1
}
[2022-09-14 15:25:46,248][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100062, 'type': 1}
[2022-09-14 15:25:46,249][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100062,
    "type": 1
}
[2022-09-14 15:25:46,796][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:46.621+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:46,805][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:46,806][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:46,806][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100063,
    "type": 1
}
[2022-09-14 15:25:46,806][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100063, 'type': 1}
[2022-09-14 15:25:46,807][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100063,
    "type": 1
}
[2022-09-14 15:25:47,341][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:47.171+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:47,350][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:47,350][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:47,351][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100064,
    "type": 1
}
[2022-09-14 15:25:47,352][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100064, 'type': 1}
[2022-09-14 15:25:47,353][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100064,
    "type": 1
}
[2022-09-14 15:25:47,915][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:47.742+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:47,924][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:47,925][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:47,925][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100065,
    "type": 1
}
[2022-09-14 15:25:47,926][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100065, 'type': 1}
[2022-09-14 15:25:47,926][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100065,
    "type": 1
}
[2022-09-14 15:25:48,360][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:48.185+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:48,369][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:48,370][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:48,370][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100066,
    "type": 1
}
[2022-09-14 15:25:48,370][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100066, 'type': 1}
[2022-09-14 15:25:48,371][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100066,
    "type": 1
}
[2022-09-14 15:25:48,941][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:48.774+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:48,945][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:48,945][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:48,945][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100067,
    "type": 1
}
[2022-09-14 15:25:48,945][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100067, 'type': 1}
[2022-09-14 15:25:48,946][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100067,
    "type": 1
}
[2022-09-14 15:25:49,452][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:49.278+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:49,461][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:49,462][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:49,463][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100068,
    "type": 1
}
[2022-09-14 15:25:49,463][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100068, 'type': 1}
[2022-09-14 15:25:49,464][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100068,
    "type": 1
}
[2022-09-14 15:25:49,918][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:49.746+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:49,922][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:49,922][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:49,922][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100069,
    "type": 1
}
[2022-09-14 15:25:49,922][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100069, 'type': 1}
[2022-09-14 15:25:49,922][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100069,
    "type": 1
}
[2022-09-14 15:25:50,442][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:50.271+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:50,450][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:50,451][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:50,451][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100070,
    "type": 1
}
[2022-09-14 15:25:50,451][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100070, 'type': 1}
[2022-09-14 15:25:50,451][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100070,
    "type": 1
}
[2022-09-14 15:25:51,011][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:50.831+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:51,018][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:51,019][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:51,019][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100071,
    "type": 1
}
[2022-09-14 15:25:51,019][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100071, 'type': 1}
[2022-09-14 15:25:51,019][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100071,
    "type": 1
}
[2022-09-14 15:25:51,520][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:51.350+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:51,526][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:51,527][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:51,527][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100072,
    "type": 1
}
[2022-09-14 15:25:51,527][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100072, 'type': 1}
[2022-09-14 15:25:51,528][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100072,
    "type": 1
}
[2022-09-14 15:25:52,172][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:51.998+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:52,177][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:52,177][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:52,178][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100073,
    "type": 1
}
[2022-09-14 15:25:52,178][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100073, 'type': 1}
[2022-09-14 15:25:52,178][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100073,
    "type": 1
}
[2022-09-14 15:25:52,717][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:52.540+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:52,732][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:52,733][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:52,733][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100074,
    "type": 1
}
[2022-09-14 15:25:52,733][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100074, 'type': 1}
[2022-09-14 15:25:52,734][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100074,
    "type": 1
}
[2022-09-14 15:25:53,244][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:53.064+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:53,256][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:53,258][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:53,259][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100075,
    "type": 1
}
[2022-09-14 15:25:53,260][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100075, 'type': 1}
[2022-09-14 15:25:53,261][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100075,
    "type": 1
}
[2022-09-14 15:25:53,746][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:53.570+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:53,752][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:53,752][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:53,752][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100076,
    "type": 1
}
[2022-09-14 15:25:53,753][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100076, 'type': 1}
[2022-09-14 15:25:53,753][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100076,
    "type": 1
}
[2022-09-14 15:25:54,274][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:54.101+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:54,278][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:54,278][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:54,278][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100077,
    "type": 1
}
[2022-09-14 15:25:54,279][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100077, 'type': 1}
[2022-09-14 15:25:54,279][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100077,
    "type": 1
}
[2022-09-14 15:25:54,729][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:54.557+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:54,733][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:54,733][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:54,734][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100078,
    "type": 1
}
[2022-09-14 15:25:54,734][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100078, 'type': 1}
[2022-09-14 15:25:54,734][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100078,
    "type": 1
}
[2022-09-14 15:25:55,275][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:55.102+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:55,284][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:55,284][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:55,285][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100079,
    "type": 1
}
[2022-09-14 15:25:55,285][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100079, 'type': 1}
[2022-09-14 15:25:55,285][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100079,
    "type": 1
}
[2022-09-14 15:25:55,839][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:55.669+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:55,845][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:55,846][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:55,846][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100080,
    "type": 1
}
[2022-09-14 15:25:55,846][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100080, 'type': 1}
[2022-09-14 15:25:55,846][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100080,
    "type": 1
}
[2022-09-14 15:25:56,322][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:56.144+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:56,334][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:56,334][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:56,335][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100081,
    "type": 1
}
[2022-09-14 15:25:56,335][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100081, 'type': 1}
[2022-09-14 15:25:56,336][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100081,
    "type": 1
}
[2022-09-14 15:25:56,893][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:56.722+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:56,905][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:56,906][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:56,907][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100082,
    "type": 1
}
[2022-09-14 15:25:56,908][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100082, 'type': 1}
[2022-09-14 15:25:56,908][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100082,
    "type": 1
}
[2022-09-14 15:25:57,387][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:57.216+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:57,398][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:57,398][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:57,399][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100083,
    "type": 1
}
[2022-09-14 15:25:57,400][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100083, 'type': 1}
[2022-09-14 15:25:57,400][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100083,
    "type": 1
}
[2022-09-14 15:25:57,916][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:57.751+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:57,924][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:57,925][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:57,925][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100084,
    "type": 1
}
[2022-09-14 15:25:57,926][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100084, 'type': 1}
[2022-09-14 15:25:57,926][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100084,
    "type": 1
}
[2022-09-14 15:25:58,445][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:58.276+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:58,451][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:58,452][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:58,452][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100085,
    "type": 1
}
[2022-09-14 15:25:58,452][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100085, 'type': 1}
[2022-09-14 15:25:58,453][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100085,
    "type": 1
}
[2022-09-14 15:25:58,909][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:58.735+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:58,922][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:58,923][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:58,924][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100086,
    "type": 1
}
[2022-09-14 15:25:58,925][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100086, 'type': 1}
[2022-09-14 15:25:58,926][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100086,
    "type": 1
}
[2022-09-14 15:25:59,574][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:59.409+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:25:59,578][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:25:59,578][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:25:59,579][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100087,
    "type": 1
}
[2022-09-14 15:25:59,579][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100087, 'type': 1}
[2022-09-14 15:25:59,579][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100087,
    "type": 1
}
[2022-09-14 15:26:00,105][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:25:59.910+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:00,111][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:00,112][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:00,112][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100088,
    "type": 1
}
[2022-09-14 15:26:00,112][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100088, 'type': 1}
[2022-09-14 15:26:00,112][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100088,
    "type": 1
}
[2022-09-14 15:26:00,676][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:00.500+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:00,690][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:00,691][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:00,692][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100089,
    "type": 1
}
[2022-09-14 15:26:00,692][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100089, 'type': 1}
[2022-09-14 15:26:00,693][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100089,
    "type": 1
}
[2022-09-14 15:26:01,144][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:00.970+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:01,153][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:01,154][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:01,154][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100090,
    "type": 1
}
[2022-09-14 15:26:01,155][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100090, 'type': 1}
[2022-09-14 15:26:01,156][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100090,
    "type": 1
}
[2022-09-14 15:26:01,701][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:01.521+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:01,715][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:01,717][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:01,719][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100091,
    "type": 1
}
[2022-09-14 15:26:01,719][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100091, 'type': 1}
[2022-09-14 15:26:01,720][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100091,
    "type": 1
}
[2022-09-14 15:26:02,254][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:02.074+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:02,261][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:02,261][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:02,262][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100092,
    "type": 1
}
[2022-09-14 15:26:02,262][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100092, 'type': 1}
[2022-09-14 15:26:02,262][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100092,
    "type": 1
}
[2022-09-14 15:26:03,022][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:02.849+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:03,037][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:03,038][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:03,038][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100093,
    "type": 1
}
[2022-09-14 15:26:03,039][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100093, 'type': 1}
[2022-09-14 15:26:03,039][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100093,
    "type": 1
}
[2022-09-14 15:26:03,602][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:03.434+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:03,607][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:03,607][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:03,608][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100094,
    "type": 1
}
[2022-09-14 15:26:03,608][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100094, 'type': 1}
[2022-09-14 15:26:03,609][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100094,
    "type": 1
}
[2022-09-14 15:26:04,165][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:03.994+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:04,172][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:04,173][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:04,174][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100095,
    "type": 1
}
[2022-09-14 15:26:04,174][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100095, 'type': 1}
[2022-09-14 15:26:04,175][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100095,
    "type": 1
}
[2022-09-14 15:26:04,623][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:04.456+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:04,628][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:04,629][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:04,629][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100096,
    "type": 1
}
[2022-09-14 15:26:04,629][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100096, 'type': 1}
[2022-09-14 15:26:04,629][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100096,
    "type": 1
}
[2022-09-14 15:26:05,119][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:04.939+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:05,127][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:05,128][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:05,129][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100097,
    "type": 1
}
[2022-09-14 15:26:05,129][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100097, 'type': 1}
[2022-09-14 15:26:05,130][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100097,
    "type": 1
}
[2022-09-14 15:26:05,682][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:05.501+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:05,705][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:05,706][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:05,707][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100098,
    "type": 1
}
[2022-09-14 15:26:05,708][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100098, 'type': 1}
[2022-09-14 15:26:05,708][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100098,
    "type": 1
}
[2022-09-14 15:26:06,272][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:06.097+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:26:06,284][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/getThermodynamicDiagram
[2022-09-14 15:26:06,285][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:26:06,285][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100099,
    "type": 1
}
[2022-09-14 15:26:06,286][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100099, 'type': 1}
[2022-09-14 15:26:06,286][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100099,
    "type": 1
}
[2022-09-14 15:26:06,782][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:26:06.609+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/getThermodynamicDiagram'}
[2022-09-14 15:37:10,316][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:37:10,318][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:37:10,319][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:37:10,319][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:37:10,320][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:37:10,348][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:37:10,348][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:37:10,360][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:37:10,415][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:10,415][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:10,417][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:10,417][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:10,417][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:11,034][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:10.867+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:11,039][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:11,040][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:11,040][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:11,041][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:11,041][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:11,583][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:11.417+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:11,587][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:11,588][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:11,588][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100003,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:11,588][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100003, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:11,588][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100003,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:12,068][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:11.893+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:12,078][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:12,079][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:12,080][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100004,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:12,080][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100004, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:12,080][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100004,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:12,661][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:12.499+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:12,665][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:12,666][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:12,666][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100005,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:12,666][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100005, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:12,666][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100005,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:13,185][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:13.017+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:13,189][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:13,189][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:13,189][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100006,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:13,190][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100006, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:13,190][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100006,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:13,757][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:13.584+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:13,771][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:13,772][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:13,772][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100007,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:13,773][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100007, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:13,773][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100007,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:14,267][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:14.087+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:14,282][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:14,283][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:14,283][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100008,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:14,284][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100008, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:14,284][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100008,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:14,810][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:14.630+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:14,830][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:14,831][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:14,831][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100009,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:14,832][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100009, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:14,832][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100009,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:15,444][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:15.248+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:15,455][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:15,456][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:15,457][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100010,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:15,458][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100010, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:15,458][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100010,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:16,063][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:15.889+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:16,072][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:16,073][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:16,073][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100011,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:16,074][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100011, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:16,074][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100011,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:16,605][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:16.435+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:16,611][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:16,611][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:16,611][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100012,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:16,612][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100012, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:16,612][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100012,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:17,091][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:16.926+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:17,096][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:17,096][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:17,096][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100013,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:17,096][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100013, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:17,096][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100013,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:17,525][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:17.361+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:17,532][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:17,532][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:17,532][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100014,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:17,532][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100014, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:17,533][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100014,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:17,995][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:17.828+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:18,001][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:18,001][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:18,002][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100015,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:18,002][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100015, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:18,003][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100015,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:18,461][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:18.299+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:18,467][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:18,467][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:18,468][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100016,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:18,468][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100016, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:18,468][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100016,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:18,935][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:18.764+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:18,942][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:18,943][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:18,943][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100017,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:18,943][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100017, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:18,943][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100017,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:19,525][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:19.358+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:19,530][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:19,530][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:19,530][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100018,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:19,531][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100018, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:19,531][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100018,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:20,141][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:19.976+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:20,145][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:20,145][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:20,145][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100019,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:20,146][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100019, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:20,146][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100019,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:20,612][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:20.444+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:20,618][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:20,618][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:20,619][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100020,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:20,619][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100020, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:20,619][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100020,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:21,245][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:21.080+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:21,249][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:21,249][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:21,250][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100021,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:21,250][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100021, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:21,250][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100021,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:21,780][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:21.605+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:21,790][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:21,791][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:21,791][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100022,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:21,791][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100022, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:21,792][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100022,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:22,268][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:22.098+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:22,272][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:22,273][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:22,273][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100023,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:22,273][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100023, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:22,274][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100023,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:22,837][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:22.657+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:22,848][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:22,849][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:22,850][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100024,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:22,850][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100024, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:22,851][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100024,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:23,326][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:23.158+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:23,348][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:23,350][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:23,351][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100025,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:23,353][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100025, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:23,354][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100025,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:23,858][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:23.691+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:23,876][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:23,877][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:23,878][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100026,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:23,880][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100026, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:23,881][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100026,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:24,383][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:24.206+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:24,400][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:24,404][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:24,407][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100027,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:24,407][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100027, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:24,408][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100027,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:24,936][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:24.767+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:24,945][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:24,946][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:24,946][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100028,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:24,947][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100028, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:24,947][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100028,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:25,430][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:25.255+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:25,440][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:25,441][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:25,441][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100029,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:25,442][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100029, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:25,442][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100029,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:25,918][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:25.749+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:25,922][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:25,923][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:25,923][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100030,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:25,923][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100030, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:25,923][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100030,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:26,388][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:26.219+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:26,398][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:26,398][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:26,398][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100031,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:26,398][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100031, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:26,399][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100031,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:26,843][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:26.666+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:26,850][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:26,851][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:26,851][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100032,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:26,852][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100032, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:26,852][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100032,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:27,342][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:27.162+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:27,355][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:27,356][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:27,357][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100033,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:27,357][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100033, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:27,358][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100033,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:27,821][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:27.654+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:27,825][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:27,825][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:27,825][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100034,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:27,825][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100034, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:27,825][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100034,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:28,309][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:28.131+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:28,323][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:28,323][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:28,324][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100035,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:28,324][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100035, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:28,324][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100035,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:28,840][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:28.674+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:28,850][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:28,850][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:28,851][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100036,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:28,852][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100036, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:28,853][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100036,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:29,340][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:29.173+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:29,354][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:29,354][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:29,355][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100037,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:29,355][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100037, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:29,355][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100037,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:29,903][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:29.738+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:29,906][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:29,907][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:29,907][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100038,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:29,907][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100038, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:29,908][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100038,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:30,451][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:30.286+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:30,457][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:30,457][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:30,457][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100039,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:30,458][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100039, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:30,458][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100039,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:30,995][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:30.825+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:31,000][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:31,000][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:31,001][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100040,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:31,001][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100040, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:31,001][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100040,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:31,676][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:31.509+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:31,684][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:31,684][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:31,685][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100041,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:31,685][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100041, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:31,686][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100041,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:32,214][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:32.046+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:32,223][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:32,224][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:32,224][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100042,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:32,225][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100042, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:32,226][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100042,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:32,781][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:32.611+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:32,785][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:32,785][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:32,785][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100043,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:32,786][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100043, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:32,786][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100043,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:33,268][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:33.098+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:33,272][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:33,272][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:33,273][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100044,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:33,273][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100044, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:33,273][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100044,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:33,762][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:33.591+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:33,768][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:33,768][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:33,768][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100045,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:33,769][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100045, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:33,769][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100045,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:34,310][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:34.144+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:34,315][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:34,315][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:34,315][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100046,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:34,316][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100046, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:34,316][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100046,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:34,793][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:34.617+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:34,797][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:34,798][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:34,798][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100047,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:34,798][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100047, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:34,798][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100047,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:35,357][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:35.184+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:35,360][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:35,361][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:35,361][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100048,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:35,361][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100048, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:35,361][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100048,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:35,818][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:35.656+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:35,824][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:35,824][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:35,825][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100049,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:35,825][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100049, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:35,825][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100049,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:36,275][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:36.105+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:36,280][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:36,280][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:36,280][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100050,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:36,280][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100050, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:36,281][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100050,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:36,824][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:36.654+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:36,832][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:36,833][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:36,833][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100051,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:36,833][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100051, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:36,834][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100051,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:37,370][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:37.204+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:37,375][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:37,375][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:37,376][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100052,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:37,376][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100052, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:37,376][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100052,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:37,907][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:37.743+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:37,912][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:37,912][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:37,912][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100053,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:37,912][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100053, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:37,913][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100053,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:38,394][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:38.228+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:38,399][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:38,399][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:38,399][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100054,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:38,399][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100054, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:38,399][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100054,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:38,872][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:38.707+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:38,878][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:38,879][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:38,879][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100055,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:38,879][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100055, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:38,879][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100055,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:39,436][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:39.268+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:39,447][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:39,447][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:39,448][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100056,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:39,448][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100056, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:39,449][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100056,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:39,990][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:39.825+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:40,000][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:40,001][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:40,002][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100057,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:40,002][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100057, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:40,003][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100057,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:40,499][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:40.325+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:40,505][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:40,506][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:40,506][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100058,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:40,507][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100058, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:40,507][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100058,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:41,094][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:40.930+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:41,099][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:41,100][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:41,100][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100059,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:41,100][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100059, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:41,101][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100059,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:41,611][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:41.446+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:41,621][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:41,622][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:41,622][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100060,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:41,622][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100060, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:41,623][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100060,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:42,388][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:42.214+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:42,404][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:42,405][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:42,405][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100061,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:42,406][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100061, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:42,406][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100061,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:42,911][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:42.745+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:42,917][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:42,917][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:42,918][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100062,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:42,918][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100062, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:42,918][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100062,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:43,389][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:43.220+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:43,394][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:43,394][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:43,394][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100063,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:43,394][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100063, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:43,394][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100063,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:43,855][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:43.689+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:43,864][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:43,864][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:43,865][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100064,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:43,865][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100064, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:43,865][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100064,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:44,358][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:44.181+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:44,362][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:44,363][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:44,363][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100065,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:44,364][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100065, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:44,364][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100065,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:44,898][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:44.731+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:44,904][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:44,905][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:44,905][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100066,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:44,905][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100066, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:44,906][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100066,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:45,345][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:45.182+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:45,349][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:45,350][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:45,350][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100067,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:45,350][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100067, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:45,350][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100067,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:45,879][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:45.717+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:45,883][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:45,883][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:45,884][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100068,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:45,884][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100068, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:45,884][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100068,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:46,433][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:46.267+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:46,438][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:46,438][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:46,439][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100069,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:46,439][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100069, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:46,439][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100069,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:46,873][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:46.713+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:46,878][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:46,879][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:46,879][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100070,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:46,879][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100070, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:46,879][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100070,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:47,396][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:47.235+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:47,404][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:47,404][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:47,405][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100071,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:47,405][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100071, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:47,405][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100071,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:47,870][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:47.702+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:47,876][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:47,876][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:47,876][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100072,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:47,877][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100072, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:47,877][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100072,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:48,400][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:48.232+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:48,410][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:48,411][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:48,411][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100073,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:48,411][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100073, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:48,412][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100073,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:48,948][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:48.776+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:48,964][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:48,965][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:48,965][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100074,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:48,966][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100074, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:48,966][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100074,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:49,495][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:49.328+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:49,503][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:49,504][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:49,504][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100075,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:49,505][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100075, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:49,505][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100075,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:49,983][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:49.810+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:49,989][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:49,989][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:49,990][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100076,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:49,990][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100076, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:49,990][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100076,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:50,479][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:50.308+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:50,484][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:50,485][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:50,485][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100077,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:50,486][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100077, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:50,486][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100077,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:50,925][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:50.760+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:50,930][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:50,931][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:50,932][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100078,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:50,932][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100078, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:50,932][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100078,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:51,366][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:51.204+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:51,375][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:51,376][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:51,376][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100079,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:51,376][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100079, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:51,376][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100079,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:51,926][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:51.761+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:51,931][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:51,932][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:51,932][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100080,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:51,932][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100080, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:51,932][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100080,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:52,630][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:52.458+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:52,633][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:52,634][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:52,634][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100081,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:52,634][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100081, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:52,634][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100081,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:53,095][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:52.914+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:53,101][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:53,102][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:53,102][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100082,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:53,103][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100082, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:53,103][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100082,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:53,683][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:53.509+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:53,691][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:53,691][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:53,691][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100083,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:53,692][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100083, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:53,693][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100083,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:54,216][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:54.049+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:54,220][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:54,221][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:54,221][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100084,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:54,222][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100084, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:54,222][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100084,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:54,679][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:54.517+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:54,683][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:54,684][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:54,684][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100085,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:54,684][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100085, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:54,684][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100085,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:55,234][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:55.069+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:55,240][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:55,240][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:55,240][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100086,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:55,241][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100086, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:55,241][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100086,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:55,716][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:55.545+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:55,723][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:55,723][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:55,724][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100087,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:55,724][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100087, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:55,724][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100087,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:56,195][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:56.014+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:56,201][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:56,201][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:56,201][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100088,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:56,202][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100088, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:56,202][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100088,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:56,653][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:56.488+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:56,658][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:56,658][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:56,659][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100089,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:56,659][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100089, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:56,659][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100089,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:57,083][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:56.922+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:57,092][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:57,092][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:57,093][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100090,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:57,093][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100090, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:57,094][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100090,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:57,684][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:57.508+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:57,688][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:57,689][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:57,689][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100091,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:57,689][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100091, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:57,689][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100091,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:58,229][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:58.065+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:58,235][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:58,236][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:58,236][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100092,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:58,236][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100092, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:58,236][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100092,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:58,863][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:58.700+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:58,868][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:58,868][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:58,869][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100093,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:58,869][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100093, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:58,870][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100093,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:59,471][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:59.263+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:37:59,484][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:37:59,486][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:37:59,486][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100094,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:37:59,487][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100094, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:37:59,487][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100094,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:00,068][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:37:59.897+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:38:00,073][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:38:00,074][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:38:00,074][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100095,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:00,074][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100095, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:38:00,074][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100095,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:00,631][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:38:00.449+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:38:00,646][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:38:00,647][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:38:00,647][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100096,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:00,648][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100096, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:38:00,648][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100096,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:01,115][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:38:00.947+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:38:01,120][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:38:01,120][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:38:01,120][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100097,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:01,120][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100097, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:38:01,121][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100097,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:01,678][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:38:01.500+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:38:01,689][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:38:01,689][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:38:01,690][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100098,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:01,690][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100098, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:38:01,690][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100098,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:02,249][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:38:02.068+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:38:02,255][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 15:38:02,255][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 15:38:02,255][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100099,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:02,256][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100099, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 15:38:02,256][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100099,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 15:38:02,912][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T07:38:02.741+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 15:40:36,129][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:40:36,130][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:40:36,131][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:40:36,131][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:40:36,132][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:40:36,170][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:40:36,170][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:40:36,183][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:40:36,227][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails
[2022-09-14 15:40:36,228][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 15:41:09,996][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:41:09,997][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:41:09,998][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:41:09,998][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:41:09,998][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:41:10,018][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:41:10,018][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:41:10,032][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:41:10,091][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails
[2022-09-14 15:41:10,091][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 15:41:45,991][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:41:45,992][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:41:45,993][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:41:45,993][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:41:45,994][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:41:46,009][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:41:46,010][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:41:46,022][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:41:46,064][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails
[2022-09-14 15:41:46,065][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 15:42:19,334][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:42:19,334][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:42:19,335][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:42:19,336][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:42:19,336][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:42:19,350][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:42:19,350][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:42:19,368][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:42:19,418][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails
[2022-09-14 15:42:19,419][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 15:42:19,419][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {}
}
[2022-09-14 15:42:19,911][base_api.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': {'collectName': None, 'collectionName': None, 'image': None, 'type': None, 'marketplace': None, 'oneDayChange': None, 'floorPrice': None, 'totalNft': None, 'marketCap': None, 'oneDayVolume': None, 'numOwners': None, 'ownerThen': None, 'floorPriceList': None, 'otherList': None, 'isCollect': None, 'collectionNum': None, 'dayChange': None, 'collectDescribe': None, 'blueChip': None}}
[2022-09-14 15:42:41,408][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:42:41,409][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:42:41,410][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 15:42:41,411][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 15:42:41,412][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:42:41,442][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:42:41,442][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 15:42:41,454][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 15:42:41,505][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails
[2022-09-14 15:42:41,506][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 15:42:42,028][base_api.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': {'collectName': None, 'collectionName': None, 'image': None, 'type': None, 'marketplace': None, 'oneDayChange': None, 'floorPrice': None, 'totalNft': None, 'marketCap': None, 'oneDayVolume': None, 'numOwners': None, 'ownerThen': None, 'floorPriceList': None, 'otherList': None, 'isCollect': None, 'collectionNum': None, 'dayChange': None, 'collectDescribe': None, 'blueChip': None}}
[2022-09-14 16:06:34,218][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:06:34,219][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:06:34,220][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:06:34,220][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:06:34,220][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:06:34,231][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:06:34,231][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:06:34,240][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:06:34,287][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/likeCollectionName
[2022-09-14 16:06:34,287][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:06:34,288][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectName": "deadheads-skull-troopers"
}
[2022-09-14 16:06:34,288][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectName': 'deadheads-skull-troopers'}
[2022-09-14 16:06:34,288][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectName": "deadheads-skull-troopers"
}
[2022-09-14 16:06:35,375][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:06:35.210+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/likeCollectionName'}
[2022-09-14 16:14:11,469][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:14:11,470][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:14:36,665][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:14:36,666][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:14:36,674][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/globalSearch
[2022-09-14 16:14:36,675][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:14:36,675][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "content": "a",
    "pageNum": "1",
    "pageSize": "10",
    "type": "COLLECTION"
}
[2022-09-14 16:14:36,676][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'content': 'a', 'pageNum': '1', 'pageSize': '10', 'type': 'COLLECTION'}
[2022-09-14 16:14:36,676][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "content": "a",
    "pageNum": "1",
    "pageSize": "10",
    "type": "COLLECTION"
}
[2022-09-14 16:26:28,654][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:26:28,655][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:26:28,656][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:26:28,657][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:26:28,657][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:26:28,669][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:26:28,669][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:26:28,678][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:26:28,721][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails
[2022-09-14 16:26:28,721][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:26:29,204][base_api.py 25][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': {'collectName': None, 'collectionName': None, 'image': None, 'type': None, 'marketplace': None, 'oneDayChange': None, 'floorPrice': None, 'totalNft': None, 'marketCap': None, 'oneDayVolume': None, 'numOwners': None, 'ownerThen': None, 'floorPriceList': None, 'otherList': None, 'isCollect': None, 'collectionNum': None, 'dayChange': None, 'collectDescribe': None, 'blueChip': None}}
[2022-09-14 16:28:33,244][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:28:33,245][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:28:33,246][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:28:33,247][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:28:33,247][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:28:33,274][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:28:33,275][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:28:33,285][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:28:33,328][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:28:33,328][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:28:33,911][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:28:33.753+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:28:42,311][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:28:42,312][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:28:42,312][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:28:42,313][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:28:42,313][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:28:42,334][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:28:42,334][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:28:42,346][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:28:42,389][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:28:42,390][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:28:43,025][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:28:42.865+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:29:00,987][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:29:00,988][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:29:00,988][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:29:00,989][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:29:00,989][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:29:01,014][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:29:01,014][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:29:01,023][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:29:01,074][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:01,075][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:01,075][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:01,075][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:01,075][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:01,743][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:01.594+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:01,748][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:01,748][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:01,748][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:01,748][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:01,749][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:02,198][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:02.049+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:02,203][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:02,204][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:02,204][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100003,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:02,204][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100003, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:02,205][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100003,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:02,643][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:02.497+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:02,649][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:02,650][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:02,650][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100004,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:02,650][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100004, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:02,650][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100004,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:03,091][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:02.945+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:03,094][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:03,094][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:03,095][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100005,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:03,095][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100005, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:03,095][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100005,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:03,669][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:03.504+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:03,672][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:03,672][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:03,673][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100006,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:03,673][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100006, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:03,673][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100006,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:04,178][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:04.006+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:04,184][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:04,185][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:04,185][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100007,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:04,185][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100007, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:04,186][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100007,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:04,659][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:04.509+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:04,665][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:04,665][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:04,666][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100008,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:04,666][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100008, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:04,666][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100008,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:05,109][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:04.959+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:05,115][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:05,116][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:05,116][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100009,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:05,116][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100009, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:05,116][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100009,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:05,668][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:05.504+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:05,674][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:05,675][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:05,675][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100010,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:05,676][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100010, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:05,677][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100010,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:06,155][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:05.994+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:06,160][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:06,161][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:06,161][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100011,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:06,161][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100011, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:06,161][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100011,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:06,831][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:06.686+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:06,836][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:06,836][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:06,837][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100012,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:06,837][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100012, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:06,837][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100012,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:07,300][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:07.147+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:07,305][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:07,305][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:07,306][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100013,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:07,306][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100013, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:07,306][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100013,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:07,896][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:07.748+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:07,901][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:07,901][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:07,901][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100014,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:07,902][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100014, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:07,902][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100014,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:08,377][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:08.213+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:08,391][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:08,392][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:08,392][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100015,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:08,393][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100015, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:08,393][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100015,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:08,913][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:08.749+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:08,926][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:08,926][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:08,927][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100016,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:08,927][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100016, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:08,928][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100016,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:09,518][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:09.348+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:09,532][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:09,533][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:09,533][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100017,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:09,534][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100017, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:09,534][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100017,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:10,039][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:09.887+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:10,047][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:10,048][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:10,048][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100018,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:10,048][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100018, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:10,049][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100018,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:10,555][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:10.398+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:10,562][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:10,563][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:10,563][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100019,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:10,563][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100019, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:10,563][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100019,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:11,131][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:10.980+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:11,141][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:11,142][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:11,143][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100020,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:11,143][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100020, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:11,144][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100020,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:11,717][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:11.555+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:11,729][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:11,730][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:11,731][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100021,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:11,731][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100021, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:11,731][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100021,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:12,234][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:12.075+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:12,246][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:12,247][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:12,247][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100022,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:12,248][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100022, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:12,248][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100022,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:12,845][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:12.681+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:12,857][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:12,858][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:12,859][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100023,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:12,860][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100023, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:12,860][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100023,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:13,328][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:13.176+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:13,340][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:13,341][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:13,342][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100024,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:13,342][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100024, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:13,342][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100024,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:13,823][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:13.672+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:13,832][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:13,832][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:13,833][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100025,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:13,834][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100025, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:13,834][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100025,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:14,301][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:14.148+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:14,312][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:14,313][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:14,313][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100026,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:14,314][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100026, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:14,314][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100026,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:14,778][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:14.630+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:14,787][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:14,788][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:14,788][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100027,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:14,789][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100027, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:14,789][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100027,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:15,330][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:15.179+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:15,340][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:15,342][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:15,342][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100028,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:15,343][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100028, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:15,343][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100028,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:15,906][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:15.751+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:15,919][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:15,919][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:15,920][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100029,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:15,920][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100029, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:15,920][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100029,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:16,413][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:16.255+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:16,426][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:16,426][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:16,427][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100030,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:16,427][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100030, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:16,428][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100030,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:17,102][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:16.951+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:17,113][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:17,114][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:17,115][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100031,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:17,116][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100031, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:17,116][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100031,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:17,581][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:17.434+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:17,593][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:17,593][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:17,594][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100032,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:17,594][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100032, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:17,595][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100032,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:18,073][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:17.913+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:18,079][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:18,080][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:18,080][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100033,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:18,080][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100033, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:18,080][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100033,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:18,553][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:18.394+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:18,564][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:18,565][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:18,565][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100034,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:18,566][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100034, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:18,566][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100034,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:19,048][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:18.889+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:19,058][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:19,059][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:19,059][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100035,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:19,060][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100035, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:19,060][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100035,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:19,563][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:19.410+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:19,574][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:19,575][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:19,575][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100036,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:19,576][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100036, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:19,577][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100036,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:20,134][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:19.980+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:20,141][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:20,142][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:20,142][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100037,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:20,142][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100037, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:20,143][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100037,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:20,633][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:20.485+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:20,644][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:20,645][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:20,646][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100038,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:20,646][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100038, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:20,646][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100038,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:21,101][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:20.952+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:21,113][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:21,114][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:21,114][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100039,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:21,115][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100039, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:21,115][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100039,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:21,696][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:21.543+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:21,707][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:21,708][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:21,709][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100040,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:21,709][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100040, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:21,710][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100040,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:22,431][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:22.279+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:22,442][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:22,442][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:22,443][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100041,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:22,443][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100041, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:22,444][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100041,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:22,991][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:22.840+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:23,001][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:23,002][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:23,003][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100042,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:23,004][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100042, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:23,004][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100042,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:23,549][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:23.400+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:23,561][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:23,562][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:23,562][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100043,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:23,562][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100043, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:23,563][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100043,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:23,994][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:23.843+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:24,004][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:24,005][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:24,007][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100044,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:24,007][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100044, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:24,008][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100044,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:24,541][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:24.374+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:24,552][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:24,553][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:24,553][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100045,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:24,553][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100045, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:24,554][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100045,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:25,089][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:24.940+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:25,105][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:25,106][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:25,107][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100046,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:25,107][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100046, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:25,107][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100046,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:25,591][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:25.438+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:25,601][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:25,602][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:25,602][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100047,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:25,602][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100047, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:25,603][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100047,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:26,076][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:25.914+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:26,086][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:26,087][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:26,088][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100048,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:26,088][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100048, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:26,089][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100048,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:26,629][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:26.458+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:26,641][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:26,642][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:26,643][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100049,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:26,643][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100049, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:26,644][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100049,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:27,217][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:27.063+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:27,228][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:27,229][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:27,229][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100050,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:27,230][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100050, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:27,230][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100050,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:27,710][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:27.550+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:27,721][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:27,722][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:27,722][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100051,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:27,723][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100051, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:27,723][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100051,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:28,313][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:28.148+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:28,324][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:28,325][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:28,326][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100052,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:28,326][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100052, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:28,326][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100052,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:28,824][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:28.655+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:28,834][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:28,835][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:28,835][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100053,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:28,836][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100053, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:28,836][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100053,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:29,296][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:29.145+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:29,307][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:29,307][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:29,308][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100054,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:29,308][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100054, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:29,308][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100054,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:29,791][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:29.636+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:29,802][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:29,803][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:29,803][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100055,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:29,804][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100055, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:29,804][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100055,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:30,277][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:30.125+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:30,289][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:30,289][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:30,289][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100056,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:30,290][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100056, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:30,290][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100056,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:30,878][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:30.718+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:30,887][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:30,888][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:30,889][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100057,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:30,889][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100057, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:30,890][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100057,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:31,489][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:31.321+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:31,493][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:31,493][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:31,493][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100058,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:31,493][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100058, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:31,494][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100058,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:31,982][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:31.828+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:31,992][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:31,993][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:31,993][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100059,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:31,993][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100059, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:31,994][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100059,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:32,604][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:32.453+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:32,615][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:32,616][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:32,616][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100060,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:32,617][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100060, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:32,617][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100060,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:33,101][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:32.948+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:33,113][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:33,114][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:33,115][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100061,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:33,115][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100061, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:33,115][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100061,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:33,612][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:33.454+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:33,620][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:33,621][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:33,622][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100062,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:33,622][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100062, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:33,623][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100062,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:34,134][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:33.973+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:34,147][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:34,147][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:34,148][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100063,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:34,148][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100063, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:34,148][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100063,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:34,621][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:34.467+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:34,633][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:34,633][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:34,634][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100064,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:34,634][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100064, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:34,635][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100064,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:35,169][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:35.016+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:35,180][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:35,180][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:35,181][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100065,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:35,182][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100065, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:35,183][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100065,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:35,667][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:35.515+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:35,678][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:35,679][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:35,679][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100066,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:35,679][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100066, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:35,680][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100066,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:36,148][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:35.993+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:36,158][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:36,159][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:36,159][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100067,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:36,160][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100067, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:36,160][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100067,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:36,617][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:36.470+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:36,626][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:36,627][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:36,628][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100068,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:36,628][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100068, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:36,628][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100068,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:37,089][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:36.936+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:37,100][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:37,101][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:37,101][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100069,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:37,101][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100069, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:37,101][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100069,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:37,568][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:37.418+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:37,576][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:37,576][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:37,577][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100070,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:37,577][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100070, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:37,577][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100070,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:38,165][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:38.005+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:38,175][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:38,176][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:38,177][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100071,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:38,177][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100071, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:38,178][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100071,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:38,750][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:38.588+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:38,762][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:38,762][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:38,762][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100072,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:38,763][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100072, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:38,763][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100072,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:39,243][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:39.083+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:39,252][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:39,253][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:39,254][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100073,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:39,255][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100073, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:39,256][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100073,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:39,768][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:39.603+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:39,782][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:39,782][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:39,783][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100074,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:39,784][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100074, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:39,784][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100074,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:40,344][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:40.190+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:40,353][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:40,354][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:40,355][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100075,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:40,355][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100075, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:40,356][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100075,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:40,807][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:40.654+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:40,817][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:40,818][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:40,818][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100076,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:40,818][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100076, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:40,819][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100076,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:41,346][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:41.172+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:41,356][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:41,356][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:41,356][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100077,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:41,357][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100077, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:41,357][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100077,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:41,838][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:41.687+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:41,845][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:41,846][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:41,846][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100078,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:41,847][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100078, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:41,847][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100078,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:42,406][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:42.251+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:42,416][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:42,417][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:42,417][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100079,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:42,418][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100079, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:42,419][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100079,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:43,104][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:42.953+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:43,115][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:43,116][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:43,116][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100080,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:43,117][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100080, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:43,117][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100080,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:43,579][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:43.427+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:43,591][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:43,591][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:43,592][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100081,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:43,592][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100081, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:43,592][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100081,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:44,061][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:43.907+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:44,070][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:44,071][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:44,071][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100082,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:44,071][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100082, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:44,072][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100082,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:44,639][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:44.484+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:44,650][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:44,651][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:44,651][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100083,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:44,652][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100083, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:44,652][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100083,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:45,113][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:44.958+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:45,125][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:45,126][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:45,127][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100084,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:45,128][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100084, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:45,129][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100084,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:45,628][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:45.464+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:45,640][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:45,641][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:45,642][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100085,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:45,642][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100085, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:45,643][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100085,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:46,137][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:45.975+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:46,150][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:46,151][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:46,151][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100086,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:46,152][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100086, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:46,152][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100086,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:46,647][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:46.498+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:46,657][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:46,658][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:46,658][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100087,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:46,659][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100087, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:46,660][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100087,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:47,141][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:46.990+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:47,151][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:47,152][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:47,153][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100088,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:47,153][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100088, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:47,153][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100088,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:47,702][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:47.551+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:47,712][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:47,712][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:47,713][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100089,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:47,713][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100089, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:47,714][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100089,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:48,290][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:48.135+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:48,300][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:48,302][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:48,303][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100090,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:48,304][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100090, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:48,304][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100090,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:48,801][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:48.646+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:48,812][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:48,813][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:48,814][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100091,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:48,814][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100091, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:48,815][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100091,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:49,399][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:49.240+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:49,412][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:49,413][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:49,413][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100092,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:49,414][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100092, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:49,415][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100092,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:49,972][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:49.819+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:49,984][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:49,985][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:49,985][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100093,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:49,986][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100093, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:49,986][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100093,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:50,485][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:50.325+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:50,496][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:50,497][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:50,498][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100094,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:50,499][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100094, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:50,499][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100094,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:51,009][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:50.857+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:51,021][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:51,022][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:51,022][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100095,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:51,023][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100095, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:51,023][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100095,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:51,596][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:51.445+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:51,608][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:51,609][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:51,610][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100096,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:51,610][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100096, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:51,611][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100096,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:52,193][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:52.031+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:52,198][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:52,198][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:52,198][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100097,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:52,198][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100097, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:52,198][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100097,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:52,647][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:52.494+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:52,659][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:52,660][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:52,660][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100098,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:52,661][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100098, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:52,661][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100098,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:53,210][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:53.055+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:29:53,221][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/nftPendingList
[2022-09-14 16:29:53,222][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:29:53,222][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100099,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:53,222][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100099, 'pageNum': 1, 'pageSize': 10}
[2022-09-14 16:29:53,223][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100099,
    "pageNum": 1,
    "pageSize": 10
}
[2022-09-14 16:29:53,938][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:29:53.784+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/nftPendingList'}
[2022-09-14 16:30:53,697][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:30:53,698][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:30:53,699][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:30:53,699][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:30:53,699][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:30:53,728][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:30:53,728][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:30:53,737][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:30:53,779][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:30:53,779][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:30:53,779][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100001
    }
}
[2022-09-14 16:30:54,458][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:30:54.303+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:14,108][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:31:14,109][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:31:14,110][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:31:14,111][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:31:14,111][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:31:14,133][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:31:14,134][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:31:14,143][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:31:14,195][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:14,196][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:14,196][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100001
    }
}
[2022-09-14 16:31:14,876][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:14.714+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:14,889][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:14,889][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:14,890][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100002
    }
}
[2022-09-14 16:31:15,415][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:15.270+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:15,421][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:15,421][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:15,422][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100003
    }
}
[2022-09-14 16:31:15,952][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:15.804+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:15,957][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:15,957][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:15,957][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100004
    }
}
[2022-09-14 16:31:16,498][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:16.340+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:16,507][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:16,507][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:16,508][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100005
    }
}
[2022-09-14 16:31:16,944][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:16.798+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:16,949][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:16,950][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:16,950][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100006
    }
}
[2022-09-14 16:31:17,389][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:17.239+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:17,396][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:17,397][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:17,397][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100007
    }
}
[2022-09-14 16:31:17,855][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:17.709+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:17,860][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:17,860][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:17,861][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100008
    }
}
[2022-09-14 16:31:18,339][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:18.180+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:18,345][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:18,345][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:18,346][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100009
    }
}
[2022-09-14 16:31:18,881][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:18.726+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:18,887][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:18,887][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:18,888][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100010
    }
}
[2022-09-14 16:31:19,347][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:19.203+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:19,351][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:19,352][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:19,352][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100011
    }
}
[2022-09-14 16:31:19,888][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:19.732+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:19,907][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:19,908][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:19,908][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100012
    }
}
[2022-09-14 16:31:20,414][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:20.269+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:20,419][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:20,420][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:20,420][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100013
    }
}
[2022-09-14 16:31:20,908][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:20.739+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:20,919][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:20,920][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:20,920][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100014
    }
}
[2022-09-14 16:31:21,400][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:21.246+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:21,411][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:21,412][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:21,412][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100015
    }
}
[2022-09-14 16:31:21,890][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:21.741+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:21,897][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:21,897][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:21,898][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100016
    }
}
[2022-09-14 16:31:22,409][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:22.261+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:22,416][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:22,416][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:22,417][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100017
    }
}
[2022-09-14 16:31:22,951][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:22.805+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:22,957][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:22,958][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:22,958][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100018
    }
}
[2022-09-14 16:31:23,475][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:23.322+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:23,488][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:23,488][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:23,489][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100019
    }
}
[2022-09-14 16:31:23,957][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:23.811+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:23,960][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:23,961][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:23,961][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100020
    }
}
[2022-09-14 16:31:24,486][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:24.334+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:24,500][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:24,501][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:24,501][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100021
    }
}
[2022-09-14 16:31:25,162][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:25.007+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:25,175][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:25,175][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:25,176][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100022
    }
}
[2022-09-14 16:31:25,632][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:25.485+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:25,642][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:25,642][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:25,643][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100023
    }
}
[2022-09-14 16:31:26,108][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:25.958+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:26,116][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:26,117][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:26,117][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100024
    }
}
[2022-09-14 16:31:26,590][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:26.438+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:26,599][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:26,599][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:26,600][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100025
    }
}
[2022-09-14 16:31:27,156][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:27.002+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:27,165][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:27,166][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:27,167][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100026
    }
}
[2022-09-14 16:31:27,638][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:27.488+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:27,647][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:27,648][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:27,649][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100027
    }
}
[2022-09-14 16:31:28,203][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:28.048+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:28,213][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:28,214][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:28,215][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100028
    }
}
[2022-09-14 16:31:28,738][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:28.592+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:28,743][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:28,744][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:28,744][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100029
    }
}
[2022-09-14 16:31:29,191][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:29.040+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:29,207][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:29,208][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:29,209][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100030
    }
}
[2022-09-14 16:31:29,736][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:29.581+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:29,749][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:29,749][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:29,750][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100031
    }
}
[2022-09-14 16:31:30,198][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:30.048+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:30,212][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:30,213][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:30,213][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100032
    }
}
[2022-09-14 16:31:30,656][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:30.511+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:30,667][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:30,668][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:30,668][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100033
    }
}
[2022-09-14 16:31:31,232][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:31.085+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:31,239][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:31,240][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:31,240][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100034
    }
}
[2022-09-14 16:31:31,696][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:31.545+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:31,705][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:31,706][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:31,706][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100035
    }
}
[2022-09-14 16:31:32,178][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:32.014+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:32,183][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:32,183][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:32,184][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100036
    }
}
[2022-09-14 16:31:32,721][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:32.575+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:32,725][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:32,726][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:32,726][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100037
    }
}
[2022-09-14 16:31:33,184][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:33.030+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:33,191][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:33,192][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:33,192][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100038
    }
}
[2022-09-14 16:31:33,699][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:33.553+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:33,711][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:33,711][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:33,712][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100039
    }
}
[2022-09-14 16:31:34,295][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:34.136+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:34,306][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:34,307][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:34,308][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100040
    }
}
[2022-09-14 16:31:34,787][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:34.634+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:34,797][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:34,798][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:34,798][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100041
    }
}
[2022-09-14 16:31:35,459][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:35.311+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:35,464][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:35,465][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:35,465][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100042
    }
}
[2022-09-14 16:31:35,953][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:35.799+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:35,963][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:35,964][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:35,965][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100043
    }
}
[2022-09-14 16:31:36,438][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:36.293+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:36,442][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:36,442][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:36,443][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100044
    }
}
[2022-09-14 16:31:36,911][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:36.757+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:36,915][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:36,916][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:36,916][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100045
    }
}
[2022-09-14 16:31:37,450][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:37.300+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:37,457][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:37,457][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:37,458][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100046
    }
}
[2022-09-14 16:31:37,982][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:37.832+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:37,990][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:37,991][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:37,992][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100047
    }
}
[2022-09-14 16:31:38,485][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:38.319+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:38,495][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:38,496][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:38,496][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100048
    }
}
[2022-09-14 16:31:39,113][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:38.958+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:39,118][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:39,118][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:39,118][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100049
    }
}
[2022-09-14 16:31:39,685][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:39.540+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:39,692][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:39,692][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:39,693][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100050
    }
}
[2022-09-14 16:31:40,220][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:40.074+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:40,225][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:40,225][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:40,225][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100051
    }
}
[2022-09-14 16:31:40,697][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:40.549+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:40,705][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:40,706][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:40,706][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100052
    }
}
[2022-09-14 16:31:41,194][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:41.038+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:41,204][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:41,204][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:41,205][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100053
    }
}
[2022-09-14 16:31:41,686][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:41.520+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:41,697][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:41,698][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:41,699][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100054
    }
}
[2022-09-14 16:31:42,252][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:42.101+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:42,262][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:42,264][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:42,264][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100055
    }
}
[2022-09-14 16:31:42,872][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:42.721+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:42,883][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:42,883][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:42,884][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100056
    }
}
[2022-09-14 16:31:43,383][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:43.223+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:43,394][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:43,394][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:43,395][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100057
    }
}
[2022-09-14 16:31:43,951][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:43.803+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:43,956][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:43,957][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:43,957][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100058
    }
}
[2022-09-14 16:31:44,437][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:44.283+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:44,442][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:44,442][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:44,442][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100059
    }
}
[2022-09-14 16:31:44,988][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:44.834+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:44,999][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:44,999][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:45,000][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100060
    }
}
[2022-09-14 16:31:45,443][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:45.292+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:45,451][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:45,452][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:45,453][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100061
    }
}
[2022-09-14 16:31:46,188][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:46.040+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:46,192][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:46,192][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:46,193][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100062
    }
}
[2022-09-14 16:31:46,651][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:46.502+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:46,657][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:46,658][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:46,658][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100063
    }
}
[2022-09-14 16:31:47,180][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:47.034+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:47,184][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:47,185][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:47,185][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100064
    }
}
[2022-09-14 16:31:47,643][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:47.494+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:47,653][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:47,653][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:47,654][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100065
    }
}
[2022-09-14 16:31:48,121][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:47.965+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:48,133][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:48,133][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:48,134][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100066
    }
}
[2022-09-14 16:31:48,712][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:48.560+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:48,724][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:48,725][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:48,726][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100067
    }
}
[2022-09-14 16:31:49,268][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:49.110+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:49,280][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:49,281][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:49,281][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100068
    }
}
[2022-09-14 16:31:49,817][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:49.651+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:49,829][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:49,829][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:49,830][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100069
    }
}
[2022-09-14 16:31:50,372][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:50.216+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:50,382][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:50,383][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:50,383][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100070
    }
}
[2022-09-14 16:31:50,932][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:50.780+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:50,944][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:50,945][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:50,945][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100071
    }
}
[2022-09-14 16:31:51,525][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:51.359+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:51,537][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:51,538][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:51,538][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100072
    }
}
[2022-09-14 16:31:52,125][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:51.927+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:52,137][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:52,137][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:52,138][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100073
    }
}
[2022-09-14 16:31:52,871][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:52.682+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:52,883][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:52,884][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:52,885][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100074
    }
}
[2022-09-14 16:31:53,706][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:53.456+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:53,717][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:53,724][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:53,724][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100075
    }
}
[2022-09-14 16:31:54,433][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:54.276+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:54,443][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:54,444][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:54,445][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100076
    }
}
[2022-09-14 16:31:55,140][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:54.988+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:55,151][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:55,152][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:55,152][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100077
    }
}
[2022-09-14 16:31:55,670][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:55.495+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:55,680][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:55,681][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:55,681][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100078
    }
}
[2022-09-14 16:31:56,192][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:56.042+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:56,204][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:56,205][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:56,205][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100079
    }
}
[2022-09-14 16:31:56,956][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:56.805+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:56,966][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:56,967][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:56,968][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100080
    }
}
[2022-09-14 16:31:57,476][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:57.317+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:57,485][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:57,486][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:57,487][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100081
    }
}
[2022-09-14 16:31:57,963][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:57.817+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:57,971][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:57,972][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:57,972][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100082
    }
}
[2022-09-14 16:31:58,436][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:58.289+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:58,444][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:58,445][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:58,445][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100083
    }
}
[2022-09-14 16:31:58,974][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:58.824+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:58,984][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:58,985][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:58,986][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100084
    }
}
[2022-09-14 16:31:59,460][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:59.309+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:59,471][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:59,471][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:59,472][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100085
    }
}
[2022-09-14 16:31:59,978][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:31:59.835+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:31:59,988][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:31:59,988][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:31:59,989][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100086
    }
}
[2022-09-14 16:32:00,432][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:00.284+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:00,442][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:00,443][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:00,443][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100087
    }
}
[2022-09-14 16:32:00,905][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:00.756+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:00,913][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:00,913][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:00,914][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100088
    }
}
[2022-09-14 16:32:01,638][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:01.463+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:01,650][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:01,651][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:01,651][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100089
    }
}
[2022-09-14 16:32:02,466][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:02.315+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:02,478][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:02,479][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:02,479][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100090
    }
}
[2022-09-14 16:32:03,021][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:02.871+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:03,033][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:03,034][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:03,034][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100091
    }
}
[2022-09-14 16:32:03,528][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:03.371+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:03,541][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:03,542][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:03,542][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100092
    }
}
[2022-09-14 16:32:04,186][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:04.040+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:04,197][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:04,198][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:04,198][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100093
    }
}
[2022-09-14 16:32:04,686][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:04.536+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:04,696][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:04,697][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:04,698][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100094
    }
}
[2022-09-14 16:32:05,167][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:05.015+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:05,179][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:05,179][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:05,180][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100095
    }
}
[2022-09-14 16:32:05,637][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:05.483+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:05,645][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:05,646][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:05,647][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100096
    }
}
[2022-09-14 16:32:06,132][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:05.982+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:06,141][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:06,142][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:06,143][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100097
    }
}
[2022-09-14 16:32:06,607][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:06.457+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:06,617][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:06,618][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:06,619][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100098
    }
}
[2022-09-14 16:32:07,100][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:06.948+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:07,109][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/selectCollectionDetails/app
[2022-09-14 16:32:07,110][base_api.py 72][INFO]: 接口请求方式 ==>> POST
[2022-09-14 16:32:07,110][base_api.py 81][INFO]: 接口请求体 json 参数 ==>> {
    "param": {
        "collectionUuid": 100099
    }
}
[2022-09-14 16:32:07,695][base_api.py 25][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:07.489+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/selectCollectionDetails/app'}
[2022-09-14 16:32:20,299][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:32:20,300][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:32:20,301][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-14 16:32:20,302][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-14 16:32:20,302][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:32:20,327][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:32:20,327][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-14 16:32:20,340][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-14 16:32:20,391][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/likeCollectionName
[2022-09-14 16:32:20,391][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-14 16:32:20,391][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectName": "deadheads-skull-troopers"
}
[2022-09-14 16:32:20,391][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectName': 'deadheads-skull-troopers'}
[2022-09-14 16:32:20,392][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectName": "deadheads-skull-troopers"
}
[2022-09-14 16:32:21,046][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-14T08:32:20.883+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/likeCollectionName'}
