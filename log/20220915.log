[2022-09-15 11:28:34,394][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 11:28:34,402][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 11:28:34,403][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 11:28:34,404][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 11:28:34,404][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 11:28:34,423][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-15 11:28:34,423][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 11:28:34,435][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-15 11:28:34,507][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:34,507][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:34,508][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 11:28:34,508][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 11:28:34,508][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 11:28:35,123][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:35.071+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:35,128][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:35,128][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:35,128][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 11:28:35,129][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 11:28:35,129][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 11:28:35,570][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:35.516+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:35,585][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:35,586][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:35,587][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100003
}
[2022-09-15 11:28:35,588][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100003}
[2022-09-15 11:28:35,589][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100003
}
[2022-09-15 11:28:36,064][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:36.006+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:36,078][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:36,079][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:36,080][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100004
}
[2022-09-15 11:28:36,081][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100004}
[2022-09-15 11:28:36,081][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100004
}
[2022-09-15 11:28:36,530][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:36.477+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:36,535][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:36,535][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:36,536][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100005
}
[2022-09-15 11:28:36,536][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100005}
[2022-09-15 11:28:36,536][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100005
}
[2022-09-15 11:28:36,978][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:36.923+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:36,985][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:36,985][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:36,986][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100006
}
[2022-09-15 11:28:36,986][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100006}
[2022-09-15 11:28:36,987][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100006
}
[2022-09-15 11:28:37,420][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:37.368+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:37,427][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:37,427][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:37,428][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100007
}
[2022-09-15 11:28:37,428][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100007}
[2022-09-15 11:28:37,428][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100007
}
[2022-09-15 11:28:37,854][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:37.800+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:37,859][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:37,859][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:37,859][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100008
}
[2022-09-15 11:28:37,860][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100008}
[2022-09-15 11:28:37,860][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100008
}
[2022-09-15 11:28:38,385][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:38.327+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:38,390][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:38,391][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:38,391][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100009
}
[2022-09-15 11:28:38,391][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100009}
[2022-09-15 11:28:38,392][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100009
}
[2022-09-15 11:28:38,917][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:38.860+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:38,924][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:38,925][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:38,925][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100010
}
[2022-09-15 11:28:38,926][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100010}
[2022-09-15 11:28:38,926][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100010
}
[2022-09-15 11:28:39,384][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:39.326+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:39,393][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:39,394][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:39,395][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100011
}
[2022-09-15 11:28:39,395][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100011}
[2022-09-15 11:28:39,395][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100011
}
[2022-09-15 11:28:39,919][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:39.862+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:39,925][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:39,926][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:39,926][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100012
}
[2022-09-15 11:28:39,926][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100012}
[2022-09-15 11:28:39,926][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100012
}
[2022-09-15 11:28:40,387][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:40.329+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:40,396][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:40,401][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:40,401][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100013
}
[2022-09-15 11:28:40,402][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100013}
[2022-09-15 11:28:40,402][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100013
}
[2022-09-15 11:28:40,859][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:40.804+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:40,866][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:40,867][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:40,867][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100014
}
[2022-09-15 11:28:40,867][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100014}
[2022-09-15 11:28:40,867][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100014
}
[2022-09-15 11:28:41,411][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:41.355+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:41,419][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:41,419][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:41,420][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100015
}
[2022-09-15 11:28:41,421][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100015}
[2022-09-15 11:28:41,421][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100015
}
[2022-09-15 11:28:41,955][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:41.893+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:41,967][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:41,967][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:41,968][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100016
}
[2022-09-15 11:28:41,968][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100016}
[2022-09-15 11:28:41,969][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100016
}
[2022-09-15 11:28:42,473][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:42.420+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:42,476][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:42,477][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:42,477][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100017
}
[2022-09-15 11:28:42,477][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100017}
[2022-09-15 11:28:42,477][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100017
}
[2022-09-15 11:28:42,992][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:42.938+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:42,996][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:42,996][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:42,997][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100018
}
[2022-09-15 11:28:42,997][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100018}
[2022-09-15 11:28:42,997][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100018
}
[2022-09-15 11:28:43,449][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:43.392+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:43,454][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:43,454][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:43,454][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100019
}
[2022-09-15 11:28:43,455][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100019}
[2022-09-15 11:28:43,455][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100019
}
[2022-09-15 11:28:43,872][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:43.821+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:43,876][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:43,876][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:43,876][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100020
}
[2022-09-15 11:28:43,877][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100020}
[2022-09-15 11:28:43,877][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100020
}
[2022-09-15 11:28:44,326][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:44.270+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:44,332][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:44,333][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:44,333][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100021
}
[2022-09-15 11:28:44,333][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100021}
[2022-09-15 11:28:44,334][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100021
}
[2022-09-15 11:28:44,786][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:44.734+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:44,793][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:44,793][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:44,794][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100022
}
[2022-09-15 11:28:44,794][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100022}
[2022-09-15 11:28:44,794][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100022
}
[2022-09-15 11:28:45,311][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:45.252+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:45,322][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:45,322][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:45,323][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100023
}
[2022-09-15 11:28:45,323][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100023}
[2022-09-15 11:28:45,323][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100023
}
[2022-09-15 11:28:45,979][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:45.918+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:45,984][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:45,984][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:45,984][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100024
}
[2022-09-15 11:28:45,985][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100024}
[2022-09-15 11:28:45,985][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100024
}
[2022-09-15 11:28:46,515][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:46.459+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:46,522][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:46,522][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:46,523][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100025
}
[2022-09-15 11:28:46,523][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100025}
[2022-09-15 11:28:46,523][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100025
}
[2022-09-15 11:28:47,056][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:47.003+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:47,062][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:47,062][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:47,062][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100026
}
[2022-09-15 11:28:47,063][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100026}
[2022-09-15 11:28:47,063][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100026
}
[2022-09-15 11:28:47,525][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:47.468+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:47,531][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:47,532][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:47,532][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100027
}
[2022-09-15 11:28:47,533][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100027}
[2022-09-15 11:28:47,533][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100027
}
[2022-09-15 11:28:48,053][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:48.000+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:48,059][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:48,060][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:48,060][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100028
}
[2022-09-15 11:28:48,060][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100028}
[2022-09-15 11:28:48,060][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100028
}
[2022-09-15 11:28:48,585][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:48.527+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:48,592][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:48,592][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:48,592][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100029
}
[2022-09-15 11:28:48,593][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100029}
[2022-09-15 11:28:48,593][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100029
}
[2022-09-15 11:28:49,066][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:49.006+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:49,077][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:49,078][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:49,079][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100030
}
[2022-09-15 11:28:49,079][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100030}
[2022-09-15 11:28:49,080][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100030
}
[2022-09-15 11:28:49,599][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:49.548+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:49,604][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:49,605][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:49,606][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100031
}
[2022-09-15 11:28:49,606][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100031}
[2022-09-15 11:28:49,607][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100031
}
[2022-09-15 11:28:50,124][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:50.066+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:50,130][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:50,131][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:50,131][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100032
}
[2022-09-15 11:28:50,131][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100032}
[2022-09-15 11:28:50,132][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100032
}
[2022-09-15 11:28:50,613][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:50.555+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:50,616][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:50,616][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:50,617][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100033
}
[2022-09-15 11:28:50,617][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100033}
[2022-09-15 11:28:50,617][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100033
}
[2022-09-15 11:28:51,065][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:51.009+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:51,083][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:51,084][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:51,085][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100034
}
[2022-09-15 11:28:51,086][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100034}
[2022-09-15 11:28:51,087][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100034
}
[2022-09-15 11:28:51,553][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:51.493+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:51,564][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:51,566][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:51,572][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100035
}
[2022-09-15 11:28:51,573][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100035}
[2022-09-15 11:28:51,574][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100035
}
[2022-09-15 11:28:52,054][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:51.992+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:52,060][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:52,061][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:52,061][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100036
}
[2022-09-15 11:28:52,061][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100036}
[2022-09-15 11:28:52,070][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100036
}
[2022-09-15 11:28:52,598][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:52.541+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:52,605][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:52,606][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:52,606][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100037
}
[2022-09-15 11:28:52,606][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100037}
[2022-09-15 11:28:52,607][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100037
}
[2022-09-15 11:28:53,131][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:53.079+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:53,137][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:53,138][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:53,138][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100038
}
[2022-09-15 11:28:53,139][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100038}
[2022-09-15 11:28:53,139][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100038
}
[2022-09-15 11:28:53,674][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:53.611+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:53,682][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:53,682][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:53,683][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100039
}
[2022-09-15 11:28:53,683][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100039}
[2022-09-15 11:28:53,684][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100039
}
[2022-09-15 11:28:54,245][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:54.188+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:54,263][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:54,264][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:54,265][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100040
}
[2022-09-15 11:28:54,265][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100040}
[2022-09-15 11:28:54,265][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100040
}
[2022-09-15 11:28:54,733][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:54.666+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:54,733][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:54,733][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:54,733][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100041
}
[2022-09-15 11:28:54,733][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100041}
[2022-09-15 11:28:54,733][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100041
}
[2022-09-15 11:28:55,272][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:55.217+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:55,285][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:55,286][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:55,286][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100042
}
[2022-09-15 11:28:55,287][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100042}
[2022-09-15 11:28:55,288][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100042
}
[2022-09-15 11:28:55,743][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:55.695+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:55,749][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:55,750][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:55,750][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100043
}
[2022-09-15 11:28:55,750][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100043}
[2022-09-15 11:28:55,750][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100043
}
[2022-09-15 11:28:56,402][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:56.345+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:56,408][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:56,409][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:56,409][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100044
}
[2022-09-15 11:28:56,409][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100044}
[2022-09-15 11:28:56,410][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100044
}
[2022-09-15 11:28:56,884][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:56.828+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:56,890][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:56,891][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:56,891][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100045
}
[2022-09-15 11:28:56,891][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100045}
[2022-09-15 11:28:56,891][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100045
}
[2022-09-15 11:28:57,334][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:57.279+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:57,340][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:57,341][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:57,341][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100046
}
[2022-09-15 11:28:57,341][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100046}
[2022-09-15 11:28:57,342][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100046
}
[2022-09-15 11:28:57,791][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:57.734+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:57,810][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:57,811][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:57,814][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100047
}
[2022-09-15 11:28:57,814][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100047}
[2022-09-15 11:28:57,815][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100047
}
[2022-09-15 11:28:58,336][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:58.280+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:58,340][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:58,340][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:58,340][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100048
}
[2022-09-15 11:28:58,340][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100048}
[2022-09-15 11:28:58,340][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100048
}
[2022-09-15 11:28:58,853][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:58.795+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:58,864][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:58,865][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:58,866][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100049
}
[2022-09-15 11:28:58,866][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100049}
[2022-09-15 11:28:58,866][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100049
}
[2022-09-15 11:28:59,312][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:59.251+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:59,324][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:59,324][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:59,325][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100050
}
[2022-09-15 11:28:59,325][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100050}
[2022-09-15 11:28:59,326][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100050
}
[2022-09-15 11:28:59,885][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:28:59.828+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:28:59,893][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:28:59,893][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:28:59,894][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100051
}
[2022-09-15 11:28:59,894][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100051}
[2022-09-15 11:28:59,895][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100051
}
[2022-09-15 11:29:00,440][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:00.379+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:00,453][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:00,453][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:00,454][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100052
}
[2022-09-15 11:29:00,455][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100052}
[2022-09-15 11:29:00,455][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100052
}
[2022-09-15 11:29:00,935][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:00.876+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:00,952][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:00,953][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:00,954][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100053
}
[2022-09-15 11:29:00,954][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100053}
[2022-09-15 11:29:00,955][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100053
}
[2022-09-15 11:29:01,487][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:01.435+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:01,493][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:01,494][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:01,494][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100054
}
[2022-09-15 11:29:01,495][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100054}
[2022-09-15 11:29:01,495][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100054
}
[2022-09-15 11:29:01,919][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:01.869+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:01,922][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:01,923][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:01,923][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100055
}
[2022-09-15 11:29:01,923][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100055}
[2022-09-15 11:29:01,924][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100055
}
[2022-09-15 11:29:02,449][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:02.383+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:02,454][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:02,455][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:02,455][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100056
}
[2022-09-15 11:29:02,456][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100056}
[2022-09-15 11:29:02,456][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100056
}
[2022-09-15 11:29:02,979][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:02.925+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:02,985][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:02,985][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:02,985][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100057
}
[2022-09-15 11:29:02,986][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100057}
[2022-09-15 11:29:02,986][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100057
}
[2022-09-15 11:29:03,525][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:03.466+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:03,530][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:03,530][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:03,531][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100058
}
[2022-09-15 11:29:03,531][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100058}
[2022-09-15 11:29:03,531][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100058
}
[2022-09-15 11:29:04,067][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:04.012+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:04,074][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:04,075][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:04,075][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100059
}
[2022-09-15 11:29:04,078][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100059}
[2022-09-15 11:29:04,078][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100059
}
[2022-09-15 11:29:04,579][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:04.518+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:04,595][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:04,598][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:04,600][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100060
}
[2022-09-15 11:29:04,600][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100060}
[2022-09-15 11:29:04,601][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100060
}
[2022-09-15 11:29:05,086][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:05.027+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:05,097][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:05,098][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:05,099][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100061
}
[2022-09-15 11:29:05,099][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100061}
[2022-09-15 11:29:05,100][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100061
}
[2022-09-15 11:29:05,599][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:05.546+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:05,603][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:05,603][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:05,604][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100062
}
[2022-09-15 11:29:05,604][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100062}
[2022-09-15 11:29:05,604][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100062
}
[2022-09-15 11:29:06,045][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:05.990+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:06,051][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:06,052][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:06,052][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100063
}
[2022-09-15 11:29:06,053][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100063}
[2022-09-15 11:29:06,053][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100063
}
[2022-09-15 11:29:06,682][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:06.625+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:06,688][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:06,689][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:06,689][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100064
}
[2022-09-15 11:29:06,690][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100064}
[2022-09-15 11:29:06,690][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100064
}
[2022-09-15 11:29:07,140][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:07.089+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:07,146][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:07,147][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:07,147][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100065
}
[2022-09-15 11:29:07,147][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100065}
[2022-09-15 11:29:07,148][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100065
}
[2022-09-15 11:29:07,592][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:07.538+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:07,599][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:07,600][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:07,601][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100066
}
[2022-09-15 11:29:07,601][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100066}
[2022-09-15 11:29:07,602][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100066
}
[2022-09-15 11:29:08,059][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:07.999+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:08,062][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:08,063][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:08,063][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100067
}
[2022-09-15 11:29:08,063][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100067}
[2022-09-15 11:29:08,063][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100067
}
[2022-09-15 11:29:08,590][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:08.536+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:08,593][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:08,593][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:08,594][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100068
}
[2022-09-15 11:29:08,594][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100068}
[2022-09-15 11:29:08,594][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100068
}
[2022-09-15 11:29:09,131][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:09.075+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:09,139][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:09,139][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:09,140][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100069
}
[2022-09-15 11:29:09,140][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100069}
[2022-09-15 11:29:09,140][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100069
}
[2022-09-15 11:29:09,573][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:09.518+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:09,579][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:09,579][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:09,579][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100070
}
[2022-09-15 11:29:09,579][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100070}
[2022-09-15 11:29:09,580][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100070
}
[2022-09-15 11:29:10,088][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:09.977+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:10,097][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:10,097][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:10,097][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100071
}
[2022-09-15 11:29:10,098][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100071}
[2022-09-15 11:29:10,098][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100071
}
[2022-09-15 11:29:10,607][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:10.550+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:10,614][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:10,615][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:10,615][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100072
}
[2022-09-15 11:29:10,616][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100072}
[2022-09-15 11:29:10,616][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100072
}
[2022-09-15 11:29:11,098][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:11.042+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:11,104][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:11,105][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:11,105][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100073
}
[2022-09-15 11:29:11,106][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100073}
[2022-09-15 11:29:11,106][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100073
}
[2022-09-15 11:29:11,650][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:11.593+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:11,656][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:11,656][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:11,657][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100074
}
[2022-09-15 11:29:11,657][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100074}
[2022-09-15 11:29:11,657][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100074
}
[2022-09-15 11:29:12,134][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:12.072+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:12,150][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:12,151][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:12,151][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100075
}
[2022-09-15 11:29:12,152][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100075}
[2022-09-15 11:29:12,152][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100075
}
[2022-09-15 11:29:12,653][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:12.592+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:12,657][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:12,657][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:12,657][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100076
}
[2022-09-15 11:29:12,658][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100076}
[2022-09-15 11:29:12,658][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100076
}
[2022-09-15 11:29:13,103][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:13.043+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:13,121][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:13,122][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:13,123][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100077
}
[2022-09-15 11:29:13,124][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100077}
[2022-09-15 11:29:13,124][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100077
}
[2022-09-15 11:29:13,620][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:13.565+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:13,625][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:13,625][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:13,625][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100078
}
[2022-09-15 11:29:13,626][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100078}
[2022-09-15 11:29:13,626][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100078
}
[2022-09-15 11:29:14,158][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:14.104+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:14,165][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:14,165][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:14,166][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100079
}
[2022-09-15 11:29:14,166][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100079}
[2022-09-15 11:29:14,166][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100079
}
[2022-09-15 11:29:14,614][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:14.547+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:14,621][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:14,622][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:14,622][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100080
}
[2022-09-15 11:29:14,622][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100080}
[2022-09-15 11:29:14,623][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100080
}
[2022-09-15 11:29:15,167][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:15.114+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:15,173][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:15,174][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:15,174][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100081
}
[2022-09-15 11:29:15,174][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100081}
[2022-09-15 11:29:15,175][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100081
}
[2022-09-15 11:29:15,649][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:15.598+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:15,654][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:15,654][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:15,654][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100082
}
[2022-09-15 11:29:15,655][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100082}
[2022-09-15 11:29:15,655][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100082
}
[2022-09-15 11:29:16,088][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:16.035+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:16,094][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:16,094][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:16,095][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100083
}
[2022-09-15 11:29:16,095][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100083}
[2022-09-15 11:29:16,095][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100083
}
[2022-09-15 11:29:16,603][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:16.549+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:16,607][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:16,608][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:16,608][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100084
}
[2022-09-15 11:29:16,609][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100084}
[2022-09-15 11:29:16,610][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100084
}
[2022-09-15 11:29:17,164][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:17.113+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:17,169][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:17,169][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:17,170][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100085
}
[2022-09-15 11:29:17,170][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100085}
[2022-09-15 11:29:17,171][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100085
}
[2022-09-15 11:29:17,622][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:17.566+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:17,628][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:17,628][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:17,628][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100086
}
[2022-09-15 11:29:17,629][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100086}
[2022-09-15 11:29:17,629][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100086
}
[2022-09-15 11:29:18,062][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:18.007+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:18,068][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:18,068][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:18,068][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100087
}
[2022-09-15 11:29:18,069][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100087}
[2022-09-15 11:29:18,069][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100087
}
[2022-09-15 11:29:18,587][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:18.530+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:18,595][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:18,596][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:18,596][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100088
}
[2022-09-15 11:29:18,596][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100088}
[2022-09-15 11:29:18,596][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100088
}
[2022-09-15 11:29:19,065][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:19.007+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:19,072][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:19,073][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:19,073][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100089
}
[2022-09-15 11:29:19,074][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100089}
[2022-09-15 11:29:19,074][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100089
}
[2022-09-15 11:29:19,595][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:19.538+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:19,607][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:19,607][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:19,607][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100090
}
[2022-09-15 11:29:19,608][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100090}
[2022-09-15 11:29:19,608][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100090
}
[2022-09-15 11:29:20,128][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:20.068+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:20,144][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:20,145][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:20,146][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100091
}
[2022-09-15 11:29:20,147][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100091}
[2022-09-15 11:29:20,148][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100091
}
[2022-09-15 11:29:20,657][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:20.604+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:20,663][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:20,663][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:20,664][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100092
}
[2022-09-15 11:29:20,664][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100092}
[2022-09-15 11:29:20,664][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100092
}
[2022-09-15 11:29:21,168][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:21.117+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:21,173][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:21,173][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:21,173][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100093
}
[2022-09-15 11:29:21,174][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100093}
[2022-09-15 11:29:21,174][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100093
}
[2022-09-15 11:29:21,712][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:21.647+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:21,721][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:21,722][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:21,722][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100094
}
[2022-09-15 11:29:21,722][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100094}
[2022-09-15 11:29:21,722][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100094
}
[2022-09-15 11:29:22,173][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:22.116+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:22,179][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:22,180][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:22,180][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100095
}
[2022-09-15 11:29:22,181][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100095}
[2022-09-15 11:29:22,181][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100095
}
[2022-09-15 11:29:22,658][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:22.593+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:22,663][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:22,664][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:22,664][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100096
}
[2022-09-15 11:29:22,664][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100096}
[2022-09-15 11:29:22,665][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100096
}
[2022-09-15 11:29:23,162][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:23.110+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:23,166][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:23,166][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:23,166][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100097
}
[2022-09-15 11:29:23,166][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100097}
[2022-09-15 11:29:23,167][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100097
}
[2022-09-15 11:29:23,588][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:23.536+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:23,592][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:23,592][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:23,592][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100098
}
[2022-09-15 11:29:23,592][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100098}
[2022-09-15 11:29:23,593][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100098
}
[2022-09-15 11:29:24,044][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:23.985+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 11:29:24,055][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 11:29:24,056][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 11:29:24,056][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100099
}
[2022-09-15 11:29:24,057][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100099}
[2022-09-15 11:29:24,057][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100099
}
[2022-09-15 11:29:24,522][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T03:29:24.468+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:19,008][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 13:45:19,010][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 13:45:19,011][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 13:45:19,012][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 13:45:19,012][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 13:45:19,027][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-15 13:45:19,028][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 13:45:19,041][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-15 13:45:19,110][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:19,110][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:19,111][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 13:45:19,112][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 13:45:19,112][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 13:45:19,687][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:19.027+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:19,692][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:19,692][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:19,692][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 13:45:19,692][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 13:45:19,692][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 13:45:20,139][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:19.479+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:20,144][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:20,145][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:20,145][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100003
}
[2022-09-15 13:45:20,145][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100003}
[2022-09-15 13:45:20,145][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100003
}
[2022-09-15 13:45:20,585][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:19.923+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:20,591][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:20,591][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:20,591][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100004
}
[2022-09-15 13:45:20,592][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100004}
[2022-09-15 13:45:20,592][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100004
}
[2022-09-15 13:45:21,049][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:20.388+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:21,055][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:21,057][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:21,057][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100005
}
[2022-09-15 13:45:21,057][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100005}
[2022-09-15 13:45:21,057][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100005
}
[2022-09-15 13:45:21,574][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:20.908+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:21,581][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:21,581][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:21,582][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100006
}
[2022-09-15 13:45:21,582][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100006}
[2022-09-15 13:45:21,582][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100006
}
[2022-09-15 13:45:22,120][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:21.457+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:22,125][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:22,126][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:22,126][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100007
}
[2022-09-15 13:45:22,126][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100007}
[2022-09-15 13:45:22,126][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100007
}
[2022-09-15 13:45:22,566][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:21.904+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:22,575][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:22,575][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:22,575][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100008
}
[2022-09-15 13:45:22,576][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100008}
[2022-09-15 13:45:22,576][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100008
}
[2022-09-15 13:45:23,116][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:22.455+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:23,124][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:23,124][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:23,125][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100009
}
[2022-09-15 13:45:23,125][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100009}
[2022-09-15 13:45:23,125][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100009
}
[2022-09-15 13:45:23,581][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:22.919+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:23,598][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:23,598][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:23,599][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100010
}
[2022-09-15 13:45:23,599][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100010}
[2022-09-15 13:45:23,600][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100010
}
[2022-09-15 13:45:24,087][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:23.430+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:24,093][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:24,093][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:24,094][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100011
}
[2022-09-15 13:45:24,094][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100011}
[2022-09-15 13:45:24,095][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100011
}
[2022-09-15 13:45:24,551][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:23.887+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:24,562][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:24,563][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:24,563][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100012
}
[2022-09-15 13:45:24,563][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100012}
[2022-09-15 13:45:24,564][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100012
}
[2022-09-15 13:45:25,014][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:24.349+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:25,019][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:25,019][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:25,020][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100013
}
[2022-09-15 13:45:25,020][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100013}
[2022-09-15 13:45:25,020][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100013
}
[2022-09-15 13:45:25,472][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:24.810+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:25,477][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:25,477][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:25,477][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100014
}
[2022-09-15 13:45:25,478][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100014}
[2022-09-15 13:45:25,478][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100014
}
[2022-09-15 13:45:25,944][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:25.280+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:25,949][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:25,949][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:25,949][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100015
}
[2022-09-15 13:45:25,950][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100015}
[2022-09-15 13:45:25,950][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100015
}
[2022-09-15 13:45:26,410][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:25.750+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:26,415][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:26,416][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:26,416][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100016
}
[2022-09-15 13:45:26,416][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100016}
[2022-09-15 13:45:26,417][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100016
}
[2022-09-15 13:45:26,868][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:26.212+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:26,872][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:26,872][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:26,872][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100017
}
[2022-09-15 13:45:26,872][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100017}
[2022-09-15 13:45:26,873][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100017
}
[2022-09-15 13:45:27,314][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:26.648+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:27,324][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:27,325][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:27,325][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100018
}
[2022-09-15 13:45:27,325][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100018}
[2022-09-15 13:45:27,326][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100018
}
[2022-09-15 13:45:27,853][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:27.191+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:27,864][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:27,865][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:27,866][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100019
}
[2022-09-15 13:45:27,866][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100019}
[2022-09-15 13:45:27,867][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100019
}
[2022-09-15 13:45:28,324][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:27.659+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:28,329][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:28,330][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:28,330][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100020
}
[2022-09-15 13:45:28,330][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100020}
[2022-09-15 13:45:28,330][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100020
}
[2022-09-15 13:45:28,873][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:28.206+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:28,885][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:28,886][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:28,886][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100021
}
[2022-09-15 13:45:28,887][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100021}
[2022-09-15 13:45:28,887][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100021
}
[2022-09-15 13:45:29,428][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:28.765+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:29,438][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:29,440][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:29,440][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100022
}
[2022-09-15 13:45:29,441][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100022}
[2022-09-15 13:45:29,442][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100022
}
[2022-09-15 13:45:29,919][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:29.252+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:29,928][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:29,928][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:29,929][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100023
}
[2022-09-15 13:45:29,929][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100023}
[2022-09-15 13:45:29,929][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100023
}
[2022-09-15 13:45:30,492][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:29.831+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:30,497][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:30,497][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:30,497][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100024
}
[2022-09-15 13:45:30,497][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100024}
[2022-09-15 13:45:30,498][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100024
}
[2022-09-15 13:45:31,023][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:30.358+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:31,033][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:31,034][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:31,035][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100025
}
[2022-09-15 13:45:31,035][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100025}
[2022-09-15 13:45:31,036][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100025
}
[2022-09-15 13:45:31,510][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:30.846+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:31,522][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:31,523][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:31,524][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100026
}
[2022-09-15 13:45:31,524][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100026}
[2022-09-15 13:45:31,525][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100026
}
[2022-09-15 13:45:31,981][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:31.315+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:31,992][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:31,993][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:31,994][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100027
}
[2022-09-15 13:45:31,994][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100027}
[2022-09-15 13:45:31,995][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100027
}
[2022-09-15 13:45:32,452][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:31.789+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:32,463][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:32,464][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:32,464][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100028
}
[2022-09-15 13:45:32,465][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100028}
[2022-09-15 13:45:32,465][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100028
}
[2022-09-15 13:45:32,981][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:32.316+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:32,990][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:32,991][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:32,991][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100029
}
[2022-09-15 13:45:32,991][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100029}
[2022-09-15 13:45:32,992][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100029
}
[2022-09-15 13:45:33,543][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:32.877+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:33,555][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:33,556][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:33,557][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100030
}
[2022-09-15 13:45:33,557][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100030}
[2022-09-15 13:45:33,558][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100030
}
[2022-09-15 13:45:34,081][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:33.416+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:34,091][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:34,092][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:34,092][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100031
}
[2022-09-15 13:45:34,092][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100031}
[2022-09-15 13:45:34,093][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100031
}
[2022-09-15 13:45:34,628][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:33.962+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:34,636][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:34,637][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:34,638][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100032
}
[2022-09-15 13:45:34,638][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100032}
[2022-09-15 13:45:34,639][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100032
}
[2022-09-15 13:45:35,086][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:34.421+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:35,095][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:35,096][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:35,096][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100033
}
[2022-09-15 13:45:35,097][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100033}
[2022-09-15 13:45:35,097][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100033
}
[2022-09-15 13:45:35,758][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:35.093+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:35,769][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:35,770][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:35,770][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100034
}
[2022-09-15 13:45:35,771][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100034}
[2022-09-15 13:45:35,771][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100034
}
[2022-09-15 13:45:36,235][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:35.570+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:36,238][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:36,238][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:36,239][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100035
}
[2022-09-15 13:45:36,239][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100035}
[2022-09-15 13:45:36,239][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100035
}
[2022-09-15 13:45:36,683][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:36.025+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:36,694][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:36,695][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:36,695][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100036
}
[2022-09-15 13:45:36,696][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100036}
[2022-09-15 13:45:36,696][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100036
}
[2022-09-15 13:45:37,242][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:36.576+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:37,246][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:37,246][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:37,246][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100037
}
[2022-09-15 13:45:37,246][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100037}
[2022-09-15 13:45:37,246][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100037
}
[2022-09-15 13:45:37,777][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:37.117+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:37,781][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:37,781][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:37,781][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100038
}
[2022-09-15 13:45:37,781][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100038}
[2022-09-15 13:45:37,781][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100038
}
[2022-09-15 13:45:38,245][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:37.578+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:38,249][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:38,249][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:38,250][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100039
}
[2022-09-15 13:45:38,250][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100039}
[2022-09-15 13:45:38,250][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100039
}
[2022-09-15 13:45:38,754][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:38.095+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:38,758][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:38,758][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:38,759][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100040
}
[2022-09-15 13:45:38,759][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100040}
[2022-09-15 13:45:38,760][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100040
}
[2022-09-15 13:45:39,265][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:38.599+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:39,276][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:39,277][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:39,277][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100041
}
[2022-09-15 13:45:39,277][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100041}
[2022-09-15 13:45:39,277][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100041
}
[2022-09-15 13:45:39,795][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:39.138+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:39,800][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:39,800][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:39,800][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100042
}
[2022-09-15 13:45:39,800][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100042}
[2022-09-15 13:45:39,800][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100042
}
[2022-09-15 13:45:40,248][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:39.585+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:40,251][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:40,251][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:40,252][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100043
}
[2022-09-15 13:45:40,252][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100043}
[2022-09-15 13:45:40,252][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100043
}
[2022-09-15 13:45:40,690][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:40.028+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:40,693][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:40,695][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:40,695][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100044
}
[2022-09-15 13:45:40,695][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100044}
[2022-09-15 13:45:40,696][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100044
}
[2022-09-15 13:45:41,150][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:40.487+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:41,153][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:41,154][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:41,154][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100045
}
[2022-09-15 13:45:41,154][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100045}
[2022-09-15 13:45:41,155][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100045
}
[2022-09-15 13:45:41,681][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:41.016+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:41,693][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:41,693][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:41,694][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100046
}
[2022-09-15 13:45:41,694][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100046}
[2022-09-15 13:45:41,694][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100046
}
[2022-09-15 13:45:42,177][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:41.515+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:42,182][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:42,182][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:42,182][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100047
}
[2022-09-15 13:45:42,182][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100047}
[2022-09-15 13:45:42,182][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100047
}
[2022-09-15 13:45:42,626][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:41.962+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:42,638][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:42,639][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:42,640][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100048
}
[2022-09-15 13:45:42,641][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100048}
[2022-09-15 13:45:42,641][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100048
}
[2022-09-15 13:45:43,095][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:42.431+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:43,106][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:43,107][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:43,107][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100049
}
[2022-09-15 13:45:43,108][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100049}
[2022-09-15 13:45:43,109][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100049
}
[2022-09-15 13:45:43,629][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:42.970+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:43,632][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:43,633][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:43,633][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100050
}
[2022-09-15 13:45:43,633][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100050}
[2022-09-15 13:45:43,633][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100050
}
[2022-09-15 13:45:44,075][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:43.411+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:44,086][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:44,097][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:44,098][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100051
}
[2022-09-15 13:45:44,098][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100051}
[2022-09-15 13:45:44,098][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100051
}
[2022-09-15 13:45:44,541][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:43.875+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:44,551][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:44,552][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:44,553][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100052
}
[2022-09-15 13:45:44,554][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100052}
[2022-09-15 13:45:44,555][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100052
}
[2022-09-15 13:45:45,019][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:44.354+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:45,028][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:45,029][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:45,029][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100053
}
[2022-09-15 13:45:45,030][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100053}
[2022-09-15 13:45:45,030][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100053
}
[2022-09-15 13:45:45,578][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:44.912+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:45,590][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:45,591][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:45,591][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100054
}
[2022-09-15 13:45:45,592][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100054}
[2022-09-15 13:45:45,593][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100054
}
[2022-09-15 13:45:46,192][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:45.526+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:46,203][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:46,205][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:46,205][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100055
}
[2022-09-15 13:45:46,206][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100055}
[2022-09-15 13:45:46,206][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100055
}
[2022-09-15 13:45:46,744][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:46.075+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:46,753][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:46,754][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:46,754][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100056
}
[2022-09-15 13:45:46,755][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100056}
[2022-09-15 13:45:46,755][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100056
}
[2022-09-15 13:45:47,257][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:46.597+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:47,265][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:47,266][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:47,266][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100057
}
[2022-09-15 13:45:47,266][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100057}
[2022-09-15 13:45:47,266][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100057
}
[2022-09-15 13:45:47,743][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:47.074+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:47,755][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:47,756][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:47,757][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100058
}
[2022-09-15 13:45:47,758][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100058}
[2022-09-15 13:45:47,759][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100058
}
[2022-09-15 13:45:48,218][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:47.554+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:48,222][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:48,223][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:48,223][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100059
}
[2022-09-15 13:45:48,223][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100059}
[2022-09-15 13:45:48,224][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100059
}
[2022-09-15 13:45:48,699][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:48.036+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:48,703][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:48,703][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:48,703][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100060
}
[2022-09-15 13:45:48,703][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100060}
[2022-09-15 13:45:48,704][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100060
}
[2022-09-15 13:45:49,220][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:48.558+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:49,229][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:49,229][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:49,230][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100061
}
[2022-09-15 13:45:49,230][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100061}
[2022-09-15 13:45:49,230][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100061
}
[2022-09-15 13:45:49,752][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:49.086+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:49,763][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:49,764][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:49,764][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100062
}
[2022-09-15 13:45:49,764][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100062}
[2022-09-15 13:45:49,765][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100062
}
[2022-09-15 13:45:50,215][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:49.553+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:50,220][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:50,221][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:50,221][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100063
}
[2022-09-15 13:45:50,221][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100063}
[2022-09-15 13:45:50,222][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100063
}
[2022-09-15 13:45:50,743][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:50.079+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:50,754][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:50,754][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:50,755][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100064
}
[2022-09-15 13:45:50,755][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100064}
[2022-09-15 13:45:50,755][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100064
}
[2022-09-15 13:45:51,221][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:50.556+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:51,230][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:51,231][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:51,232][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100065
}
[2022-09-15 13:45:51,233][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100065}
[2022-09-15 13:45:51,234][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100065
}
[2022-09-15 13:45:51,781][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:51.117+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:51,785][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:51,785][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:51,785][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100066
}
[2022-09-15 13:45:51,786][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100066}
[2022-09-15 13:45:51,786][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100066
}
[2022-09-15 13:45:52,240][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:51.575+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:52,251][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:52,252][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:52,252][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100067
}
[2022-09-15 13:45:52,253][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100067}
[2022-09-15 13:45:52,253][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100067
}
[2022-09-15 13:45:52,710][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:52.046+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:52,721][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:52,722][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:52,723][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100068
}
[2022-09-15 13:45:52,723][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100068}
[2022-09-15 13:45:52,723][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100068
}
[2022-09-15 13:45:53,171][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:52.507+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:53,183][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:53,183][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:53,184][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100069
}
[2022-09-15 13:45:53,184][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100069}
[2022-09-15 13:45:53,184][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100069
}
[2022-09-15 13:45:53,732][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:53.067+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:53,743][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:53,744][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:53,744][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100070
}
[2022-09-15 13:45:53,744][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100070}
[2022-09-15 13:45:53,745][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100070
}
[2022-09-15 13:45:54,220][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:53.554+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:54,231][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:54,232][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:54,232][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100071
}
[2022-09-15 13:45:54,233][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100071}
[2022-09-15 13:45:54,233][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100071
}
[2022-09-15 13:45:54,680][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:54.018+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:54,691][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:54,692][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:54,693][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100072
}
[2022-09-15 13:45:54,693][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100072}
[2022-09-15 13:45:54,694][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100072
}
[2022-09-15 13:45:55,156][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:54.487+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:55,168][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:55,169][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:55,169][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100073
}
[2022-09-15 13:45:55,169][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100073}
[2022-09-15 13:45:55,170][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100073
}
[2022-09-15 13:45:55,674][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:55.013+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:55,680][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:55,680][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:55,681][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100074
}
[2022-09-15 13:45:55,681][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100074}
[2022-09-15 13:45:55,681][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100074
}
[2022-09-15 13:45:56,126][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:55.463+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:56,131][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:56,131][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:56,132][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100075
}
[2022-09-15 13:45:56,132][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100075}
[2022-09-15 13:45:56,132][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100075
}
[2022-09-15 13:45:56,723][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:56.059+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:56,734][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:56,734][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:56,735][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100076
}
[2022-09-15 13:45:56,735][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100076}
[2022-09-15 13:45:56,736][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100076
}
[2022-09-15 13:45:57,266][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:56.604+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:57,270][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:57,270][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:57,270][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100077
}
[2022-09-15 13:45:57,270][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100077}
[2022-09-15 13:45:57,270][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100077
}
[2022-09-15 13:45:57,771][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:57.111+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:57,780][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:57,780][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:57,781][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100078
}
[2022-09-15 13:45:57,781][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100078}
[2022-09-15 13:45:57,783][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100078
}
[2022-09-15 13:45:58,317][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:57.652+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:58,327][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:58,328][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:58,328][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100079
}
[2022-09-15 13:45:58,329][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100079}
[2022-09-15 13:45:58,329][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100079
}
[2022-09-15 13:45:58,866][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:58.206+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:58,877][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:58,878][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:58,878][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100080
}
[2022-09-15 13:45:58,879][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100080}
[2022-09-15 13:45:58,879][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100080
}
[2022-09-15 13:45:59,341][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:58.675+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:59,352][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:59,353][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:59,353][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100081
}
[2022-09-15 13:45:59,354][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100081}
[2022-09-15 13:45:59,354][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100081
}
[2022-09-15 13:45:59,869][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:59.211+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:45:59,873][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:45:59,873][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:45:59,873][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100082
}
[2022-09-15 13:45:59,873][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100082}
[2022-09-15 13:45:59,874][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100082
}
[2022-09-15 13:46:00,414][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:45:59.749+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:00,424][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:00,425][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:00,426][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100083
}
[2022-09-15 13:46:00,426][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100083}
[2022-09-15 13:46:00,427][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100083
}
[2022-09-15 13:46:00,864][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:00.201+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:00,875][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:00,876][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:00,876][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100084
}
[2022-09-15 13:46:00,876][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100084}
[2022-09-15 13:46:00,877][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100084
}
[2022-09-15 13:46:01,336][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:00.672+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:01,349][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:01,349][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:01,350][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100085
}
[2022-09-15 13:46:01,351][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100085}
[2022-09-15 13:46:01,351][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100085
}
[2022-09-15 13:46:01,880][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:01.216+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:01,890][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:01,891][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:01,892][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100086
}
[2022-09-15 13:46:01,892][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100086}
[2022-09-15 13:46:01,893][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100086
}
[2022-09-15 13:46:02,341][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:01.675+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:02,347][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:02,348][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:02,349][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100087
}
[2022-09-15 13:46:02,349][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100087}
[2022-09-15 13:46:02,349][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100087
}
[2022-09-15 13:46:02,794][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:02.131+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:02,805][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:02,806][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:02,806][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100088
}
[2022-09-15 13:46:02,807][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100088}
[2022-09-15 13:46:02,807][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100088
}
[2022-09-15 13:46:03,339][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:02.676+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:03,342][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:03,342][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:03,342][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100089
}
[2022-09-15 13:46:03,343][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100089}
[2022-09-15 13:46:03,343][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100089
}
[2022-09-15 13:46:03,889][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:03.223+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:03,899][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:03,900][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:03,900][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100090
}
[2022-09-15 13:46:03,900][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100090}
[2022-09-15 13:46:03,901][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100090
}
[2022-09-15 13:46:04,374][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:03.699+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:04,380][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:04,381][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:04,381][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100091
}
[2022-09-15 13:46:04,382][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100091}
[2022-09-15 13:46:04,382][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100091
}
[2022-09-15 13:46:04,904][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:04.239+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:04,915][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:04,915][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:04,916][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100092
}
[2022-09-15 13:46:04,916][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100092}
[2022-09-15 13:46:04,916][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100092
}
[2022-09-15 13:46:05,416][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:04.754+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:05,421][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:05,421][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:05,422][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100093
}
[2022-09-15 13:46:05,422][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100093}
[2022-09-15 13:46:05,422][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100093
}
[2022-09-15 13:46:05,877][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:05.213+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:05,881][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:05,881][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:05,882][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100094
}
[2022-09-15 13:46:05,882][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100094}
[2022-09-15 13:46:05,882][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100094
}
[2022-09-15 13:46:06,346][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:05.681+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:06,350][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:06,351][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:06,351][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100095
}
[2022-09-15 13:46:06,351][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100095}
[2022-09-15 13:46:06,351][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100095
}
[2022-09-15 13:46:06,874][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:06.214+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:06,878][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:06,878][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:06,878][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100096
}
[2022-09-15 13:46:06,878][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100096}
[2022-09-15 13:46:06,878][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100096
}
[2022-09-15 13:46:07,447][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:06.784+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:07,458][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:07,459][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:07,459][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100097
}
[2022-09-15 13:46:07,460][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100097}
[2022-09-15 13:46:07,460][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100097
}
[2022-09-15 13:46:08,010][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:07.346+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:08,015][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:08,015][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:08,016][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100098
}
[2022-09-15 13:46:08,016][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100098}
[2022-09-15 13:46:08,016][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100098
}
[2022-09-15 13:46:08,560][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:07.895+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:46:08,564][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 13:46:08,564][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 13:46:08,564][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100099
}
[2022-09-15 13:46:08,565][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100099}
[2022-09-15 13:46:08,565][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100099
}
[2022-09-15 13:46:09,118][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T05:46:08.452+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 13:49:17,271][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 13:49:17,272][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 13:49:17,273][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 13:49:17,273][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 13:49:17,274][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 13:49:17,286][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-15 13:49:17,286][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 13:49:17,295][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']]} 
[2022-09-15 14:33:32,489][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:34:12,259][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:34:12,273][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [['100001', '$sql \'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"\'']]} 
[2022-09-15 14:34:38,316][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:34:38,328][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [['100001', '$sql \'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"\'']]} 
[2022-09-15 14:35:01,736][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:35:01,753][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [['100001', '$sql:\'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"\'']]} 
[2022-09-15 14:37:38,489][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:37:38,499][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [[{'collectionUuid': 100001}, {'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}]]} 
[2022-09-15 14:38:03,337][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:38:16,050][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:38:16,061][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [[{'collectionUuid': 100001}, {'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}]]} 
[2022-09-15 14:38:38,420][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:38:38,432][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [[{'collectionUuid': 100001}, {'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}]]} 
[2022-09-15 14:38:56,093][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:38:56,103][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [[{'collectionUuid': 100001}, {'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}]]} 
[2022-09-15 14:39:08,151][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:39:08,161][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [[{'collectionUuid': 100001}, {'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}]]} 
[2022-09-15 14:40:37,578][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:40:37,589][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [[100001, {'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}]]} 
[2022-09-15 14:42:11,328][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:45:47,366][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:45:47,378][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:45:59,603][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:45:59,615][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:46:25,895][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:46:25,906][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:48:37,800][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:48:37,810][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [['ONE_DAY', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_DAY', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_DAY', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_DAY', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_FEE_ETH', 200, 747.4714729146486, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NEW_ADDRESS_COUNT', 200, 66397.0, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_UTILIZATION', 200, 0.5149, '2022-09-13', '操作成功'], ['ONE_WEEK', 'NETWORK_HASH_RATE', 200, 914926.9191, '2022-09-13', '操作成功'], ['ONE_WEEK', 'TRANSACTION_COUNT', 200, 1093205.0, '2022-09-13', '操作成功'], ['ONE_MONTH', 'TRANSACTION_FEE_ETH', 200, 646.6175269277369, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NEW_ADDRESS_COUNT', 200, 70186.0, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_UTILIZATION', 200, 0.514, '2022-08-15', '操作成功'], ['ONE_MONTH', 'NETWORK_HASH_RATE', 200, 922988.4189, '2022-08-15', '操作成功'], ['ONE_MONTH', 'TRANSACTION_COUNT', 200, 1104408.0, '2022-08-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_FEE_ETH', 200, 1130.2153386307432, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NEW_ADDRESS_COUNT', 200, 78963.0, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_UTILIZATION', 200, 0.5137, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'NETWORK_HASH_RATE', 200, 961544.4888, '2022-06-15', '操作成功'], ['THREE_MONTHS', 'TRANSACTION_COUNT', 200, 1097000.0, '2022-06-15', '操作成功']], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:57:34,460][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 14:57:34,461][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 14:57:34,462][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 14:57:34,462][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 14:57:34,463][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:57:34,480][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:57:34,481][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:57:34,485][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:57:34,485][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:57:34,490][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:57:44,462][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 14:57:44,463][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 14:57:44,464][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 14:57:44,464][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 14:57:44,464][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:57:44,481][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:57:44,482][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:57:44,487][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:57:44,488][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 14:57:44,491][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 14:57:44,534][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-15 14:57:44,534][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 14:57:44,535][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "timeRange",
    "type": "type"
}
[2022-09-15 14:57:44,535][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'timeRange', 'type': 'type'}
[2022-09-15 14:57:44,535][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "timeRange",
    "type": "type"
}
[2022-09-15 14:57:45,018][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T06:57:44.377+00:00', 'status': 400, 'error': 'Bad Request', 'message': '', 'path': '/ethereum'}
[2022-09-15 15:00:37,878][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:00:37,878][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:00:37,879][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:00:37,880][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:00:37,880][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:00:37,887][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:00:37,888][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:00:37,892][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:00:37,892][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:00:37,895][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:01:41,806][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:01:41,807][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:01:41,808][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:01:41,808][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:01:41,808][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:01:41,811][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:01:41,812][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:01:41,815][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:01:41,815][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:01:41,818][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 747.4714729146486, 'date': '2022-09-13', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:01:41,859][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-15 15:01:41,860][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 15:01:41,860][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-15 15:01:41,860][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-15 15:01:41,860][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-15 15:01:42,485][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 465.2264229546994}]}
[2022-09-15 15:01:59,350][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:01:59,352][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:01:59,353][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:01:59,353][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:01:59,354][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:01:59,365][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:01:59,365][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:01:59,371][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:01:59,371][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:01:59,377][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [2996], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:01:59,443][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-15 15:01:59,443][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 15:01:59,443][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-15 15:01:59,444][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-15 15:01:59,444][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-15 15:02:00,018][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 465.2264229546994}]}
[2022-09-15 15:04:14,188][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:04:14,189][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:04:14,190][data_load.py 45][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:04:14,190][data_load.py 49][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:04:14,191][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:04:14,206][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:04:14,206][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:04:14,210][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:04:14,211][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:04:14,215][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:04:14,277][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-15 15:04:14,278][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 15:04:14,795][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-15 15:04:50,320][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:04:50,325][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:06:52,019][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:06:52,022][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:07:08,332][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:07:08,334][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:09:41,935][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:09:41,939][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:10:37,876][data_load.py 31][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:10:37,879][data_load.py 34][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:14:57,975][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:14:57,975][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:14:57,977][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:14:57,977][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:16:04,233][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:16:04,233][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:16:04,234][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:16:04,234][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:16:13,009][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:16:13,009][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:16:13,011][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:16:13,011][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:16:31,892][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:16:31,892][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:16:31,893][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:16:31,893][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:16:34,744][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:16:34,744][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:16:34,757][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:16:34,757][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:18:19,732][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:18:19,732][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:18:19,733][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:18:19,733][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:19:51,393][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:19:51,393][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:19:51,394][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:19:51,394][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:20:03,869][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:20:03,869][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:20:03,876][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:20:03,876][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:22:02,715][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:22:02,715][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:22:02,715][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:22:02,715][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:26:05,541][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:26:05,541][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:26:05,542][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:26:05,542][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:26:29,312][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:26:29,312][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:26:29,313][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:26:29,313][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:26:39,282][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:26:39,282][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:26:39,283][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:26:39,283][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:26:39,987][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:26:39,987][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:26:39,992][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:26:39,992][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:29:12,504][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:29:12,504][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:29:12,505][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:29:12,505][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:29:12,867][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:29:12,867][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:29:12,877][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:29:12,877][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:30:42,699][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:30:42,699][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:30:42,700][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:30:42,700][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:30:43,073][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:30:43,073][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:30:43,082][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:30:43,082][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:31:15,300][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:31:15,300][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:31:15,301][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:31:15,301][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:32:07,019][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:32:07,019][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:32:07,020][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:32:07,020][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:32:41,714][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:32:41,715][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:32:41,715][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:32:41,716][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:33:16,350][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:33:16,352][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:33:16,353][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:33:16,354][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:33:16,382][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:33:16,386][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:33:17,658][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:33:17,663][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:33:17,663][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:33:17,667][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:33:17,668][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:33:17,671][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:33:38,889][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:33:38,890][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:33:38,890][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:33:38,891][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:33:38,916][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:33:38,922][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:33:42,109][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:33:42,118][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:33:42,119][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:33:42,129][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:33:42,130][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:33:42,135][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:41:59,978][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:41:59,979][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:41:59,980][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:41:59,980][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:42:00,004][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:42:00,009][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:42:09,778][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:42:09,779][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:42:14,317][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:42:14,332][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:52:40,580][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:52:40,581][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:52:40,932][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:52:40,935][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:53:27,056][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:53:27,057][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:53:27,058][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:53:27,058][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:53:27,083][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:53:27,089][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:53:27,489][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:53:27,499][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:53:27,500][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:53:27,507][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:53:27,508][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:53:27,513][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:53:44,725][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:53:44,726][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:53:44,726][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:53:44,727][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:53:44,752][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:53:44,753][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:53:45,112][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:53:45,118][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:53:45,119][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:53:45,125][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:53:45,126][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:53:45,131][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:55:45,726][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:55:45,726][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:55:45,727][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:55:45,728][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:55:45,757][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:55:45,763][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:55:46,098][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:55:46,110][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:55:46,126][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/countCollectionNum
[2022-09-15 15:55:46,127][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 15:55:46,656][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': 2996}
[2022-09-15 15:56:01,854][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:56:01,855][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:56:01,856][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:56:01,857][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:56:01,885][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:56:01,892][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:56:02,230][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:56:02,240][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:56:02,241][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:56:02,244][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:56:02,254][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/ethereum
[2022-09-15 15:56:02,254][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 15:56:02,254][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-15 15:56:02,254][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH'}
[2022-09-15 15:56:02,255][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "timeRange": "ONE_DAY",
    "type": "TRANSACTION_FEE_ETH"
}
[2022-09-15 15:56:02,796][base_api.py 20][INFO]: 接口返回数据 ==>> {'code': 200, 'message': '操作成功', 'data': [{'date': '2022-09-14', 'type': 'TRANSACTION_FEE_ETH', 'countValue': 465.2264229546994}]}
[2022-09-15 15:56:24,079][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:56:24,080][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:56:24,081][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:56:24,081][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:56:24,106][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:56:24,107][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:56:34,475][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:56:34,489][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:56:34,491][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:56:34,499][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:56:34,499][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:56:34,504][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:57:11,628][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:57:11,629][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:57:11,630][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:57:11,630][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:57:11,665][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:57:11,670][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:57:12,365][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:57:12,374][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:57:12,375][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:57:12,383][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:57:12,384][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:57:12,388][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:57:37,765][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:57:37,766][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:57:37,767][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:57:37,767][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:57:37,792][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 15:57:37,801][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 15:57:38,138][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:57:38,151][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:57:38,151][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:57:38,156][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:57:38,156][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 15:57:38,160][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'}]} 
[2022-09-15 15:57:38,623][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 15:57:38,624][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 15:57:38,625][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 15:57:38,625][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 15:57:38,625][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 15:57:39,176][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T07:57:38.551+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 15:57:39,186][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 15:57:39,186][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 15:57:39,187][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 15:57:39,187][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 15:57:39,187][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 15:57:39,711][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T07:57:39.083+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:04:06,114][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:04:06,115][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:04:06,116][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:04:06,116][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:04:06,144][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:04:06,153][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:04:06,509][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:04:06,516][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:04:06,517][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:04:06,523][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:04:06,523][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:04:06,528][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:04:07,038][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:04:07,038][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:04:07,039][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:04:07,039][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 16:04:07,039][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:04:07,686][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:04:07.072+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:04:07,839][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:04:07,840][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:04:07,840][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:04:07,840][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 16:04:07,840][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:04:08,388][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:04:07.765+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:04:28,946][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:04:28,947][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:04:28,948][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:04:28,949][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:04:28,978][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:04:28,979][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:04:29,311][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:04:29,315][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:04:29,316][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:04:29,320][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:04:29,320][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:04:29,323][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:04:29,823][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:04:29,823][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:04:29,824][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:04:29,824][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 16:04:29,824][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:04:30,495][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:04:29.868+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:04:30,503][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:04:30,503][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:04:30,504][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:04:30,504][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 16:04:30,504][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:04:31,025][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:04:30.404+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:05:48,914][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:05:48,915][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:05:48,916][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:05:48,916][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:05:48,941][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:05:48,953][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:05:49,310][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:05:49,321][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:05:49,322][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:05:49,331][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:05:49,331][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:05:49,336][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'message': ''}, {'collectionUuid': 100002, 'execute_sql': 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'message': ''}]} 
[2022-09-15 16:05:50,170][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:05:50,171][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:05:50,171][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:05:50,171][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 16:05:50,172][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:05:50,698][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:05:50.081+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:05:50,839][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:05:50,840][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:05:50,840][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:05:50,840][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 16:05:50,841][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:05:51,363][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:05:50.740+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:16:53,964][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:16:53,964][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:16:53,965][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:16:53,965][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:16:53,993][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:16:54,005][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:16:54,322][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:16:54,338][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}]} 
[2022-09-15 16:16:54,339][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:16:54,347][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}]} 
[2022-09-15 16:16:54,347][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:16:54,351][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}]} 
[2022-09-15 16:16:54,854][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:16:54,855][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:16:54,856][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:16:54,856][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 16:16:54,856][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:16:55,471][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:16:54.850+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:16:55,487][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:16:55,487][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:16:55,488][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:16:55,488][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 16:16:55,489][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:16:55,991][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:16:55.375+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:17:51,201][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:17:51,201][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:17:51,202][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:17:51,203][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:17:51,227][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:17:51,240][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:17:51,580][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:17:51,584][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}]} 
[2022-09-15 16:17:51,584][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:17:51,588][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}]} 
[2022-09-15 16:17:51,588][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:17:51,595][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}]} 
[2022-09-15 16:17:52,606][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:17:52,606][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:17:52,606][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:17:52,606][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 16:17:52,606][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:17:53,287][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:17:52.662+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:17:53,297][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:17:53,298][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:17:53,298][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:17:53,298][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 16:17:53,298][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:17:53,760][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:17:53.137+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:56:38,514][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:56:38,514][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:56:38,515][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:56:38,516][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:56:38,544][data_load.py 44][INFO]: 加载 D:\code\newriver_api\config\config.ini 文件......
[2022-09-15 16:56:38,547][data_load.py 48][INFO]: 读到数据 ==>>  {'host': {'api_root_url': 'https://newrivertest.agentgo.me/dc/pc'}, 'mysql': {'MYSQL_HOST': '16.162.21.39', 'MYSQL_PORT': '13306', 'MYSQL_USER': 'root', 'MYSQL_PASSWD': 'root@123'}} 
[2022-09-15 16:56:41,132][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:56:41,140][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}]} 
[2022-09-15 16:56:41,141][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:56:41,144][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}]} 
[2022-09-15 16:56:41,145][data_load.py 30][INFO]: 加载 D:\code\newriver_api\data\test_collection.yaml 文件......
[2022-09-15 16:56:41,148][data_load.py 33][INFO]: 读到数据 ==>>  {'count_collection_num': [{'count_num': 2996}], 'ethereum': [{'timeRange': 'ONE_DAY', 'type': 'TRANSACTION_FEE_ETH', 'code': 200, 'countValue': 465.2264229546994, 'date': '2022-09-14', 'message': '操作成功'}], 'buy_and_trade_app': [{'collectionUuid': 100001, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"'], 'message': ''}, {'collectionUuid': 100002, 'execute_sql': ['select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100002"', 'select * from `hk-manhattan`.chain_collection_statistics where collection_uuid = "100001"'], 'message': ''}]} 
[2022-09-15 16:56:42,824][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:56:42,824][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:56:42,824][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:56:42,825][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100001}
[2022-09-15 16:56:42,825][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100001
}
[2022-09-15 16:56:43,489][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:56:42.879+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
[2022-09-15 16:56:43,499][base_api.py 70][INFO]: 接口请求地址 ==>> https://newrivertest.agentgo.me/dc/pc/collection/buyAndTrade/App
[2022-09-15 16:56:43,499][base_api.py 72][INFO]: 接口请求方式 ==>> GET
[2022-09-15 16:56:43,500][base_api.py 77][INFO]: 接口请求 params 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:56:43,500][base_api.py 83][INFO]: 接口上传附件 files 参数 ==>> {'collectionUuid': 100002}
[2022-09-15 16:56:43,500][base_api.py 85][INFO]: 接口 cookies 参数 ==>> {
    "collectionUuid": 100002
}
[2022-09-15 16:56:44,037][base_api.py 20][INFO]: 接口返回数据 ==>> {'timestamp': '2022-09-15T08:56:43.422+00:00', 'status': 404, 'error': 'Not Found', 'message': '', 'path': '/collection/buyAndTrade/App'}
